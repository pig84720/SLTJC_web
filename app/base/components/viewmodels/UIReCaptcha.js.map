{"version":3,"file":"UIReCaptcha.js","sources":["../../utils/PostMessage.js","../../utils/SecureData.js","UIReCaptcha.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by jerryhuang on 15/8/31.\n */\ndefine('PostMessage',['require'],function (require) {\n    var platform = '';\n    SS.namespace(\"SS.postMessage.callback\");\n    SS.postMessage.callback = SS.postMessage.callback || {};\n\n    var receiveMessage = function (e) {\n        //if (e.origin != iframeHost) return;\n        var data;\n        //ie8只能傳遞文字，無法傳遞物件\n        if (platform == 'ie8') {\n            data = JSON.parse(e.data);\n        } else {\n            data = e.data;\n        }\n        if (SS.postMessage.callback[data.callbackId] != null) {\n            SS.postMessage.callback[data.callbackId](data);\n            SS.postMessage.callback[data.callbackId] = null;\n        } else if (callbackFunction != null) {\n            callbackFunction(data);\n        }\n    };\n    var count = 0;\n    var callbackFunction;\n    return {\n        init: function (callback) {\n            //註冊接收訊息事件\n            if (window.addEventListener) {\n                window.addEventListener('message', receiveMessage);\n                platform = '';\n            } else if (window.attachEvent) {\n                window.attachEvent('onmessage', receiveMessage);\n                platform = 'ie8';\n            }\n            if (callback != null) {\n                callbackFunction = callback;\n            } else {\n                callbackFunction = null;\n            }\n        },\n        sendMessage: function (inVar) {\n            if (inVar.type == 'iframe' && document.getElementById(inVar.frameId) == null) return;\n            var framePage = (inVar.type == 'iframe' ? document.getElementById(inVar.frameId).contentWindow : (inVar.type == 'parent' ? window.parent : (inVar.type == 'opener' ? window.opener : null)));\n            var callbackId = inVar.callbackId != null ? inVar.callbackId : inVar.triggerFunction + (count++);\n            if (framePage) {\n                var postData = (platform == 'ie8' ? JSON.stringify({\n                    callbackId: callbackId,\n                    triggerFunction: inVar.triggerFunction,\n                    messageContent: inVar.messageContent\n                }) : {\n                    callbackId: callbackId,\n                    triggerFunction: inVar.triggerFunction,\n                    messageContent: inVar.messageContent\n                });\n                //ie8只能傳遞文字，無法傳遞物件\n                //if (platform == 'ie8') {\n                //    framePage.postMessage(postData, '*');\n                //} else {\n                    framePage.postMessage(postData, '*');\n                //}\n                SS.postMessage.callback[callbackId] = inVar.callback;\n            } else {\n                console.log('post message can\\'t find post target page!!');\n            }\n        },\n        getPlatform: function () {\n            return platform;\n        }\n    };\n});\n","define('SecureData',['require','PostMessage'],function (require) {\n    var baseUrl = '',\n        postMessage = require('PostMessage'),\n        count = 0,\n        checkAlive = {},\n        SSApiBaseUrl = '',\n        SVRNM = [],\n        guid = (new Date()).getTime();\n    postMessage.init();\n    //產出iFrame來進行postMessage的作業\n    var generateFrame = function (frameId) {\n            if ($('#' + frameId)[0] == null) {\n                $('<iframe>', {\n                    src: 'about:blank',\n                    id: frameId,\n                    name: frameId,\n                    frameborder: 0,\n                    scrolling: 'no',\n                    width: 0,\n                    height: 0\n                }).appendTo('body');\n            }\n        },\n    //確認postMessage的iFrame是否載入完成\n        postCheckAlive = function (i) {\n            //alert('postCheckAlive');\n            //if (document.getElementById(i.frameId).contentWindow == null) {\n            //    setTimeout(function () {\n            //        if (checkAlive[i.frameId] == false) {\n            //            postCheckAlive(i);\n            //        }\n            //    }, 300);\n            //    return;\n            //}\n            postMessage.sendMessage({\n                type: 'iframe',\n                frameId: i.frameId,\n                triggerFunction: 'checkAlive',\n                messageContent: '',\n                callback: function (data) {\n                    if (data.messageContent.result == true) {\n                        //alert('postCheckAlive callback');\n                        checkAlive[i.postId] = true;\n                        postAjaxData(i);\n                    }\n                }\n            });\n            //console.log(typeof(checkAlive[i.frameId]));\n            //console.log(i.params.PARMS);\n            if (checkAlive[i.postId] == false) {\n                setTimeout(function () {\n                    //alert('postCheckAlive fail');\n                    //console.log(i.params.PARMS);\n                    if (checkAlive[i.postId] == false) {\n                        postCheckAlive(i);\n                    }\n                }, 300);\n            }\n        },\n    //執行postMessage作業至iFrame中進行ajax呼叫WebApi\n        postAjaxData = function (i) {\n            postMessage.sendMessage({\n                type: 'iframe',\n                frameId: i.frameId,\n                triggerFunction: 'doAjaxCallWithOutBaseUrl',\n                messageContent: {\n                    url: i.url,\n                    connectType: i.connectType,\n                    params: i.params,\n                    dataType: i.dataType == null ? 'json' : i.dataType\n                },\n                callback: function (data) {\n                    SS.mask.hide();\n                    //console.log(data);\n                    if (data.messageContent.result == true) {\n                        i.dfd1.resolve(data.messageContent.data);\n                    } else {\n                        i.dfd1.reject();\n                    }\n                    //$('#' + i.frameId).remove();\n                }\n            });\n        },\n        setCookie = function (name, value, days) {\n            if (days) {\n                var date = new Date();\n                date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\n                var expires = \"; expires=\" + date.toGMTString();\n            }\n            else var expires = \"\";\n            document.cookie = name + \"=\" + value + expires + \"; path=/\";\n        },\n        getCookie = function (name) {\n            var nameEQ = name + \"=\";\n            var ca = document.cookie.split(';');\n            for (var i = 0; i < ca.length; i++) {\n                var c = ca[i];\n                while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n                if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n            }\n            return null;\n        },\n        deleteCookie = function (name) {\n            setCookie(name, \"\", -1);\n        };\n    return {\n        //設定WebApi網址\n        setBsaeUrl: function (url) {\n            baseUrl = url;\n        },\n        setSSApiBsaeUrl: function (url) {\n            SSApiBaseUrl = url;\n        },\n        setServerInfo: function (serverInfo) {\n            SVRNM = serverInfo;\n        },\n        doAjaxCall: function (i) {\n            var dfd1 = $.Deferred(),\n                url = baseUrl + i.url,\n                postId = 'doAjaxCall' + (count++),\n                frameId = 'doAjaxCall' + guid;\n            if ($('#' + frameId)[0]) {\n                SS.mask.show();\n                checkAlive[postId] = false;\n                postCheckAlive({\n                    frameId: frameId,\n                    postId: postId,\n                    url: url,\n                    connectType: i.connectType,\n                    params: i.params,\n                    dfd1: dfd1\n                });\n            } else {\n                generateFrame(frameId);\n                SS.mask.show();\n                $('#' + frameId).load(function () {\n                    checkAlive[postId] = false;\n                    setTimeout(function () {\n                        postCheckAlive({\n                            frameId: frameId,\n                            postId: postId,\n                            url: url,\n                            connectType: i.connectType,\n                            params: i.params,\n                            dfd1: dfd1\n                        });\n                    }, 300);\n                });\n                $('#' + frameId).attr('src', baseUrl + 'proxyPage/proxyPage.html');\n            }\n            return dfd1.promise();\n        },\n        doSSApiAjaxCall: function (i) {\n            var token = getCookie('Token');\n            var dfd1 = $.Deferred(),\n                url = SSApiBaseUrl + i.url + '?Token=' + encodeURIComponent(token),\n                postId = 'doAjaxCall' + (count++),\n                frameId = 'doAjaxCall' + guid;\n\n            if (token == null && url != SSApiBaseUrl + \"API/Login\") {\n                alert(\"請重新登入取得認證!\");\n                var result = {\n                    readyState: 4,\n                    responseText: \"請重新登入取得認證!\",\n                    status: -1,\n                    statusText: \"InvalidToken\"\n\n                };\n                dfd1.reject(result);\n                return;\n            }\n\n            if ($('#' + frameId)[0]) {\n                SS.mask.show();\n                checkAlive[postId] = false;\n                postCheckAlive({\n                    frameId: frameId,\n                    postId: postId,\n                    url: url,\n                    connectType: i.connectType,\n                    params: i.params,\n                    dfd1: dfd1\n                });\n            } else {\n                generateFrame(frameId);\n\n                var $frame = $('#' + frameId);\n\n                SS.mask.show();\n                $frame.load(function () {\n                    checkAlive[postId] = false;\n                    setTimeout(function () {\n                        postCheckAlive({\n                            frameId: frameId,\n                            postId: postId,\n                            url: url,\n                            connectType: i.connectType,\n                            params: i.params,\n                            dfd1: dfd1\n                        });\n                    }, 300);\n                });\n                $frame.attr('src', SSApiBaseUrl + 'proxyPage/proxyPage.html');\n            }\n            return dfd1.promise();\n        },\n        doAjaxCallWithOutBaseUrl: function (i) {\n            var dfd1 = $.Deferred(),\n                frameId = 'doAjaxCallWithOutBaseUrl' + (count++);\n            generateFrame(frameId);\n            SS.mask.show();\n            $('#' + frameId).load(function () {\n                checkAlive[frameId] = false;\n                setTimeout(function () {\n                    postCheckAlive({\n                        frameId: frameId,\n                        url: i.url,\n                        connectType: i.connectType,\n                        params: i.params,\n                        dfd1: dfd1\n                    });\n                }, 100);\n            });\n            $('#' + frameId).attr('src', baseUrl + 'proxyPage/proxyPage.html');\n            return dfd1.promise();\n        },\n        getSpToExcel: function (PARMS) {\n            this.doAjaxCall({\n                url: 'api/Excel/SpToExcel',\n                connectType: 'POST',\n                params: PARMS\n            }).done(function (data) {\n                if (data.ReturnCode == false) {\n                    alert('匯出資料發生錯誤！' + data.Message);\n                    return;\n                } else {\n                    alert('匯出資料成功！');\n                    window.open(data.Data, '_self', '');\n                }\n            }).fail(function () {\n                alert('網路連線異常，請重新執行!');\n            });\n        },\n        jsonToExcel: function (PARMS) {\n            var DataList = [];\n            for (var i = 0; i < PARMS.dataList.length; i++) {\n                DataList.push(JSON.stringify(PARMS.dataList[i]));\n            }\n            //var params = {\n            //    ColumnName: PARMS.columnName,\n            //    DataList: DataList,\n            //    FileName: PARMS.fileName//,\n            //    //csvEnable: PARMS.csvEnable,\n            //    //csvMark: PARMS.csvMark == null ? ',' : PARMS.csvMark\n            //};\n            var params = {};\n            for (var key in PARMS) {\n                var execKey = key;\n                switch (execKey) {\n                    case 'columnName':\n                        execKey = 'ColumnName';\n                        break;\n                    case 'fileName':\n                        execKey = 'FileName';\n                        break;\n                    case 'dataList':\n                        execKey = 'DataList';\n                        break;\n                }\n                if (key == 'dataList') {\n                    params[execKey] = DataList;\n                } else {\n                    params[execKey] = PARMS[key];\n                }\n            }\n            console.log(params);\n            this.doAjaxCall({\n                url: 'api/Excel/JsonToExcel',\n                connectType: 'POST',\n                params: params\n            }).done(function (data) {\n                if (data.Result == false) {\n                    alert('匯出資料發生錯誤！' + data.Message);\n                    return;\n                } else {\n                    alert('匯出資料成功！');\n                    window.open(PARMS.zipFile ? data.ZipUri : data.ExcelUri, '_self', '');\n                }\n            }).fail(function () {\n                alert('網路連線異常，請重新執行!');\n            })\n        },\n        getClientIp: function () {\n            return this.doSSApiAjaxCall({\n                url: 'API/ClientInfo',\n                connectType: 'GET',\n                params: '',\n                dataType: 'text'\n            });\n        },\n        exeLogin: function (i) {\n            var PARMS = {\n                LANGRSCD: i.LANGRSCD,\n                USRID: i.USRID,\n                PSWD: i.PSWD,\n                TokenTimeout: 0\n            };\n            return this.doSSApiAjaxCall({\n                url: 'API/Login',\n                connectType: 'POST',\n                params: PARMS\n            });\n        },\n        exeSPRetB: function (i) {\n            var PARMS = {\n                SPNM: i.SPNM,\n                SVRNM: i.SVRNM ? i.SVRNM : SVRNM,\n                PARMS: i.PARMS\n            };\n            return this.doSSApiAjaxCall({\n                url: 'API/SPRetB',\n                connectType: 'POST',\n                params: PARMS\n            });\n        },\n        exeSP: function (i) {\n            var PARMS = {\n                SPNM: i.SPNM,\n                SVRNM: i.SVRNM == null ? SVRNM : i.SVRNM,\n                PARMS: i.PARMS\n            };\n            return this.doSSApiAjaxCall({\n                url: 'API/ExeSP',\n                connectType: 'POST',\n                params: PARMS\n            });\n        },\n        exeBatchSP: function (i) {\n            var PARMS = {\n                SPNM: i.SPNM,\n                SVRNM: i.SVRNM == null ? SVRNM : i.SVRNM,\n                PARMS: i.PARMS\n            };\n            return this.doSSApiAjaxCall({\n                url: 'API/ExeBatchSP',\n                connectType: 'POST',\n                params: PARMS\n            });\n        },\n        exeSPB2: function (i) {\n            var PARMS = {\n                SPNM: i.SPNM,\n                SPNM1: i.SPNM1,\n                SVRNM: i.SVRNM == null ? SVRNM : i.SVRNM,\n                PARMS: i.PARMS,\n                PARMS1: i.PARMS1\n            };\n            return this.doSSApiAjaxCall({\n                url: 'API/ExeSPB2',\n                connectType: 'POST',\n                params: PARMS\n            });\n        },\n        exeSPT2: function (i) {\n            var PARMS = {\n                SPNM: i.SPNM,\n                SPNM1: i.SPNM1,\n                SVRNM: i.SVRNM == null ? SVRNM : i.SVRNM,\n                PARMS: i.PARMS,\n                PARMS1: i.PARMS1\n            };\n            return this.doSSApiAjaxCall({\n                url: 'API/ExeSPT2',\n                connectType: 'POST',\n                params: PARMS\n            });\n        },\n        exeSPT3: function (i) {\n            var PARMS = {\n                SPNM: i.SPNM,\n                SPNM1: i.SPNM1,\n                SVRNM: i.SVRNM == null ? SVRNM : i.SVRNM,\n                PARMS: i.PARMS,\n                PARMS1: i.PARMS1\n            };\n            return this.doSSApiAjaxCall({\n                url: 'API/ExeSPT3',\n                connectType: 'POST',\n                params: PARMS\n            });\n        },\n        exeSPSS: function (i) {\n            var PARMS = {\n                SPNM: i.SPNM,\n                SPNM1: i.SPNM1,\n                SPNM2: i.SPNM2,\n                SPNM3: i.SPNM3,\n                SVRNM: i.SVRNM == null ? SVRNM : i.SVRNM,\n                PARMS: i.PARMS,\n                PARMS1: i.PARMS1,\n                PARMS2: i.PARMS2,\n                PARMS3: i.PARMS3\n            };\n            return this.doSSApiAjaxCall({\n                url: 'API/ExeSPSS',\n                connectType: 'POST',\n                params: PARMS\n            });\n        },\n        exeMultiArr: function (i) {\n            var PARMS = {\n                SVRNM: i.SVRNM == null ? SVRNM : i.SVRNM,\n                SPNM: i.SPNM,\n                PARMARR: i.PARMS,\n                SP_ParmArr: i.PARMARR\n            };\n            return this.doSSApiAjaxCall({\n                url: 'API/ExeMultiArr',\n                connectType: 'POST',\n                params: PARMS\n            });\n        },\n        exeMultiAppend: function (i) {\n            var PARMS = {\n                SVRNM: i.SVRNM == null ? SVRNM : i.SVRNM,\n                SPNM: i.SPNM,\n                PARMARR: i.PARMS,\n                SP_ParmArr: i.PARMARR\n            };\n            return this.doSSApiAjaxCall({\n                url: 'API/ExeMultiAppend',\n                connectType: 'POST',\n                params: PARMS\n            });\n        },\n        exeBatchArr: function (i) {\n            var PARMS = {\n                SPNM: i.SPNM,\n                SVRNM: i.SVRNM == null ? SVRNM : i.SVRNM,\n                PARMS: i.PARMS\n            };\n            return this.doSSApiAjaxCall({\n                url: 'API/ExeBatchArr',\n                connectType: 'POST',\n                params: PARMS\n            });\n        },\n        spExeBatchMultiArr: function (i) {\n            var PARMS = {\n                SPNM: i.SPNM,\n                SVRNM: i.SVRNM == null ? SVRNM : i.SVRNM,\n                PARMS: i.PARMS,\n                IsTransaction: i.isTransaction\n            };\n            return this.doSSApiAjaxCall({\n                url: 'API/SPExeBatchMultiArr',\n                connectType: 'POST',\n                params: PARMS\n            });\n        }\n    };\n});\n","/**\n * Created by jerryhuang on 15/7/29.\n */\ndefine('base/components/viewmodels/UIReCaptcha',['require','SecureData'],function (require) {\n    var secureData = require('SecureData'),\n        grecaptchaArray = [];\n    return {\n        init: function (id, vm) {\n            var verifyCallback = function (response) {\n                // console.log('verifyCallback');\n                // console.log(arguments);\n                secureData.setBsaeUrl(SS.service.baseUrl);\n                secureData.doAjaxCall({\n                    url: 'API/Captcha/verifyReCaptcha',\n                    connectType: 'post',\n                    params: {\n                        reCaptchaResponse: $('#g-recaptcha-response').val(),\n                        remoteIp: ''\n                    }\n                }).done(function (data) {\n                    if (data.Result == true) {\n                        vm.viewModel.verifyResult(true);\n                        if (vm.viewModel.callback) {\n                            vm.viewModel.callback(data);\n                        }\n                    } else {\n                        vm.viewModel.verifyResult(false);\n                        if (grecaptchaArray.length > 0) {\n                            var recaptchaSetting = $.grep(grecaptchaArray, function (item, index) {\n                                return item.id = vm.viewModel.id();\n                            });\n                            if (recaptchaSetting.length > 0) {\n                                console.log(recaptchaSetting[0].opt_widget_id);\n                                grecaptcha.reset(recaptchaSetting[0].opt_widget_id);\n                            }\n                        }\n                    }\n                }).fail(function () {\n                    vm.viewModel.verifyResult(false);\n                    if (grecaptchaArray.length > 0) {\n                        var recaptchaSetting = $.grep(grecaptchaArray, function (item, index) {\n                            return item.id = vm.viewModel.id();\n                        });\n                        if (recaptchaSetting.length > 0) {\n                            grecaptcha.reset(recaptchaSetting[0].opt_widget_id);\n                        }\n                    }\n                });\n            };\n            var expireCallback = function () {\n                // console.log(arguments);\n                vm.viewModel.verifyResult(false);\n                if (vm.viewModel.expireCallback) {\n                    vm.viewModel.expireCallback();\n                }\n            };\n            grecaptchaArray.push({\n                id: vm.viewModel.id(),\n                setting: {\n                    'sitekey': vm.viewModel.siteKey(),\n                    'callback': verifyCallback,\n                    'theme': vm.viewModel.theme(),\n                    'expired-callback': expireCallback\n                }\n            });\n            require(['https://www.google.com/recaptcha/api.js?onload=onloadCallback&render=explicit'], function () {\n                window.onloadCallback = function () {\n                    for (var i = 0; i < grecaptchaArray.length; i++) {\n                        var grecaptchaSetting = grecaptchaArray[i];\n                        grecaptchaSetting['opt_widget_id'] = grecaptcha.render(grecaptchaSetting.id, grecaptchaSetting.setting);\n                        // console.log(grecaptchaSetting);\n                    }\n                    // grecaptcha.render(vm.viewModel.id(), {\n                    //     'sitekey': vm.viewModel.siteKey(),\n                    //     'callback': verifyCallback,\n                    //     'theme': vm.viewModel.theme(),\n                    //     'expired-callback': expireCallback\n                    // });\n                };\n            });\n        }\n    };\n});\n"]}