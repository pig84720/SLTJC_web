{"version":3,"file":"UIJqxComboBox.js","sources":["../../resources/scripts/jqwidgets/jqxcore.js","../../resources/scripts/jqwidgets/jqxlistbox.js","../../resources/scripts/jqwidgets/jqxbuttons.js","../../resources/scripts/jqwidgets/jqxscrollbar.js","../../resources/scripts/jqwidgets/jqxdata.js","../../resources/scripts/jqwidgets/jqxcombobox.js","../../utils/Common.js","../../utils/Grid.DropDownList.js","../../utils/Check.js","../../utils/Grid.Date.js","../../utils/Grid.Numeric.js","../../utils/Grid.js","UIJqxComboBox.js"],"names":[],"mappings":"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","sourcesContent":["/*\r\njQWidgets v4.1.2 (2016-Apr)\r\nCopyright (c) 2011-2016 jQWidgets.\r\nLicense: http://jqwidgets.com/license/\r\n*/\r\n\r\nvar jqxBaseFramework=window.minQuery||window.jQuery;(function(a){a.jqx=a.jqx||{};a.jqx.define=function(b,c,d){b[c]=function(){if(this.baseType){this.base=new b[this.baseType]();this.base.defineInstance()}this.defineInstance()};b[c].prototype.defineInstance=function(){};b[c].prototype.base=null;b[c].prototype.baseType=undefined;if(d&&b[d]){b[c].prototype.baseType=d}};a.jqx.invoke=function(e,d){if(d.length==0){return}var f=typeof(d)==Array||d.length>0?d[0]:d;var c=typeof(d)==Array||d.length>1?Array.prototype.slice.call(d,1):a({}).toArray();while(e[f]==undefined&&e.base!=null){if(e[f]!=undefined&&a.isFunction(e[f])){return e[f].apply(e,c)}if(typeof f==\"string\"){var b=f.toLowerCase();if(e[b]!=undefined&&a.isFunction(e[b])){return e[b].apply(e,c)}}e=e.base}if(e[f]!=undefined&&a.isFunction(e[f])){return e[f].apply(e,c)}if(typeof f==\"string\"){var b=f.toLowerCase();if(e[b]!=undefined&&a.isFunction(e[b])){return e[b].apply(e,c)}}return};a.jqx.hasProperty=function(c,b){if(typeof(b)==\"object\"){for(var e in b){var d=c;while(d){if(d.hasOwnProperty(e)){return true}if(d.hasOwnProperty(e.toLowerCase())){return true}d=d.base}return false}}else{while(c){if(c.hasOwnProperty(b)){return true}if(c.hasOwnProperty(b.toLowerCase())){return true}c=c.base}}return false};a.jqx.hasFunction=function(e,d){if(d.length==0){return false}if(e==undefined){return false}var f=typeof(d)==Array||d.length>0?d[0]:d;var c=typeof(d)==Array||d.length>1?Array.prototype.slice.call(d,1):{};while(e[f]==undefined&&e.base!=null){if(e[f]&&a.isFunction(e[f])){return true}if(typeof f==\"string\"){var b=f.toLowerCase();if(e[b]&&a.isFunction(e[b])){return true}}e=e.base}if(e[f]&&a.isFunction(e[f])){return true}if(typeof f==\"string\"){var b=f.toLowerCase();if(e[b]&&a.isFunction(e[b])){return true}}return false};a.jqx.isPropertySetter=function(c,b){if(b.length==1&&typeof(b[0])==\"object\"){return true}if(b.length==2&&typeof(b[0])==\"string\"&&!a.jqx.hasFunction(c,b)){return true}return false};a.jqx.validatePropertySetter=function(f,d,b){if(!a.jqx.propertySetterValidation){return true}if(d.length==1&&typeof(d[0])==\"object\"){for(var e in d[0]){var g=f;while(!g.hasOwnProperty(e)&&g.base){g=g.base}if(!g||!g.hasOwnProperty(e)){if(!b){var c=g.hasOwnProperty(e.toString().toLowerCase());if(!c){throw\"Invalid property: \"+e}else{return true}}return false}}return true}if(d.length!=2){if(!b){throw\"Invalid property: \"+d.length>=0?d[0]:\"\"}return false}while(!f.hasOwnProperty(d[0])&&f.base){f=f.base}if(!f||!f.hasOwnProperty(d[0])){if(!b){throw\"Invalid property: \"+d[0]}return false}return true};if(!Object.keys){Object.keys=(function(){var d=Object.prototype.hasOwnProperty,e=!({toString:null}).propertyIsEnumerable(\"toString\"),c=[\"toString\",\"toLocaleString\",\"valueOf\",\"hasOwnProperty\",\"isPrototypeOf\",\"propertyIsEnumerable\",\"constructor\"],b=c.length;return function(h){if(typeof h!==\"object\"&&(typeof h!==\"function\"||h===null)){throw new TypeError(\"Object.keys called on non-object\")}var f=[],j,g;for(j in h){if(d.call(h,j)){f.push(j)}}if(e){for(g=0;g<b;g++){if(d.call(h,c[g])){f.push(c[g])}}}return f}}())}a.jqx.set=function(e,h){var c=0;if(h.length==1&&typeof(h[0])==\"object\"){if(e.isInitialized&&Object.keys&&Object.keys(h[0]).length>1){var f=!e.base?e.element:e.base.element;var b=a.data(f,e.widgetName).initArgs;if(b&&JSON&&JSON.stringify&&h[0]&&b[0]){try{if(JSON.stringify(h[0])==JSON.stringify(b[0])){var g=true;a.each(h[0],function(l,m){if(e[l]!=m){g=false;return false}});if(g){return}}}catch(d){}}e.batchUpdate=h[0];var j={};var k={};a.each(h[0],function(l,m){var n=e;while(!n.hasOwnProperty(l)&&n.base!=null){n=n.base}if(n.hasOwnProperty(l)){if(e[l]!=m){j[l]=e[l];k[l]=m;c++}}else{if(n.hasOwnProperty(l.toLowerCase())){if(e[l.toLowerCase()]!=m){j[l.toLowerCase()]=e[l.toLowerCase()];k[l.toLowerCase()]=m;c++}}}});if(c<2){e.batchUpdate=null}}a.each(h[0],function(l,m){var n=e;while(!n.hasOwnProperty(l)&&n.base!=null){n=n.base}if(n.hasOwnProperty(l)){a.jqx.setvalueraiseevent(n,l,m)}else{if(n.hasOwnProperty(l.toLowerCase())){a.jqx.setvalueraiseevent(n,l.toLowerCase(),m)}else{if(a.jqx.propertySetterValidation){throw\"jqxCore: invalid property '\"+l+\"'\"}}}});if(e.batchUpdate!=null){e.batchUpdate=null;if(e.propertiesChangedHandler&&c>1){e.propertiesChangedHandler(e,j,k)}}}else{if(h.length==2){while(!e.hasOwnProperty(h[0])&&e.base){e=e.base}if(e.hasOwnProperty(h[0])){a.jqx.setvalueraiseevent(e,h[0],h[1])}else{if(e.hasOwnProperty(h[0].toLowerCase())){a.jqx.setvalueraiseevent(e,h[0].toLowerCase(),h[1])}else{if(a.jqx.propertySetterValidation){throw\"jqxCore: invalid property '\"+h[0]+\"'\"}}}}}};a.jqx.setvalueraiseevent=function(c,d,e){var b=c[d];c[d]=e;if(!c.isInitialized){return}if(c.propertyChangedHandler!=undefined){c.propertyChangedHandler(c,d,b,e)}if(c.propertyChangeMap!=undefined&&c.propertyChangeMap[d]!=undefined){c.propertyChangeMap[d](c,d,b,e)}};a.jqx.get=function(e,d){if(d==undefined||d==null){return undefined}if(e.propertyMap){var c=e.propertyMap(d);if(c!=null){return c}}if(e.hasOwnProperty(d)){return e[d]}if(e.hasOwnProperty(d.toLowerCase())){return e[d.toLowerCase()]}var b=undefined;if(typeof(d)==Array){if(d.length!=1){return undefined}b=d[0]}else{if(typeof(d)==\"string\"){b=d}}while(!e.hasOwnProperty(b)&&e.base){e=e.base}if(e){return e[b]}return undefined};a.jqx.serialize=function(e){var b=\"\";if(a.isArray(e)){b=\"[\";for(var d=0;d<e.length;d++){if(d>0){b+=\", \"}b+=a.jqx.serialize(e[d])}b+=\"]\"}else{if(typeof(e)==\"object\"){b=\"{\";var c=0;for(var d in e){if(c++>0){b+=\", \"}b+=d+\": \"+a.jqx.serialize(e[d])}b+=\"}\"}else{b=e.toString()}}return b};a.jqx.propertySetterValidation=true;a.jqx.jqxWidgetProxy=function(g,c,b){var d=a(c);var f=a.data(c,g);if(f==undefined){return undefined}var e=f.instance;if(a.jqx.hasFunction(e,b)){return a.jqx.invoke(e,b)}if(a.jqx.isPropertySetter(e,b)){if(a.jqx.validatePropertySetter(e,b)){a.jqx.set(e,b);return undefined}}else{if(typeof(b)==\"object\"&&b.length==0){return}else{if(typeof(b)==\"object\"&&b.length==1&&a.jqx.hasProperty(e,b[0])){return a.jqx.get(e,b[0])}else{if(typeof(b)==\"string\"&&a.jqx.hasProperty(e,b[0])){return a.jqx.get(e,b)}}}}throw\"jqxCore: Invalid parameter '\"+a.jqx.serialize(b)+\"' does not exist.\";return undefined};a.jqx.applyWidget=function(c,d,k,l){var g=false;try{g=window.MSApp!=undefined}catch(f){}var m=a(c);if(!l){l=new a.jqx[\"_\"+d]()}else{l.host=m;l.element=c}if(c.id==\"\"){c.id=a.jqx.utilities.createId()}var j={host:m,element:c,instance:l,initArgs:k};l.widgetName=d;a.data(c,d,j);a.data(c,\"jqxWidget\",j.instance);var h=new Array();var l=j.instance;while(l){l.isInitialized=false;h.push(l);l=l.base}h.reverse();h[0].theme=a.jqx.theme||\"\";a.jqx.jqxWidgetProxy(d,c,k);for(var b in h){l=h[b];if(b==0){l.host=m;l.element=c;l.WinJS=g}if(l!=undefined){if(l.definedInstance){l.definedInstance()}if(l.createInstance!=null){if(g){MSApp.execUnsafeLocalFunction(function(){l.createInstance(k)})}else{l.createInstance(k)}}}}for(var b in h){if(h[b]!=undefined){h[b].isInitialized=true}}if(g){MSApp.execUnsafeLocalFunction(function(){j.instance.refresh(true)})}else{j.instance.refresh(true)}};a.jqx.jqxWidget=function(b,c,f){var j=false;try{jqxArgs=Array.prototype.slice.call(f,0)}catch(h){jqxArgs=\"\"}try{j=window.MSApp!=undefined}catch(h){}var g=b;var l=\"\";if(c){l=\"_\"+c}a.jqx.define(a.jqx,\"_\"+g,l);var k=new Array();if(!window[g]){var d=function(m){if(m==null){return\"\"}var e=a.type(m);switch(e){case\"string\":case\"number\":case\"date\":case\"boolean\":case\"bool\":if(m===null){return\"\"}return m.toString()}var n=\"\";a.each(m,function(p){var r=this;if(p>0){n+=\", \"}n+=\"[\";var o=0;if(a.type(r)==\"object\"){for(var q in r){if(o>0){n+=\", \"}n+=\"{\"+q+\":\"+r[q]+\"}\";o++}}else{if(o>0){n+=\", \"}n+=\"{\"+p+\":\"+r+\"}\";o++}n+=\"]\"});return n};window[g]=function(e,r){var m=[];if(!r){r={}}m.push(r);var n=e;if(a.type(n)===\"object\"&&e[0]){n=e[0].id;if(n===\"\"){n=e[0].id=a.jqx.utilities.createId()}}if(window.jqxWidgets&&window.jqxWidgets[n]){if(r){a.each(window.jqxWidgets[n],function(s){var t=a(this.element).data();if(t&&t.jqxWidget){a(this.element)[g](r)}})}if(window.jqxWidgets[n].length==1){var p=a(window.jqxWidgets[n][0].widgetInstance.element).data();if(p&&p.jqxWidget){return window.jqxWidgets[n][0]}}var p=a(window.jqxWidgets[n][0].widgetInstance.element).data();if(p&&p.jqxWidget){return window.jqxWidgets[n]}}var o=a(e);if(o.length===0){throw new Error(\"Invalid Selector - \"+e+\"! Please, check whether the used ID or CSS Class name is correct.\")}var q=[];a.each(o,function(v){var x=o[v];var u=null;if(!k[g]){var y=x.id;x.id=\"\";u=a(x).clone();x.id=y}a.jqx.applyWidget(x,g,m,undefined);if(!k[g]){var t=a.data(x,\"jqxWidget\");var w=u[g]().data().jqxWidget.defineInstance();var s=function(A){var z=a.data(A,\"jqxWidget\");this.widgetInstance=z;var B=a.extend(this,z);B.on=function(C,D){B.addHandler(B.host,C,D)};B.off=function(C){B.removeHandler(B.host,C)};return B};k[g]=s;a.each(w,function(A,z){Object.defineProperty(s.prototype,A,{get:function(){if(this.widgetInstance){return this.widgetInstance[A]}return z},set:function(C){if(this.widgetInstance&&this.widgetInstance[A]!=C){if(this.widgetInstance[A]!=C&&d(this.widgetInstance[A])!=d(C)){var B={};B[A]=C;this.widgetInstance.host[g](B);this.widgetInstance[A]=C}}}})})}var t=new k[g](x);q.push(t);if(!window.jqxWidgets){window.jqxWidgets=new Array()}if(!window.jqxWidgets[n]){window.jqxWidgets[n]=new Array()}window.jqxWidgets[n].push(t)});if(q.length===1){return q[0]}return q}}a.fn[g]=function(){var e=Array.prototype.slice.call(arguments,0);if(e.length==0||(e.length==1&&typeof(e[0])==\"object\")){if(this.length==0){if(this.selector){throw new Error(\"Invalid Selector - \"+this.selector+\"! Please, check whether the used ID or CSS Class name is correct.\")}else{throw new Error(\"Invalid Selector! Please, check whether the used ID or CSS Class name is correct.\")}}return this.each(function(){var p=a(this);var o=this;var q=a.data(o,g);if(q==null){a.jqx.applyWidget(o,g,e,undefined)}else{a.jqx.jqxWidgetProxy(g,this,e)}})}else{if(this.length==0){if(this.selector){throw new Error(\"Invalid Selector - \"+this.selector+\"! Please, check whether the used ID or CSS Class name is correct.\")}else{throw new Error(\"Invalid Selector! Please, check whether the used ID or CSS Class name is correct.\")}}var n=null;var m=0;this.each(function(){var o=a.jqx.jqxWidgetProxy(g,this,e);if(m==0){n=o;m++}else{if(m==1){var p=[];p.push(n);n=p}n.push(o)}})}return n};try{a.extend(a.jqx[\"_\"+g].prototype,Array.prototype.slice.call(f,0)[0])}catch(h){}a.extend(a.jqx[\"_\"+g].prototype,{toThemeProperty:function(e,m){return a.jqx.toThemeProperty(this,e,m)}});a.jqx[\"_\"+g].prototype.refresh=function(){if(this.base){this.base.refresh(true)}};a.jqx[\"_\"+g].prototype.createInstance=function(){};a.jqx[\"_\"+g].prototype.applyTo=function(n,m){if(!(m instanceof Array)){var e=[];e.push(m);m=e}a.jqx.applyWidget(n,g,m,this)};a.jqx[\"_\"+g].prototype.getInstance=function(){return this};a.jqx[\"_\"+g].prototype.propertyChangeMap={};a.jqx[\"_\"+g].prototype.addHandler=function(o,e,m,n){a.jqx.addHandler(o,e,m,n)};a.jqx[\"_\"+g].prototype.removeHandler=function(n,e,m){a.jqx.removeHandler(n,e,m)}};a.jqx.toThemeProperty=function(c,d,h){if(c.theme==\"\"){return d}var g=d.split(\" \");var b=\"\";for(var f=0;f<g.length;f++){if(f>0){b+=\" \"}var e=g[f];if(h!=null&&h){b+=e+\"-\"+c.theme}else{b+=e+\" \"+e+\"-\"+c.theme}}return b};a.jqx.addHandler=function(g,h,e,f){var c=h.split(\" \");for(var b=0;b<c.length;b++){var d=c[b];if(window.addEventListener){switch(d){case\"mousewheel\":if(a.jqx.browser.mozilla){g[0].addEventListener(\"DOMMouseScroll\",e,false)}else{g[0].addEventListener(\"mousewheel\",e,false)}continue;case\"mousemove\":if(!f){g[0].addEventListener(\"mousemove\",e,false);continue}break}}if(f==undefined||f==null){if(g.on){g.on(d,e)}else{g.bind(d,e)}}else{if(g.on){g.on(d,f,e)}else{g.bind(d,f,e)}}}};a.jqx.removeHandler=function(f,g,e){if(!g){if(f.off){f.off()}else{f.unbind()}return}var c=g.split(\" \");for(var b=0;b<c.length;b++){var d=c[b];if(window.removeEventListener){switch(d){case\"mousewheel\":if(a.jqx.browser.mozilla){f[0].removeEventListener(\"DOMMouseScroll\",e,false)}else{f[0].removeEventListener(\"mousewheel\",e,false)}continue;case\"mousemove\":if(e){f[0].removeEventListener(\"mousemove\",e,false);continue}break}}if(d==undefined){if(f.off){f.off()}else{f.unbind()}continue}if(e==undefined){if(f.off){f.off(d)}else{f.unbind(d)}}else{if(f.off){f.off(d,e)}else{f.unbind(d,e)}}}};a.jqx.theme=a.jqx.theme||\"\";a.jqx.scrollAnimation=a.jqx.scrollAnimation||false;a.jqx.resizeDelay=a.jqx.resizeDelay||10;a.jqx.ready=function(){a(window).trigger(\"jqxReady\")};a.jqx.init=function(){a.each(arguments[0],function(b,c){if(b==\"theme\"){a.jqx.theme=c}if(b==\"scrollBarSize\"){a.jqx.utilities.scrollBarSize=c}if(b==\"touchScrollBarSize\"){a.jqx.utilities.touchScrollBarSize=c}if(b==\"scrollBarButtonsVisibility\"){a.jqx.utilities.scrollBarButtonsVisibility=c}})};a.jqx.utilities=a.jqx.utilities||{};a.extend(a.jqx.utilities,{scrollBarSize:15,touchScrollBarSize:0,scrollBarButtonsVisibility:\"visible\",createId:function(){var b=function(){return(((1+Math.random())*65536)|0).toString(16).substring(1)};return\"jqxWidget\"+b()+b()},setTheme:function(f,g,e){if(typeof e===\"undefined\"){return}var h=e[0].className.split(\" \"),b=[],j=[],d=e.children();for(var c=0;c<h.length;c+=1){if(h[c].indexOf(f)>=0){if(f.length>0){b.push(h[c]);j.push(h[c].replace(f,g))}else{j.push(h[c].replace(\"-\"+g,\"\")+\"-\"+g)}}}this._removeOldClasses(b,e);this._addNewClasses(j,e);for(var c=0;c<d.length;c+=1){this.setTheme(f,g,a(d[c]))}},_removeOldClasses:function(d,c){for(var b=0;b<d.length;b+=1){c.removeClass(d[b])}},_addNewClasses:function(d,c){for(var b=0;b<d.length;b+=1){c.addClass(d[b])}},getOffset:function(b){var d=a.jqx.mobile.getLeftPos(b[0]);var c=a.jqx.mobile.getTopPos(b[0]);return{top:c,left:d}},resize:function(g,s,p,o){if(o===undefined){o=true}var l=-1;var k=this;var d=function(u){if(!k.hiddenWidgets){return -1}var v=-1;for(var t=0;t<k.hiddenWidgets.length;t++){if(u.id){if(k.hiddenWidgets[t].id==u.id){v=t;break}}else{if(k.hiddenWidgets[t].id==u[0].id){v=t;break}}}return v};if(this.resizeHandlers){for(var h=0;h<this.resizeHandlers.length;h++){if(g.id){if(this.resizeHandlers[h].id==g.id){l=h;break}}else{if(this.resizeHandlers[h].id==g[0].id){l=h;break}}}if(p===true){if(l!=-1){this.resizeHandlers.splice(l,1)}if(this.resizeHandlers.length==0){var n=a(window);if(n.off){n.off(\"resize.jqx\");n.off(\"orientationchange.jqx\");n.off(\"orientationchanged.jqx\")}else{n.unbind(\"resize.jqx\");n.unbind(\"orientationchange.jqx\");n.unbind(\"orientationchanged.jqx\")}this.resizeHandlers=null}var b=d(g);if(b!=-1&&this.hiddenWidgets){this.hiddenWidgets.splice(b,1)}return}}else{if(p===true){var b=d(g);if(b!=-1&&this.hiddenWidgets){this.hiddenWidgets.splice(b,1)}return}}var k=this;var m=function(v,D){if(!k.resizeHandlers){return}var E=function(I){var H=-1;var J=I.parentNode;while(J){H++;J=J.parentNode}return H};var u=function(K,I){if(!K.widget||!I.widget){return 0}var J=E(K.widget[0]);var H=E(I.widget[0]);try{if(J<H){return -1}if(J>H){return 1}}catch(L){var M=L}return 0};var w=function(I){if(k.hiddenWidgets.length>0){k.hiddenWidgets.sort(u);var H=function(){var K=false;var M=new Array();for(var L=0;L<k.hiddenWidgets.length;L++){var J=k.hiddenWidgets[L];if(a.jqx.isHidden(J.widget)){K=true;M.push(J)}else{if(J.callback){J.callback(D)}}}k.hiddenWidgets=M;if(!K){clearInterval(k.__resizeInterval)}};if(I==false){H();if(k.__resizeInterval){clearInterval(k.__resizeInterval)}return}if(k.__resizeInterval){clearInterval(k.__resizeInterval)}k.__resizeInterval=setInterval(function(){H()},100)}};if(k.hiddenWidgets&&k.hiddenWidgets.length>0){w(false)}k.hiddenWidgets=new Array();k.resizeHandlers.sort(u);for(var A=0;A<k.resizeHandlers.length;A++){var G=k.resizeHandlers[A];var C=G.widget;var z=G.data;if(!z){continue}if(!z.jqxWidget){continue}var t=z.jqxWidget.width;var F=z.jqxWidget.height;if(z.jqxWidget.base){if(t==undefined){t=z.jqxWidget.base.width}if(F==undefined){F=z.jqxWidget.base.height}}if(t===undefined&&F===undefined){t=z.jqxWidget.element.style.width;F=z.jqxWidget.element.style.height}var B=false;if(t!=null&&t.toString().indexOf(\"%\")!=-1){B=true}if(F!=null&&F.toString().indexOf(\"%\")!=-1){B=true}if(a.jqx.isHidden(C)){if(d(C)===-1){if(B||v===true){if(G.data.nestedWidget!==true){k.hiddenWidgets.push(G)}}}}else{if(v===undefined||v!==true){if(B){G.callback(D);if(k.hiddenWidgets.indexOf(G)>=0){k.hiddenWidgets.splice(k.hiddenWidgets.indexOf(G),1)}}if(z.jqxWidget.element){var x=z.jqxWidget.element.className;if(x.indexOf(\"dropdownlist\")>=0||x.indexOf(\"datetimeinput\")>=0||x.indexOf(\"combobox\")>=0||x.indexOf(\"menu\")>=0){if(z.jqxWidget.isOpened){var y=z.jqxWidget.isOpened();if(y){if(D&&D==\"resize\"&&a.jqx.mobile.isTouchDevice()){continue}z.jqxWidget.close()}}}}}}}w()};if(!this.resizeHandlers){this.resizeHandlers=new Array();var n=a(window);if(n.on){this._resizeTimer=null;this._initResize=null;n.on(\"resize.jqx\",function(t){if(k._resizeTimer!=undefined){clearTimeout(k._resizeTimer)}if(!k._initResize){k._initResize=true;m(null,\"resize\")}else{k._resizeTimer=setTimeout(function(){m(null,\"resize\")},a.jqx.resizeDelay)}});n.on(\"orientationchange.jqx\",function(t){m(null,\"orientationchange\")});n.on(\"orientationchanged.jqx\",function(t){m(null,\"orientationchange\")})}else{n.bind(\"resize.jqx\",function(t){m(null,\"orientationchange\")});n.bind(\"orientationchange.jqx\",function(t){m(null,\"orientationchange\")});n.bind(\"orientationchanged.jqx\",function(t){m(null,\"orientationchange\")})}}var e=g.data();if(o){if(l===-1){this.resizeHandlers.push({id:g[0].id,widget:g,callback:s,data:e})}}try{var c=e.jqxWidget.width;var r=e.jqxWidget.height;if(e.jqxWidget.base){if(c==undefined){c=e.jqxWidget.base.width}if(r==undefined){r=e.jqxWidget.base.height}}if(c===undefined&&r===undefined){c=e.jqxWidget.element.style.width;r=e.jqxWidget.element.style.height}var j=false;if(c!=null&&c.toString().indexOf(\"%\")!=-1){j=true}if(r!=null&&r.toString().indexOf(\"%\")!=-1){j=true}if(j){if(!this.watchedElementData){this.watchedElementData=[]}var k=this;var f=function(t){if(k.watchedElementData.forEach){k.watchedElementData.forEach(function(u){if(u.element.offsetWidth!==u.offsetWidth||u.element.offsetHeight!==u.offsetHeight){u.offsetWidth=u.element.offsetWidth;u.offsetHeight=u.element.offsetHeight;if(u.timer){clearTimeout(u.timer)}u.timer=setTimeout(function(){if(!a.jqx.isHidden(a(u.element))){u.callback()}})}})}};k.watchedElementData.push({element:g[0],offsetWidth:g[0].offsetWidth,offsetHeight:g[0].offsetHeight,callback:s});if(!k.observer){k.observer=new MutationObserver(f);k.observer.observe(document.body,{attributes:true,childList:true,characterData:true})}}}catch(q){}if(a.jqx.isHidden(g)&&o===true){m(true)}a.jqx.resize=function(){m(null,\"resize\")}},html:function(c,d){if(!a(c).on){return a(c).html(d)}try{return a.access(c,function(s){var f=c[0]||{},m=0,j=c.length;if(s===undefined){return f.nodeType===1?f.innerHTML.replace(rinlinejQuery,\"\"):undefined}var r=/<(?:script|style|link)/i,n=\"abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video\",h=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,p=/<([\\w:]+)/,g=/<(?:script|object|embed|option|style)/i,k=new RegExp(\"<(?:\"+n+\")[\\\\s/>]\",\"i\"),q=/^\\s+/,t={option:[1,\"<select multiple='multiple'>\",\"</select>\"],legend:[1,\"<fieldset>\",\"</fieldset>\"],thead:[1,\"<table>\",\"</table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],col:[2,\"<table><tbody></tbody><colgroup>\",\"</colgroup></table>\"],area:[1,\"<map>\",\"</map>\"],_default:[0,\"\",\"\"]};if(typeof s===\"string\"&&!r.test(s)&&(a.support.htmlSerialize||!k.test(s))&&(a.support.leadingWhitespace||!q.test(s))&&!t[(p.exec(s)||[\"\",\"\"])[1].toLowerCase()]){s=s.replace(h,\"<$1></$2>\");try{for(;m<j;m++){f=this[m]||{};if(f.nodeType===1){a.cleanData(f.getElementsByTagName(\"*\"));f.innerHTML=s}}f=0}catch(o){}}if(f){c.empty().append(s)}},null,d,arguments.length)}catch(b){return a(c).html(d)}},hasTransform:function(d){var c=\"\";c=d.css(\"transform\");if(c==\"\"||c==\"none\"){c=d.parents().css(\"transform\");if(c==\"\"||c==\"none\"){var b=a.jqx.utilities.getBrowser();if(b.browser==\"msie\"){c=d.css(\"-ms-transform\");if(c==\"\"||c==\"none\"){c=d.parents().css(\"-ms-transform\")}}else{if(b.browser==\"chrome\"){c=d.css(\"-webkit-transform\");if(c==\"\"||c==\"none\"){c=d.parents().css(\"-webkit-transform\")}}else{if(b.browser==\"opera\"){c=d.css(\"-o-transform\");if(c==\"\"||c==\"none\"){c=d.parents().css(\"-o-transform\")}}else{if(b.browser==\"mozilla\"){c=d.css(\"-moz-transform\");if(c==\"\"||c==\"none\"){c=d.parents().css(\"-moz-transform\")}}}}}}else{return c!=\"\"&&c!=\"none\"}}if(c==\"\"||c==\"none\"){c=a(document.body).css(\"transform\")}return c!=\"\"&&c!=\"none\"&&c!=null},getBrowser:function(){var c=navigator.userAgent.toLowerCase();var b=/(chrome)[ \\/]([\\w.]+)/.exec(c)||/(webkit)[ \\/]([\\w.]+)/.exec(c)||/(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec(c)||/(msie) ([\\w.]+)/.exec(c)||c.indexOf(\"compatible\")<0&&/(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(c)||[];var d={browser:b[1]||\"\",version:b[2]||\"0\"};if(c.indexOf(\"rv:11.0\")>=0&&c.indexOf(\".net4.0c\")>=0){d.browser=\"msie\";d.version=\"11\";b[1]=\"msie\"}if(c.indexOf(\"edge\")>=0){d.browser=\"msie\";d.version=\"12\";b[1]=\"msie\"}d[b[1]]=b[1];return d}});a.jqx.browser=a.jqx.utilities.getBrowser();a.jqx.isHidden=function(c){if(!c||!c[0]){return false}var b=c[0].offsetWidth,d=c[0].offsetHeight;if(b===0||d===0){return true}else{return false}};a.jqx.ariaEnabled=true;a.jqx.aria=function(c,e,d){if(!a.jqx.ariaEnabled){return}if(e==undefined){a.each(c.aria,function(g,h){var k=!c.base?c.host.attr(g):c.base.host.attr(g);if(k!=undefined&&!a.isFunction(k)){var j=k;switch(h.type){case\"number\":j=new Number(k);if(isNaN(j)){j=k}break;case\"boolean\":j=k==\"true\"?true:false;break;case\"date\":j=new Date(k);if(j==\"Invalid Date\"||isNaN(j)){j=k}break}c[h.name]=j}else{var k=c[h.name];if(a.isFunction(k)){k=c[h.name]()}if(k==undefined){k=\"\"}try{!c.base?c.host.attr(g,k.toString()):c.base.host.attr(g,k.toString())}catch(f){}}})}else{try{if(c.host){if(!c.base){if(c.host){if(c.element.setAttribute){c.element.setAttribute(e,d.toString())}else{c.host.attr(e,d.toString())}}else{c.attr(e,d.toString())}}else{if(c.base.host){c.base.host.attr(e,d.toString())}else{c.attr(e,d.toString())}}}else{if(c.setAttribute){c.setAttribute(e,d.toString())}}}catch(b){}}};if(!Array.prototype.indexOf){Array.prototype.indexOf=function(c){var b=this.length;var d=Number(arguments[1])||0;d=(d<0)?Math.ceil(d):Math.floor(d);if(d<0){d+=b}for(;d<b;d++){if(d in this&&this[d]===c){return d}}return -1}}a.jqx.mobile=a.jqx.mobile||{};a.jqx.position=function(b){var e=parseInt(b.pageX);var d=parseInt(b.pageY);if(a.jqx.mobile.isTouchDevice()){var c=a.jqx.mobile.getTouches(b);var f=c[0];e=parseInt(f.pageX);d=parseInt(f.pageY)}return{left:e,top:d}};a.extend(a.jqx.mobile,{_touchListener:function(h,f){var b=function(j,l){var k=document.createEvent(\"MouseEvents\");k.initMouseEvent(j,l.bubbles,l.cancelable,l.view,l.detail,l.screenX,l.screenY,l.clientX,l.clientY,l.ctrlKey,l.altKey,l.shiftKey,l.metaKey,l.button,l.relatedTarget);k._pageX=l.pageX;k._pageY=l.pageY;return k};var g={mousedown:\"touchstart\",mouseup:\"touchend\",mousemove:\"touchmove\"};var d=b(g[h.type],h);h.target.dispatchEvent(d);var c=h.target[\"on\"+g[h.type]];if(typeof c===\"function\"){c(h)}},setMobileSimulator:function(c,e){if(this.isTouchDevice()){return}this.simulatetouches=true;if(e==false){this.simulatetouches=false}var d={mousedown:\"touchstart\",mouseup:\"touchend\",mousemove:\"touchmove\"};var b=this;if(window.addEventListener){var f=function(){for(var g in d){if(c.addEventListener){c.removeEventListener(g,b._touchListener);c.addEventListener(g,b._touchListener,false)}}};if(a.jqx.browser.msie){f()}else{f()}}},isTouchDevice:function(){if(this.touchDevice!=undefined){return this.touchDevice}var c=\"Browser CodeName: \"+navigator.appCodeName+\"\";c+=\"Browser Name: \"+navigator.appName+\"\";c+=\"Browser Version: \"+navigator.appVersion+\"\";c+=\"Platform: \"+navigator.platform+\"\";c+=\"User-agent header: \"+navigator.userAgent+\"\";if(c.indexOf(\"Android\")!=-1){return true}if(c.indexOf(\"IEMobile\")!=-1){return true}if(c.indexOf(\"Windows Phone\")!=-1){return true}if(c.indexOf(\"WPDesktop\")!=-1){return true}if(c.indexOf(\"ZuneWP7\")!=-1){return true}if(c.indexOf(\"BlackBerry\")!=-1&&c.indexOf(\"Mobile Safari\")!=-1){return true}if(c.indexOf(\"ipod\")!=-1){return true}if(c.indexOf(\"nokia\")!=-1||c.indexOf(\"Nokia\")!=-1){return true}if(c.indexOf(\"Chrome/17\")!=-1){return false}if(c.indexOf(\"CrOS\")!=-1){return false}if(c.indexOf(\"Opera\")!=-1&&c.indexOf(\"Mobi\")==-1&&c.indexOf(\"Mini\")==-1&&c.indexOf(\"Platform: Win\")!=-1){return false}if(c.indexOf(\"Opera\")!=-1&&c.indexOf(\"Mobi\")!=-1&&c.indexOf(\"Opera Mobi\")!=-1){return true}var d={ios:\"i(?:Pad|Phone|Pod)(?:.*)CPU(?: iPhone)? OS \",android:\"(Android |HTC_|Silk/)\",blackberry:\"BlackBerry(?:.*)Version/\",rimTablet:\"RIM Tablet OS \",webos:\"(?:webOS|hpwOS)/\",bada:\"Bada/\"};try{if(this.touchDevice!=undefined){return this.touchDevice}this.touchDevice=false;for(i in d){if(d.hasOwnProperty(i)){prefix=d[i];match=c.match(new RegExp(\"(?:\"+prefix+\")([^\\\\s;]+)\"));if(match){if(i.toString()==\"blackberry\"){this.touchDevice=false;return false}this.touchDevice=true;return true}}}var f=navigator.userAgent;if(navigator.platform.toLowerCase().indexOf(\"win\")!=-1){if(f.indexOf(\"Windows Phone\")>=0||f.indexOf(\"WPDesktop\")>=0||f.indexOf(\"IEMobile\")>=0||f.indexOf(\"ZuneWP7\")>=0){this.touchDevice=true;return true}else{if(f.indexOf(\"Touch\")>=0){var b=(\"MSPointerDown\" in window)||(\"pointerdown\" in window);if(b){this.touchDevice=true;return true}if(f.indexOf(\"ARM\")>=0){this.touchDevice=true;return true}this.touchDevice=false;return false}}}if(navigator.platform.toLowerCase().indexOf(\"win\")!=-1){this.touchDevice=false;return false}if((\"ontouchstart\" in window)||window.DocumentTouch&&document instanceof DocumentTouch){this.touchDevice=true}return this.touchDevice}catch(g){this.touchDevice=false;return false}},getLeftPos:function(b){var c=b.offsetLeft;while((b=b.offsetParent)!=null){if(b.tagName!=\"HTML\"){c+=b.offsetLeft;if(document.all){c+=b.clientLeft}}}return c},getTopPos:function(c){var e=c.offsetTop;var b=a(c).coord();while((c=c.offsetParent)!=null){if(c.tagName!=\"HTML\"){e+=(c.offsetTop-c.scrollTop);if(document.all){e+=c.clientTop}}}var d=navigator.userAgent.toLowerCase();var f=(d.indexOf(\"windows phone\")!=-1||d.indexOf(\"WPDesktop\")!=-1||d.indexOf(\"ZuneWP7\")!=-1||d.indexOf(\"msie 9\")!=-1||d.indexOf(\"msie 11\")!=-1||d.indexOf(\"msie 10\")!=-1)&&d.indexOf(\"touch\")!=-1;if(f){return b.top}if(this.isSafariMobileBrowser()){if(this.isSafari4MobileBrowser()&&this.isIPadSafariMobileBrowser()){return e}if(d.indexOf(\"version/7\")!=-1){return b.top}if(d.indexOf(\"version/6\")!=-1||d.indexOf(\"version/5\")!=-1){e=e+a(window).scrollTop()}if(/(Android.*Chrome\\/[.0-9]* (!?Mobile))/.exec(navigator.userAgent)){return e+a(window).scrollTop()}if(/(Android.*Chrome\\/[.0-9]* Mobile)/.exec(navigator.userAgent)){return e+a(window).scrollTop()}return b.top}return e},isChromeMobileBrowser:function(){var c=navigator.userAgent.toLowerCase();var b=c.indexOf(\"android\")!=-1;return b},isOperaMiniMobileBrowser:function(){var c=navigator.userAgent.toLowerCase();var b=c.indexOf(\"opera mini\")!=-1||c.indexOf(\"opera mobi\")!=-1;return b},isOperaMiniBrowser:function(){var c=navigator.userAgent.toLowerCase();var b=c.indexOf(\"opera mini\")!=-1;return b},isNewSafariMobileBrowser:function(){var c=navigator.userAgent.toLowerCase();var b=c.indexOf(\"ipad\")!=-1||c.indexOf(\"iphone\")!=-1||c.indexOf(\"ipod\")!=-1;b=b&&(c.indexOf(\"version/5\")!=-1);return b},isSafari4MobileBrowser:function(){var c=navigator.userAgent.toLowerCase();var b=c.indexOf(\"ipad\")!=-1||c.indexOf(\"iphone\")!=-1||c.indexOf(\"ipod\")!=-1;b=b&&(c.indexOf(\"version/4\")!=-1);return b},isWindowsPhone:function(){var c=navigator.userAgent.toLowerCase();var b=(c.indexOf(\"windows phone\")!=-1||c.indexOf(\"WPDesktop\")!=-1||c.indexOf(\"ZuneWP7\")!=-1||c.indexOf(\"msie 9\")!=-1||c.indexOf(\"msie 11\")!=-1||c.indexOf(\"msie 10\")!=-1&&c.indexOf(\"touch\")!=-1);return b},isSafariMobileBrowser:function(){var c=navigator.userAgent.toLowerCase();if(/(Android.*Chrome\\/[.0-9]* (!?Mobile))/.exec(navigator.userAgent)){return true}if(/(Android.*Chrome\\/[.0-9]* Mobile)/.exec(navigator.userAgent)){return true}var b=c.indexOf(\"ipad\")!=-1||c.indexOf(\"iphone\")!=-1||c.indexOf(\"ipod\")!=-1||c.indexOf(\"mobile safari\")!=-1;return b},isIPadSafariMobileBrowser:function(){var c=navigator.userAgent.toLowerCase();var b=c.indexOf(\"ipad\")!=-1;return b},isMobileBrowser:function(){var c=navigator.userAgent.toLowerCase();var b=c.indexOf(\"ipad\")!=-1||c.indexOf(\"iphone\")!=-1||c.indexOf(\"android\")!=-1;return b},getTouches:function(b){if(b.originalEvent){if(b.originalEvent.touches&&b.originalEvent.touches.length){return b.originalEvent.touches}else{if(b.originalEvent.changedTouches&&b.originalEvent.changedTouches.length){return b.originalEvent.changedTouches}}}if(!b.touches){b.touches=new Array();b.touches[0]=b.originalEvent!=undefined?b.originalEvent:b;if(b.originalEvent!=undefined&&b.pageX){b.touches[0]=b}if(b.type==\"mousemove\"){b.touches[0]=b}}return b.touches},getTouchEventName:function(b){if(this.isWindowsPhone()){var c=navigator.userAgent.toLowerCase();if(c.indexOf(\"windows phone 7\")!=-1){if(b.toLowerCase().indexOf(\"start\")!=-1){return\"MSPointerDown\"}if(b.toLowerCase().indexOf(\"move\")!=-1){return\"MSPointerMove\"}if(b.toLowerCase().indexOf(\"end\")!=-1){return\"MSPointerUp\"}}if(b.toLowerCase().indexOf(\"start\")!=-1){return\"pointerdown\"}if(b.toLowerCase().indexOf(\"move\")!=-1){return\"pointermove\"}if(b.toLowerCase().indexOf(\"end\")!=-1){return\"pointerup\"}}else{return b}},dispatchMouseEvent:function(b,f,d){if(this.simulatetouches){return}var c=document.createEvent(\"MouseEvent\");c.initMouseEvent(b,true,true,f.view,1,f.screenX,f.screenY,f.clientX,f.clientY,false,false,false,false,0,null);if(d!=null){d.dispatchEvent(c)}},getRootNode:function(b){while(b.nodeType!==1){b=b.parentNode}return b},setTouchScroll:function(b,c){if(!this.enableScrolling){this.enableScrolling=[]}this.enableScrolling[c]=b},touchScroll:function(A,L,V,G,w,m){if(A==null){return}var F=this;var e=0;var q=0;var f=0;var g=0;var s=0;var h=0;if(!this.scrolling){this.scrolling=[]}this.scrolling[G]=false;var j=false;var o=a(A);var P=[\"select\",\"input\",\"textarea\"];var T=0;var I=0;if(!this.enableScrolling){this.enableScrolling=[]}this.enableScrolling[G]=true;var G=G;var t=this.getTouchEventName(\"touchstart\")+\".touchScroll\";var C=this.getTouchEventName(\"touchend\")+\".touchScroll\";var X=this.getTouchEventName(\"touchmove\")+\".touchScroll\";var k,S,y,U,ad,O,W,c,E,Z,ab,d,v,u,Q,b,D,ac,n;O=L;ad=0;W=0;xoffset=0;initialOffset=0;initialXOffset=0;U=w.jqxScrollBar(\"max\");n=325;function z(ag){if(ag.targetTouches&&(ag.targetTouches.length>=1)){return ag.targetTouches[0].clientY}else{if(ag.originalEvent&&ag.originalEvent.clientY!==undefined){return ag.originalEvent.clientY}else{var af=F.getTouches(ag);return af[0].clientY}}return ag.clientY}function aa(ag){if(ag.targetTouches&&(ag.targetTouches.length>=1)){return ag.targetTouches[0].clientX}else{if(ag.originalEvent&&ag.originalEvent.clientX!==undefined){return ag.originalEvent.clientX}else{var af=F.getTouches(ag);return af[0].clientX}}return ag.clientX}var H=function(){var ah,af,ai,ag;ah=Date.now();af=ah-v;v=ah;ai=W-d;xdelta=xoffset-xframe;d=W;xframe=xoffset;E=true;ag=1000*ai/(1+af);xv=1000*xdelta/(1+af);ab=0.8*ag+0.2*ab;xjqxAnimations=0.8*xv+0.2*xjqxAnimations};var B=false;var T=function(ag){if(!F.enableScrolling[G]){return true}if(a.inArray(ag.target.tagName.toLowerCase(),P)!==-1){return}W=m.jqxScrollBar(\"value\");xoffset=w.jqxScrollBar(\"value\");var ah=F.getTouches(ag);var ai=ah[0];if(ah.length==1){F.dispatchMouseEvent(\"mousedown\",ai,F.getRootNode(ai.target))}U=w.jqxScrollBar(\"max\");O=m.jqxScrollBar(\"max\");function af(aj){B=false;E=true;c=z(aj);ac=aa(aj);ab=Q=xjqxAnimations=0;d=W;xframe=xoffset;v=Date.now();clearInterval(u);u=setInterval(H,100);initialOffset=W;initialXOffset=xoffset;if(W>0&&W<O&&m[0].style.visibility!=\"hidden\"){}}af(ag);j=false;q=ai.pageY;s=ai.pageX;if(F.simulatetouches){if(ai._pageY!=undefined){q=ai._pageY;s=ai._pageX}}F.scrolling[G]=true;e=0;g=0;return true};if(o.on){o.on(t,T)}else{o.bind(t,T)}var Y=function(ag,af){W=(ag>O)?O:(ag<ad)?ad:ag;V(null,ag,0,0,af);return(ag>O)?\"max\":(ag<ad)?\"min\":\"value\"};var l=function(ag,af){xoffset=(ag>U)?U:(ag<ad)?ad:ag;V(ag,null,0,0,af);return(ag>U)?\"max\":(ag<ad)?\"min\":\"value\"};function R(){var af,ag;if(Q){af=Date.now()-v;ag=-Q*Math.exp(-af/n);if(ag>0.5||ag<-0.5){Y(b+ag,event);requestAnimationFrame(R)}else{Y(b);m.fadeOut(\"fast\")}}}function M(){var af,ag;if(Q){af=Date.now()-v;ag=-Q*Math.exp(-af/n);if(ag>0.5||ag<-0.5){l(D+ag);requestAnimationFrame(M)}else{l(D);w.fadeOut(\"fast\")}}}var x=function(af){if(!F.enableScrolling[G]){return true}if(!F.scrolling[G]){return true}if(B){af.preventDefault();af.stopPropagation()}var ak=F.getTouches(af);if(ak.length>1){return true}var ag=ak[0].pageY;var ai=ak[0].pageX;if(F.simulatetouches){if(ak[0]._pageY!=undefined){ag=ak[0]._pageY;ai=ak[0]._pageX}}var am=ag-q;var an=ai-s;I=ag;touchHorizontalEnd=ai;f=am-e;h=an-g;j=true;e=am;g=an;var ah=w!=null?w[0].style.visibility!=\"hidden\":true;var al=m!=null?m[0].style.visibility!=\"hidden\":true;function aj(aq){var at,ar,ap;if(E){at=z(aq);ap=aa(aq);ar=c-at;xdelta=ac-ap;var ao=\"value\";if(ar>2||ar<-2){c=at;ao=Y(W+ar,aq);H();if(ao==\"min\"&&initialOffset===0){return true}if(ao==\"max\"&&initialOffset===O){return true}if(!al){return true}aq.preventDefault();aq.stopPropagation();B=true;return false}else{if(xdelta>2||xdelta<-2){ac=ap;ao=l(xoffset+xdelta,aq);H();if(ao==\"min\"&&initialXOffset===0){return true}if(ao==\"max\"&&initialXOffset===U){return true}if(!ah){return true}B=true;aq.preventDefault();aq.stopPropagation();return false}}aq.preventDefault()}}if(ah||al){if((ah)||(al)){aj(af)}}};if(o.on){o.on(X,x)}else{o.bind(X,x)}var r=function(ag){if(!F.enableScrolling[G]){return true}var ah=F.getTouches(ag)[0];if(!F.scrolling[G]){return true}E=false;clearInterval(u);if(ab>10||ab<-10){Q=0.8*ab;b=Math.round(W+Q);v=Date.now();requestAnimationFrame(R);m.fadeIn(100)}else{if(xjqxAnimations>10||xjqxAnimations<-10){Q=0.8*xjqxAnimations;D=Math.round(xoffset+Q);v=Date.now();requestAnimationFrame(M);w.fadeIn(100)}else{w.fadeOut(100);m.fadeOut(100)}}F.scrolling[G]=false;if(j){F.dispatchMouseEvent(\"mouseup\",ah,ag.target)}else{var ah=F.getTouches(ag)[0],af=F.getRootNode(ah.target);F.dispatchMouseEvent(\"mouseup\",ah,af);F.dispatchMouseEvent(\"click\",ah,af);return true}};if(this.simulatetouches){var p=a(window).on!=undefined||a(window).bind;var N=function(af){try{r(af)}catch(ag){}F.scrolling[G]=false};a(window).on!=undefined?a(document).on(\"mouseup.touchScroll\",N):a(document).bind(\"mouseup.touchScroll\",N);if(window.frameElement){if(window.top!=null){var K=function(af){try{r(af)}catch(ag){}F.scrolling[G]=false};if(window.top.document){a(window.top.document).on?a(window.top.document).on(\"mouseup\",K):a(window.top.document).bind(\"mouseup\",K)}}}var ae=a(document).on!=undefined||a(document).bind;var J=function(af){if(!F.scrolling[G]){return true}F.scrolling[G]=false;var ah=F.getTouches(af)[0],ag=F.getRootNode(ah.target);F.dispatchMouseEvent(\"mouseup\",ah,ag);F.dispatchMouseEvent(\"click\",ah,ag)};a(document).on!=undefined?a(document).on(\"touchend\",J):a(document).bind(\"touchend\",J)}if(o.on){o.on(\"dragstart\",function(af){af.preventDefault()});o.on(\"selectstart\",function(af){af.preventDefault()})}o.on?o.on(C+\" touchcancel.touchScroll\",r):o.bind(C+\" touchcancel.touchScroll\",r)}});a.jqx.cookie=a.jqx.cookie||{};a.extend(a.jqx.cookie,{cookie:function(e,f,c){if(arguments.length>1&&String(f)!==\"[object Object]\"){c=a.extend({},c);if(f===null||f===undefined){c.expires=-1}if(typeof c.expires===\"number\"){var h=c.expires,d=c.expires=new Date();d.setDate(d.getDate()+h)}f=String(f);return(document.cookie=[encodeURIComponent(e),\"=\",c.raw?f:encodeURIComponent(f),c.expires?\"; expires=\"+c.expires.toUTCString():\"\",c.path?\"; path=\"+c.path:\"\",c.domain?\"; domain=\"+c.domain:\"\",c.secure?\"; secure\":\"\"].join(\"\"))}c=f||{};var b,g=c.raw?function(j){return j}:decodeURIComponent;return(b=new RegExp(\"(?:^|; )\"+encodeURIComponent(e)+\"=([^;]*)\").exec(document.cookie))?g(b[1]):null}});a.jqx.string=a.jqx.string||{};a.extend(a.jqx.string,{replace:function(f,d,e){if(d===e){return this}var b=f;var c=b.indexOf(d);while(c!=-1){b=b.replace(d,e);c=b.indexOf(d)}return b},contains:function(b,c){if(b==null||c==null){return false}return b.indexOf(c)!=-1},containsIgnoreCase:function(b,c){if(b==null||c==null){return false}return b.toString().toUpperCase().indexOf(c.toString().toUpperCase())!=-1},equals:function(b,c){if(b==null||c==null){return false}b=this.normalize(b);if(c.length==b.length){return b.slice(0,c.length)==c}return false},equalsIgnoreCase:function(b,c){if(b==null||c==null){return false}b=this.normalize(b);if(c.length==b.length){return b.toUpperCase().slice(0,c.length)==c.toUpperCase()}return false},startsWith:function(b,c){if(b==null||c==null){return false}return b.slice(0,c.length)==c},startsWithIgnoreCase:function(b,c){if(b==null||c==null){return false}return b.toUpperCase().slice(0,c.length)==c.toUpperCase()},normalize:function(b){if(b.charCodeAt(b.length-1)==65279){b=b.substring(0,b.length-1)}return b},endsWith:function(b,c){if(b==null||c==null){return false}b=this.normalize(b);return b.slice(-c.length)==c},endsWithIgnoreCase:function(b,c){if(b==null||c==null){return false}b=this.normalize(b);return b.toUpperCase().slice(-c.length)==c.toUpperCase()}});a.extend(a.easing,{easeOutBack:function(f,g,e,k,j,h){if(h==undefined){h=1.70158}return k*((g=g/j-1)*g*((h+1)*g+h)+1)+e},easeInQuad:function(f,g,e,j,h){return j*(g/=h)*g+e},easeInOutCirc:function(f,g,e,j,h){if((g/=h/2)<1){return -j/2*(Math.sqrt(1-g*g)-1)+e}return j/2*(Math.sqrt(1-(g-=2)*g)+1)+e},easeInOutSine:function(f,g,e,j,h){return -j/2*(Math.cos(Math.PI*g/h)-1)+e},easeInCubic:function(f,g,e,j,h){return j*(g/=h)*g*g+e},easeOutCubic:function(f,g,e,j,h){return j*((g=g/h-1)*g*g+1)+e},easeInOutCubic:function(f,g,e,j,h){if((g/=h/2)<1){return j/2*g*g*g+e}return j/2*((g-=2)*g*g+2)+e},easeInSine:function(f,g,e,j,h){return -j*Math.cos(g/h*(Math.PI/2))+j+e},easeOutSine:function(f,g,e,j,h){return j*Math.sin(g/h*(Math.PI/2))+e},easeInOutSine:function(f,g,e,j,h){return -j/2*(Math.cos(Math.PI*g/h)-1)+e}})})(jqxBaseFramework);(function(b){b.extend(b.event.special,{close:{noBubble:true},open:{noBubble:true},cellclick:{noBubble:true},rowclick:{noBubble:true},tabclick:{noBubble:true},selected:{noBubble:true},expanded:{noBubble:true},collapsed:{noBubble:true},valuechanged:{noBubble:true},expandedItem:{noBubble:true},collapsedItem:{noBubble:true},expandingItem:{noBubble:true},collapsingItem:{noBubble:true}});b.fn.extend({ischildof:function(f){var d=b(this).parents().get();for(var c=0;c<d.length;c++){if(typeof f!=\"string\"){var e=d[c];if(f!==undefined){if(e==f[0]){return true}}}else{if(f!==undefined){if(b(d[c]).is(f)){return true}}}}return false}});b.fn.jqxProxy=function(){var e=b(this).data().jqxWidget;var c=Array.prototype.slice.call(arguments,0);var d=e.element;if(!d){d=e.base.element}return b.jqx.jqxWidgetProxy(e.widgetName,d,c)};var a=this.originalVal=b.fn.val;b.fn.val=function(d){if(typeof d==\"undefined\"){if(b(this).hasClass(\"jqx-widget\")){var c=b(this).data().jqxWidget;if(c&&c.val){return c.val()}}return a.call(this)}else{if(b(this).hasClass(\"jqx-widget\")){var c=b(this).data().jqxWidget;if(c&&c.val){if(arguments.length!=2){return c.val(d)}else{return c.val(d,arguments[1])}}}return a.call(this,d)}};if(b.fn.modal&&b.fn.modal.Constructor){b.fn.modal.Constructor.prototype.enforceFocus=function(){b(document).off(\"focusin.bs.modal\").on(\"focusin.bs.modal\",b.proxy(function(c){if(this.$element[0]!==c.target&&!this.$element.has(c.target).length){if(b(c.target).parents().hasClass(\"jqx-popup\")){return true}this.$element.trigger(\"focus\")}},this))}}b.fn.coord=function(o){var e,k,j={top:0,left:0},f=this[0],m=f&&f.ownerDocument;if(!m){return}e=m.documentElement;if(!b.contains(e,f)){return j}if(typeof f.getBoundingClientRect!==undefined){j=f.getBoundingClientRect()}var d=function(p){return b.isWindow(p)?p:p.nodeType===9?p.defaultView||p.parentWindow:false};k=d(m);var h=0;var c=0;var g=navigator.userAgent.toLowerCase();var n=g.indexOf(\"ipad\")!=-1||g.indexOf(\"iphone\")!=-1;if(n){h=2}if(true==o){if(b(document.body).css(\"position\")!=\"static\"){var l=b(document.body).coord();h=-l.left;c=-l.top}}return{top:c+j.top+(k.pageYOffset||e.scrollTop)-(e.clientTop||0),left:h+j.left+(k.pageXOffset||e.scrollLeft)-(e.clientLeft||0)}}})(jqxBaseFramework);\ndefine(\"jqxcore\", function(){});\n\n","/*\r\njQWidgets v4.1.2 (2016-Apr)\r\nCopyright (c) 2011-2016 jQWidgets.\r\nLicense: http://jqwidgets.com/license/\r\n*/\r\n\r\n(function(a){a.jqx.jqxWidget(\"jqxListBox\",\"\",{});a.extend(a.jqx._jqxListBox.prototype,{defineInstance:function(){var b={disabled:false,width:null,height:null,items:new Array(),multiple:false,selectedIndex:-1,selectedIndexes:new Array(),source:null,scrollBarSize:a.jqx.utilities.scrollBarSize,enableHover:true,enableSelection:true,visualItems:new Array(),groups:new Array(),equalItemsWidth:true,itemHeight:-1,visibleItems:new Array(),emptyGroupText:\"Group\",checkboxes:false,hasThreeStates:false,autoHeight:false,autoItemsHeight:false,roundedcorners:true,touchMode:\"auto\",displayMember:\"\",groupMember:\"\",valueMember:\"\",searchMember:\"\",searchMode:\"startswithignorecase\",incrementalSearch:true,incrementalSearchDelay:1000,incrementalSearchKeyDownDelay:300,allowDrag:false,allowDrop:true,dropAction:\"default\",touchModeStyle:\"auto\",keyboardNavigation:true,enableMouseWheel:true,multipleextended:false,selectedValues:new Array(),emptyString:\"\",rtl:false,rendered:null,renderer:null,dragStart:null,dragEnd:null,focusable:true,ready:null,_checkForHiddenParent:true,autoBind:true,_renderOnDemand:false,filterable:false,filterHeight:27,filterPlaceHolder:\"Looking for\",filterDelay:100,filterChange:null,aria:{\"aria-disabled\":{name:\"disabled\",type:\"boolean\"}},events:[\"select\",\"unselect\",\"change\",\"checkChange\",\"dragStart\",\"dragEnd\",\"bindingComplete\"]};a.extend(true,this,b);return b},createInstance:function(c){var b=this;if(a.jqx.utilities.scrollBarSize!=15){b.scrollBarSize=a.jqx.utilities.scrollBarSize}if(b.width==null){b.width=200}if(b.height==null){b.height=200}b.renderListBox();var d=b;a.jqx.utilities.resize(b.host,function(){d._updateSize()},false,b._checkForHiddenParent)},resize:function(c,b){this.width=c;this.height=b;this._updateSize()},render:function(){this.renderListBox();this.refresh()},renderListBox:function(){var m=this;var l=m.element.nodeName.toLowerCase();if(l==\"select\"||l==\"ul\"||l==\"ol\"){m.field=m.element;if(m.field.className){m._className=m.field.className}var i={title:m.field.title};if(m.field.id.length){i.id=m.field.id.replace(/[^\\w]/g,\"_\")+\"_jqxListBox\"}else{i.id=a.jqx.utilities.createId()+\"_jqxListBox\"}var b=a(\"<div></div>\",i);if(!m.width){m.width=a(m.field).width()}if(!m.height){m.height=a(m.field).outerHeight()}m.element.style.cssText=m.field.style.cssText;a(m.field).hide().after(b);var f=m.host.data();m.host=b;m.host.data(f);m.element=b[0];m.element.id=m.field.id;m.field.id=i.id;if(m._className){m.host.addClass(m._className);a(m.field).removeClass(m._className)}if(m.field.tabIndex){var c=m.field.tabIndex;m.field.tabIndex=-1;m.element.tabIndex=c}}m.element.innerHTML=\"\";var m=m;var h=m.element.className;h+=\" \"+m.toThemeProperty(\"jqx-listbox\");h+=\" \"+m.toThemeProperty(\"jqx-reset\");h+=\" \"+m.toThemeProperty(\"jqx-rc-all\");h+=\" \"+m.toThemeProperty(\"jqx-widget\");h+=\" \"+m.toThemeProperty(\"jqx-widget-content\");m.element.className=h;var g=false;if(m.width!=null&&m.width.toString().indexOf(\"%\")!=-1){m.host.width(m.width);g=true}if(m.height!=null&&m.height.toString().indexOf(\"%\")!=-1){m.host.height(m.height);if(m.host.height()==0){m.host.height(200)}g=true}if(m.width!=null&&m.width.toString().indexOf(\"px\")!=-1){m.host.width(m.width)}else{if(m.width!=undefined&&!isNaN(m.width)){m.element.style.width=parseInt(m.width)+\"px\"}}if(m.height!=null&&m.height.toString().indexOf(\"px\")!=-1){m.host.height(m.height)}else{if(m.height!=undefined&&!isNaN(m.height)){m.element.style.height=parseInt(m.height)+\"px\"}}if(m.multiple||m.multipleextended||m.checkboxes){a.jqx.aria(m,\"aria-multiselectable\",true)}else{a.jqx.aria(m,\"aria-multiselectable\",false)}var e=\"<div style='-webkit-appearance: none; background: transparent; outline: none; width:100%; height: 100%; align:left; border: 0px; padding: 0px; margin: 0px; left: 0px; top: 0px; valign:top; position: relative;'><div style='-webkit-appearance: none; border: none; background: transparent; outline: none; width:100%; height: 100%; padding: 0px; margin: 0px; align:left; left: 0px; top: 0px; valign:top; position: relative;'><div id='filter\"+m.element.id+\"' style='display: none; visibility: inherit; align:left; valign:top; left: 0px; top: 0px; position: absolute;'><input style='position: absolute;'/></div><div id='listBoxContent' style='-webkit-appearance: none; border: none; background: transparent; outline: none; border: none; padding: 0px; overflow: hidden; margin: 0px; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='verticalScrollBar\"+m.element.id+\"' style='visibility: inherit; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='horizontalScrollBar\"+m.element.id+\"' style='visibility: inherit; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='bottomRight' style='align:left; valign:top; left: 0px; top: 0px; border: none; position: absolute;'/></div></div>\";m.host.attr(\"role\",\"listbox\");m.element.innerHTML=e;if(m._checkForHiddenParent){m._addInput();if(!m.host.attr(\"tabIndex\")){m.host.attr(\"tabIndex\",1)}}m.filter=a(m.element.firstChild.firstChild.firstChild);m.filterInput=a(m.filter[0].firstChild);m.filterInput.attr(\"placeholder\",m.filterPlaceHolder);m.filterInput.addClass(m.toThemeProperty(\"jqx-widget jqx-listbox-filter-input jqx-input jqx-rc-all\"));m.addHandler(m.filterInput,\"keyup.textchange\",function(o){if(o.keyCode==13){m._search(o)}else{if(m.filterDelay>0){if(m._filterTimer){clearTimeout(m._filterTimer)}m._filterTimer=setTimeout(function(){m._search(o)},m.filterDelay)}}o.stopPropagation()});var j=a(m.element.firstChild.firstChild.firstChild.nextSibling.nextSibling);if(!m.host.jqxButton){throw new Error(\"jqxListBox: Missing reference to jqxbuttons.js.\");return}if(!j.jqxScrollBar){throw new Error(\"jqxListBox: Missing reference to jqxscrollbar.js.\");return}var d=parseInt(m.host.height())/2;if(d==0){d=10}m.vScrollBar=j.jqxScrollBar({_initialLayout:true,vertical:true,rtl:m.rtl,theme:m.theme,touchMode:m.touchMode,largestep:d});var n=a(m.element.firstChild.firstChild.firstChild.nextSibling.nextSibling.nextSibling);m.hScrollBar=n.jqxScrollBar({_initialLayout:true,vertical:false,rtl:m.rtl,touchMode:m.touchMode,theme:m.theme});m.content=a(m.element.firstChild.firstChild.firstChild.nextSibling);m.content[0].id=\"listBoxContent\"+m.element.id;m.bottomRight=a(m.element.firstChild.firstChild.firstChild.nextSibling.nextSibling.nextSibling.nextSibling).addClass(m.toThemeProperty(\"jqx-listbox-bottomright\")).addClass(m.toThemeProperty(\"jqx-scrollbar-state-normal\"));m.bottomRight[0].id=\"bottomRight\"+m.element.id;m.vScrollInstance=a.data(m.vScrollBar[0],\"jqxScrollBar\").instance;m.hScrollInstance=a.data(m.hScrollBar[0],\"jqxScrollBar\").instance;if(m.isTouchDevice()){if(!(a.jqx.browser.msie&&a.jqx.browser.version<9)){var k=a(\"<div class='overlay' unselectable='on' style='z-index: 99; -webkit-appearance: none; border: none; background: black; opacity: 0.01; outline: none; border: none; padding: 0px; overflow: hidden; margin: 0px; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div>\");m.content.parent().append(k);m.overlayContent=m.host.find(\".overlay\");if(m.filterable){m.overlayContent.css(\"top\",\"30px\")}}}m._updateTouchScrolling();m.host.addClass(\"jqx-disableselect\");if(m.host.jqxDragDrop){jqxListBoxDragDrop()}},_highlight:function(b,c){var d=c.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g,\"\\\\$&\");return b.replace(new RegExp(\"(\"+d+\")\",\"ig\"),function(e,f){return\"<b>\"+f+\"</b>\"})},_addInput:function(){var b=this.host.attr(\"name\");if(b){this.host.attr(\"name\",\"\")}this.input=a(\"<input type='hidden'/>\");this.host.append(this.input);this.input.attr(\"name\",b)},_updateTouchScrolling:function(){var b=this;if(this.isTouchDevice()){b.enableHover=false;var c=this.overlayContent?this.overlayContent:this.content;this.removeHandler(a(c),a.jqx.mobile.getTouchEventName(\"touchstart\")+\".touchScroll\");this.removeHandler(a(c),a.jqx.mobile.getTouchEventName(\"touchmove\")+\".touchScroll\");this.removeHandler(a(c),a.jqx.mobile.getTouchEventName(\"touchend\")+\".touchScroll\");this.removeHandler(a(c),\"touchcancel.touchScroll\");a.jqx.mobile.touchScroll(c,b.vScrollInstance.max,function(f,e){if(e!=null&&b.vScrollBar.css(\"visibility\")!=\"hidden\"){var d=b.vScrollInstance.value;b.vScrollInstance.setPosition(e);b._lastScroll=new Date()}if(f!=null&&b.hScrollBar.css(\"visibility\")!=\"hidden\"){var d=b.hScrollInstance.value;b.hScrollInstance.setPosition(f);b._lastScroll=new Date()}},this.element.id,this.hScrollBar,this.vScrollBar);if(b.vScrollBar.css(\"visibility\")!=\"visible\"&&b.hScrollBar.css(\"visibility\")!=\"visible\"){a.jqx.mobile.setTouchScroll(false,this.element.id)}else{a.jqx.mobile.setTouchScroll(true,this.element.id)}this._arrange()}},isTouchDevice:function(){var b=a.jqx.mobile.isTouchDevice();if(this.touchMode==true){if(this.touchDevice){return true}if(a.jqx.browser.msie&&a.jqx.browser.version<9){return false}this.touchDevice=true;b=true;a.jqx.mobile.setMobileSimulator(this.element)}else{if(this.touchMode==false){b=false}}if(b&&this.touchModeStyle!=false){this.scrollBarSize=a.jqx.utilities.touchScrollBarSize}if(b){this.host.addClass(this.toThemeProperty(\"jqx-touch\"))}return b},beginUpdate:function(){this.updatingListBox=true},endUpdate:function(){this.updatingListBox=false;this._addItems();this._renderItems()},beginUpdateLayout:function(){this.updating=true},resumeUpdateLayout:function(){this.updating=false;this.vScrollInstance.value=0;this._render(false)},propertiesChangedHandler:function(b,c,d){if(d.width&&d.height&&Object.keys(d).length==2){b._cachedItemHtml=new Array();b.refresh()}},propertyChangedHandler:function(b,c,e,d){if(this.isInitialized==undefined||this.isInitialized==false){return}if(e==d){return}if(b.batchUpdate&&b.batchUpdate.width&&b.batchUpdate.height&&Object.keys(b.batchUpdate).length==2){return}if(c==\"_renderOnDemand\"){b._render(false,true);if(b.selectedIndex!=-1){var f=b.selectedIndex;b.selectedIndex=-1;b._stopEvents=true;b.selectIndex(f,false,true);if(b.selectedIndex==-1){b.selectedIndex=f}b._stopEvents=false}}if(c==\"filterable\"){b.refresh()}if(c==\"filterHeight\"){b._arrange()}if(c==\"filterPlaceHolder\"){b.filterInput.attr(\"placeholder\",d)}if(c==\"renderer\"){b._cachedItemHtml=new Array();b.refresh()}if(c==\"itemHeight\"){b.refresh()}if(c==\"source\"||c==\"checkboxes\"){if(d==null&&e&&e.unbindBindingUpdate){e.unbindBindingUpdate(b.element.id);e.unbindDownloadComplete(b.element.id)}b.clearSelection();b.refresh()}if(c==\"scrollBarSize\"||c==\"equalItemsWidth\"){if(d!=e){b._updatescrollbars()}}if(c==\"disabled\"){b._renderItems();b.vScrollBar.jqxScrollBar({disabled:d});b.hScrollBar.jqxScrollBar({disabled:d})}if(c==\"touchMode\"||c==\"rtl\"){b._removeHandlers();b.vScrollBar.jqxScrollBar({touchMode:d});b.hScrollBar.jqxScrollBar({touchMode:d});if(c==\"touchMode\"){if(!(a.jqx.browser.msie&&a.jqx.browser.version<9)){var h=a(\"<div class='overlay' unselectable='on' style='z-index: 99; -webkit-appearance: none; border: none; background: black; opacity: 0.01; outline: none; border: none; padding: 0px; overflow: hidden; margin: 0px; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div>\");b.content.parent().append(h);b.overlayContent=b.host.find(\".overlay\")}}if(b.filterable&&b.filterInput){if(c==\"rtl\"&&d){b.filterInput.addClass(b.toThemeProperty(\"jqx-rtl\"))}else{if(c==\"rtl\"&&!d){b.filterInput.removeClass(b.toThemeProperty(\"jqx-rtl\"))}}b._arrange()}b._updateTouchScrolling();b._addHandlers();b._render(false)}if(!this.updating){if(c==\"width\"||c==\"height\"){b._updateSize()}}if(c==\"theme\"){if(e!=d){b.hScrollBar.jqxScrollBar({theme:b.theme});b.vScrollBar.jqxScrollBar({theme:b.theme});b.host.removeClass();b.host.addClass(b.toThemeProperty(\"jqx-listbox\"));b.host.addClass(b.toThemeProperty(\"jqx-widget\"));b.host.addClass(b.toThemeProperty(\"jqx-widget-content\"));b.host.addClass(b.toThemeProperty(\"jqx-reset\"));b.host.addClass(b.toThemeProperty(\"jqx-rc-all\"));b.refresh()}}if(c==\"selectedIndex\"){b.clearSelection();b.selectIndex(d,true)}if(c==\"displayMember\"||c==\"valueMember\"){if(e!=d){var g=b.selectedIndex;b.refresh();b.selectedIndex=g;b.selectedIndexes[g]=g}b._renderItems()}if(c==\"autoHeight\"){if(e!=d){b._render(false)}else{b._updatescrollbars();b._renderItems()}}if(b._checkForHiddenParent&&a.jqx.isHidden(b.host)){a.jqx.utilities.resize(this.host,function(){b._updateSize()},false,b._checkForHiddenParent)}},loadFromSelect:function(g){if(g==null){return}var c=\"#\"+g;var d=a(c);if(d.length>0){var b=a.jqx.parseSourceTag(d[0]);var f=b.items;var e=b.index;this.source=f;this.fromSelect=true;this.clearSelection();this.selectedIndex=e;this.selectedIndexes[this.selectedIndex]=this.selectedIndex;this.refresh()}},invalidate:function(){this._cachedItemHtml=[];this._renderItems();this.virtualSize=null;this._updateSize()},refresh:function(c){var b=this;if(this.vScrollBar==undefined){return}this._cachedItemHtml=[];this.visibleItems=new Array();var d=function(e){if(e==true){if(b.selectedIndex!=-1){var f=b.selectedIndex;b.selectedIndex=-1;b._stopEvents=true;b.selectIndex(f,false,true);if(b.selectedIndex==-1){b.selectedIndex=f}b._stopEvents=false}}};if(this.itemswrapper!=null){this.itemswrapper.remove();this.itemswrapper=null}if(a.jqx.dataAdapter&&this.source!=null&&this.source._source){this.databind(this.source,c);d(c);return}if(this.autoBind||(!this.autoBind&&!c)){if(this.field){this.loadSelectTag()}this.items=this.loadItems(this.source)}this._render(false,c==true);d(c);this._raiseEvent(\"6\")},loadSelectTag:function(){var b=a.jqx.parseSourceTag(this.field);this.source=b.items;if(this.selectedIndex==-1){this.selectedIndex=b.index}},_render:function(c,b){if(this._renderOnDemand){this.visibleItems=new Array();this.renderedVisibleItems=new Array();this._renderItems();return}this._addItems();this._renderItems();this.vScrollInstance.setPosition(0);this._cachedItemHtml=new Array();if(c==undefined||c){if(this.items!=undefined&&this.items!=null){if(this.selectedIndex>=0&&this.selectedIndex<this.items.length){this.selectIndex(this.selectedIndex,true,true,true)}}}if(this.allowDrag&&this._enableDragDrop){this._enableDragDrop();if(this.isTouchDevice()){this._removeHandlers();if(this.overlayContent){this.overlayContent.remove();this.overlayContent=null}this._updateTouchScrolling();this._addHandlers();return}}this._updateTouchScrolling();if(this.rendered){this.rendered()}if(this.ready){this.ready()}},_hitTest:function(c,f){if(this.filterable){f-=this.filterHeight;if(f<0){f=0}}var e=parseInt(this.vScrollInstance.value);var b=this._searchFirstVisibleIndex(f+e,this.renderedVisibleItems);if(this.renderedVisibleItems[b]!=undefined&&this.renderedVisibleItems[b].isGroup){return null}if(this.renderedVisibleItems.length>0){var d=this.renderedVisibleItems[this.renderedVisibleItems.length-1];if(d.height+d.top<f+e){return null}}b=this._searchFirstVisibleIndex(f+e);return this.visibleItems[b];return null},_searchFirstVisibleIndex:function(e,f){if(e==undefined){e=parseInt(this.vScrollInstance.value)}var c=0;if(f==undefined||f==null){f=this.visibleItems}var b=f.length;while(c<=b){mid=parseInt((c+b)/2);var d=f[mid];if(d==undefined){break}if(d.initialTop>e&&d.initialTop+d.height>e){b=mid-1}else{if(d.initialTop<e&&d.initialTop+d.height<=e){c=mid+1}else{return mid;break}}}return 0},_renderItems:function(){if(this.items==undefined||this.items.length==0){this.visibleItems=new Array();return}if(this.updatingListBox==true){return}var N=this.isTouchDevice();var G=this.vScrollInstance;var h=this.hScrollInstance;var g=parseInt(G.value);var f=parseInt(h.value);if(this.rtl){if(this.hScrollBar[0].style.visibility!=\"hidden\"){f=h.max-f}}var B=this.items.length;var M=this.host.width();var K=parseInt(this.content[0].style.width);var b=K+parseInt(h.max);var q=parseInt(this.vScrollBar[0].style.width)+2;if(this.vScrollBar[0].style.visibility==\"hidden\"){q=0}if(this.hScrollBar[0].style.visibility!=\"visible\"){b=K}var l=this._getVirtualItemsCount();var L=new Array();var F=0;var E=parseInt(this.element.style.height)+2;if(this.element.style.height.indexOf(\"%\")!=-1){E=this.host.outerHeight()}if(isNaN(E)){E=0}var t=0;var s=0;var Q=0;if(G.value==0||this.visibleItems.length==0){for(var r=0;r<this.items.length;r++){var x=this.items[r];if(x.visible){x.top=-g;x.initialTop=-g;if(!x.isGroup&&x.visible){this.visibleItems[s++]=x;x.visibleIndex=s-1}this.renderedVisibleItems[Q++]=x;x.left=-f;var c=x.top+x.height;if(c>=0&&x.top-x.height<=E){L[F++]={index:r,item:x}}g-=x.height;g--}}}var m=g>0?this._searchFirstVisibleIndex(this.vScrollInstance.value,this.renderedVisibleItems):0;var O=0;F=0;var z=this.vScrollInstance.value;var J=0;while(O<100+E){var x=this.renderedVisibleItems[m];if(x==undefined){break}if(x.visible){x.left=-f;var c=x.top+x.height-z;if(c>=0&&x.initialTop-z-x.height<=2*E){L[F++]={index:m,item:x}}}m++;if(x.visible){O+=x.initialTop-z+x.height-O}J++;if(J>this.items.length-1){break}}if(this._renderOnDemand){return}var o=this.toThemeProperty(\"jqx-listitem-state-normal\")+\" \"+this.toThemeProperty(\"jqx-item\");var i=this.toThemeProperty(\"jqx-listitem-state-group\");var P=this.toThemeProperty(\"jqx-listitem-state-disabled\")+\" \"+this.toThemeProperty(\"jqx-fill-state-disabled\");var C=0;var n=this;for(var r=0;r<this.visualItems.length;r++){var D=this.visualItems[r];var I=function(){var y=D[0].firstChild;if(n.checkboxes){y=D[0].lastChild}if(y!=null){y.style.visibility=\"hidden\";y.className=\"\"}if(n.checkboxes){var R=D.find(\".chkbox\");R.css({visibility:\"hidden\"})}};if(r<L.length){var x=L[r].item;if(x.initialTop-z>=E){I();continue}var A=a(D[0].firstChild);if(this.checkboxes){A=a(D[0].lastChild)}if(A.length==0){continue}if(A[0]==null){continue}A[0].className=\"\";A[0].style.display=\"block\";A[0].style.visibility=\"inherit\";var p=\"\";if(!x.isGroup&&!this.selectedIndexes[x.index]>=0){p=o}else{p=i}if(x.disabled||this.disabled){p+=\" \"+P}if(this.roundedcorners){p+=\" \"+this.toThemeProperty(\"jqx-rc-all\")}if(N){p+=\" \"+this.toThemeProperty(\"jqx-listitem-state-normal-touch\")}A[0].className=p;if(this.renderer){if(!x.key){x.key=this.generatekey()}if(!this._cachedItemHtml){this._cachedItemHtml=new Array()}if(this._cachedItemHtml[x.key]){if(A[0].innerHTML!=this._cachedItemHtml[x.key]){A[0].innerHTML=this._cachedItemHtml[x.key]}}else{var w=this.renderer(x.index,x.label,x.value);A[0].innerHTML=w;this._cachedItemHtml[x.key]=A[0].innerHTML}}else{if(this.itemHeight!==-1){var k=2+2*parseInt(A.css(\"padding-top\"));A[0].style.lineHeight=(x.height-k)+\"px\";A.css(\"vertical-align\",\"middle\")}if(x.html!=null&&x.html.toString().length>0){A[0].innerHTML=x.html}else{if(x.label!=null||x.value!=null){if(x.label!=null){if(A[0].innerHTML!==x.label){A[0].innerHTML=x.label}if(a.trim(x.label)==\"\"){A[0].innerHTML=this.emptyString;if(this.emptyString==\"\"){A[0].style.height=(x.height-8)+\"px\"}}if(!this.incrementalSearch&&!x.disabled){if(this.searchString!=undefined&&this.searchString!=\"\"){A[0].innerHTML=this._highlight(x.label.toString(),this.searchString)}}}else{if(x.label===null){A[0].innerHTML=this.emptyString;if(this.emptyString==\"\"){A[0].style.height=(x.height-8)+\"px\"}}else{if(A[0].innerHTML!==x.value){A[0].innerHTML=x.value}else{if(x.label==\"\"){A[0].innerHTML=\" \"}}}}}else{if(x.label==\"\"||x.label==null){A[0].innerHTML=\"\";A[0].style.height=(x.height-8)+\"px\"}}}}D[0].style.left=x.left+\"px\";D[0].style.top=x.initialTop-z+\"px\";x.element=A[0];if(x.title){A[0].title=x.title}if(this.equalItemsWidth&&!x.isGroup){if(t==0){var d=parseInt(b);var v=parseInt(A.outerWidth())-parseInt(A.width());d-=v;var H=1;if(H!=null){H=parseInt(H)}else{H=0}d-=2*H;t=d;if(this.checkboxes&&this.hScrollBar[0].style.visibility==\"hidden\"){t-=18}}if(K>this.virtualSize.width){A[0].style.width=t+\"px\";x.width=t}else{A[0].style.width=-4+this.virtualSize.width+\"px\";x.width=this.virtualSize.width-4}}else{if(A.width()<this.host.width()){A.width(this.host.width()-2)}}if(this.rtl){A[0].style.textAlign=\"right\"}if(this.autoItemsHeight){A[0].style.whiteSpace=\"pre-line\";A.width(t);x.width=t}C=0;if(this.checkboxes&&!x.isGroup){if(C==0){C=(x.height-16)/2;C++}var e=a(D.children()[0]);e[0].item=x;if(!this.rtl){if(A[0].style.left!=\"18px\"){A[0].style.left=\"18px\"}}else{if(A[0].style.left!=\"0px\"){A[0].style.left=\"0px\"}}if(this.rtl){e.css(\"left\",8+x.width+\"px\")}e[0].style.top=C+\"px\";e[0].style.display=\"block\";e[0].style.visibility=\"inherit\";var u=x.checked;var j=x.checked?\" \"+this.toThemeProperty(\"jqx-checkbox-check-checked\"):\"\";if(e[0].firstChild&&e[0].firstChild.firstChild&&e[0].firstChild.firstChild.firstChild){if(e[0].firstChild.firstChild){if(u){e[0].firstChild.firstChild.firstChild.className=j}else{if(u===false){e[0].firstChild.firstChild.firstChild.className=\"\"}else{if(u===null){e[0].firstChild.firstChild.firstChild.className=this.toThemeProperty(\"jqx-checkbox-check-indeterminate\")}}}}}if(a.jqx.ariaEnabled){if(u){D[0].setAttribute(\"aria-selected\",true)}else{D[0].removeAttribute(\"aria-selected\")}}}else{if(this.checkboxes){var e=a(D.children()[0]);e.css({display:\"none\",visibility:\"inherit\"})}}if(!x.disabled&&((!this.filterable&&this.selectedIndexes[x.visibleIndex]>=0)||(x.selected&&this.filterable))){A.addClass(this.toThemeProperty(\"jqx-listitem-state-selected\"));A.addClass(this.toThemeProperty(\"jqx-fill-state-pressed\"));if(a.jqx.ariaEnabled){D[0].setAttribute(\"aria-selected\",true);this._activeElement=D[0]}}else{if(!this.checkboxes){if(a.jqx.ariaEnabled){D[0].removeAttribute(\"aria-selected\")}}}}else{I()}}},generatekey:function(){var b=function(){return(((1+Math.random())*65536)|0).toString(16).substring(1)};return(b()+b()+\"-\"+b()+\"-\"+b()+\"-\"+b()+\"-\"+b()+b()+b())},_calculateVirtualSize:function(l){if(this._renderOnDemand){return}var p=0;var n=2;var g=0;var o=document.createElement(\"span\");if(this.equalItemsWidth){a(o).css(\"float\",\"left\")}o.style.whiteSpace=\"pre\";var h=0;var i=undefined===l?this.host.outerHeight():l+2;document.body.appendChild(o);var e=this.items.length;var j=this.host.width();if(this.autoItemsHeight){j-=10;if(this.vScrollBar.css(\"visibility\")!=\"hidden\"){j-=20}}if(this.autoItemsHeight||this.renderer||this.groups.length>=1||(e>0&&this.items[0].html!=null&&this.items[0].html!=\"\")){for(var g=0;g<e;g++){var s=this.items[g];if(s.isGroup&&(s.label==\"\"&&s.html==\"\")){continue}if(!s.visible){continue}var d=\"\";if(!s.isGroup){d+=this.toThemeProperty(\"jqx-widget jqx-listitem-state-normal jqx-rc-all\")}else{d+=this.toThemeProperty(\"jqx-listitem-state-group jqx-rc-all\")}d+=\" \"+this.toThemeProperty(\"jqx-fill-state-normal\");if(this.isTouchDevice()){d+=\" \"+this.toThemeProperty(\"jqx-touch\")}o.className=d;if(this.autoItemsHeight){o.style.whiteSpace=\"pre-line\";var b=this.checkboxes?-20:0;o.style.width=(b+j)+\"px\"}if(this.renderer){var k=this.renderer(s.index,s.label,s.value);o.innerHTML=k}else{if(s.html!=null&&s.html.toString().length>0){o.innerHTML=s.html}else{if(s.label!=null||s.value!=null){if(s.label!=null){o.innerHTML=s.label;if(s.label==\"\"){o.innerHTML=\"Empty\"}}else{o.innerHTML=s.value}}}}var r=o.offsetHeight;var t=o.offsetWidth;if(this.itemHeight>-1){r=this.itemHeight}s.height=r;s.width=t;r++;n+=r;p=Math.max(p,t);if(n<=i){h++}}}else{var n=0;var m=0;var c=\"\";var u=0;var f=0;var q=-1;for(var g=0;g<e;g++){var s=this.items[g];if(s.isGroup&&(s.label==\"\"&&s.html==\"\")){continue}if(!s.visible){continue}q++;var d=\"\";if(q==0){d+=this.toThemeProperty(\"jqx-listitem-state-normal jqx-rc-all\");d+=\" \"+this.toThemeProperty(\"jqx-fill-state-normal\");d+=\" \"+this.toThemeProperty(\"jqx-widget\");d+=\" \"+this.toThemeProperty(\"jqx-listbox\");d+=\" \"+this.toThemeProperty(\"jqx-widget-content\");if(this.isTouchDevice()){d+=\" \"+this.toThemeProperty(\"jqx-touch\");d+=\" \"+this.toThemeProperty(\"jqx-listitem-state-normal-touch\")}o.className=d;if(this.autoItemsHeight){o.style.whiteSpace=\"pre-line\";var b=this.checkboxes?-20:0;o.style.width=(b+j)+\"px\"}if(s.html==null||(s.label==\"\"||s.label==null)){o.innerHTML=\"Item\"}else{if(s.html!=null&&s.html.toString().length>0){o.innerHTML=s.html}else{if(s.label!=null||s.value!=null){if(s.label!=null){if(s.label.toString().match(new RegExp(\"\\\\w\"))!=null||s.label.toString().match(new RegExp(\"\\\\d\"))!=null){o.innerHTML=s.label}else{o.innerHTML=\"Item\"}}else{o.innerHTML=s.value}}}}var r=1+o.offsetHeight;if(this.itemHeight>-1){r=this.itemHeight}m=r}if(u!=undefined){f=u}if(s.html!=null&&s.html.toString().length>0){u=Math.max(u,s.html.toString().length);if(f!=u){c=s.html}}else{if(s.label!=null){u=Math.max(u,s.label.length);if(f!=u){c=s.label}}else{if(s.value!=null){u=Math.max(u,s.value.length);if(f!=u){c=s.value}}}}s.height=m;n+=m;n++;if(n<=i){h++}}o.innerHTML=c;p=o.offsetWidth}n+=2;if(h<10){h=10}if(this.filterable){n+=this.filterHeight}o.parentNode.removeChild(o);return{width:p,height:n,itemsPerPage:h}},_getVirtualItemsCount:function(){if(this.virtualItemsCount==0){var b=parseInt(this.host.height())/5;if(b>this.items.length){b=this.items.length}return b}else{return this.virtualItemsCount}},_addItems:function(r){if(this._renderOnDemand){return}var v=this;if(v.updatingListBox==true){return}if(v.items==undefined||v.items.length==0){v.virtualSize={width:0,height:0,itemsPerPage:0};v._updatescrollbars();v.renderedVisibleItems=new Array();if(v.itemswrapper){v.itemswrapper.children().remove()}return}var h=v.host.height();if(r==false){var b=v._calculateVirtualSize(h);var g=b.itemsPerPage*2;if(v.autoHeight){g=v.items.length}v.virtualItemsCount=Math.min(g,v.items.length);var q=b.width;v.virtualSize=b;v._updatescrollbars();return}var n=this;var l=0;v.visibleItems=new Array();v.renderedVisibleItems=new Array();v._removeHandlers();if(v.allowDrag&&v._enableDragDrop){v.itemswrapper=null}if(v.itemswrapper==null){v.content[0].innerHTML=\"\";v.itemswrapper=a('<div style=\"outline: 0 none; overflow:hidden; width:100%; position: relative;\"></div>');v.itemswrapper[0].style.height=(2*h)+\"px\";v.content[0].appendChild(v.itemswrapper[0])}var b=v._calculateVirtualSize(h);var g=b.itemsPerPage*2;if(v.autoHeight){g=v.items.length}v.virtualItemsCount=Math.min(g,v.items.length);var v=this;var q=b.width;v.virtualSize=b;var c=Math.max(v.host.width(),17+b.width);v.itemswrapper[0].style.width=c+\"px\";var e=0;var i=\"\";var f=a.jqx.browser.msie&&a.jqx.browser.version<9;var s=f?' unselectable=\"on\"':\"\";for(var j=e;j<v.virtualItemsCount;j++){var u=v.items[j];var p=\"listitem\"+j+v.element.id;i+=\"<div\"+s+\" role='option' id='\"+p+\"' class='jqx-listitem-element'>\";if(v.checkboxes){i+='<div style=\"background-color: transparent; padding: 0; margin: 0; position: absolute; float: left; width: 16px; height: 16px;\" class=\"chkbox\">';var o='<div class=\"'+v.toThemeProperty(\"jqx-checkbox-default\")+\" \"+v.toThemeProperty(\"jqx-fill-state-normal\")+\" \"+v.toThemeProperty(\"jqx-rc-all\")+'\"><div style=\"cursor: pointer; width: 13px; height: 13px;\">';var w=u.checked?\" \"+v.toThemeProperty(\"jqx-checkbox-check-checked\"):\"\";o+='<span style=\"width: 13px; height: 13px;\" class=\"checkBoxCheck'+w+'\"></span>';o+=\"</div></div>\";i+=o;i+=\"</div>\"}i+=\"<span\"+s+\" style='white-space: pre; -ms-touch-action: none;'></span></div>\"}if(n.WinJS){v.itemswrapper.html(i)}else{v.itemswrapper[0].innerHTML=i}var d=v.itemswrapper.children();for(var j=e;j<v.virtualItemsCount;j++){var u=v.items[j];var t=a(d[j]);if(v.allowDrag&&v._enableDragDrop){t.addClass(\"draggable\")}if(v.checkboxes){var k=a(t.children()[0]);t.css(\"float\",\"left\");var m=a(t[0].firstChild);m.css(\"float\",\"left\")}t[0].style.height=u.height+\"px\";t[0].style.top=l+\"px\";l+=u.height+1;v.visualItems[j]=t}v._addHandlers();v._updatescrollbars();if(v.autoItemsHeight){var b=v._calculateVirtualSize(h);var g=b.itemsPerPage*2;if(v.autoHeight){g=v.items.length}v.virtualItemsCount=Math.min(g,v.items.length);var v=this;var q=b.width;v.virtualSize=b;v._updatescrollbars()}if(a.jqx.browser.msie&&a.jqx.browser.version<8){v.host.attr(\"hideFocus\",true);v.host.find(\"div\").attr(\"hideFocus\",true)}},_updatescrollbars:function(){var k=this;if(!k.virtualSize){return}var n=k.virtualSize.height;var j=k.virtualSize.width;var f=k.vScrollInstance;var e=k.hScrollInstance;k._arrange(false);var l=false;var o=k.host.outerWidth();var m=k.host.outerHeight();var b=0;if(j>o){b=k.hScrollBar.outerHeight()+2}if(n+b>m){var d=f.max;f.max=2+parseInt(n)+b-parseInt(m-2);if(k.vScrollBar[0].style.visibility!=\"inherit\"){k.vScrollBar[0].style.visibility=\"inherit\";l=true}if(d!=f.max){f._arrange()}}else{if(k.vScrollBar[0].style.visibility!=\"hidden\"){k.vScrollBar[0].style.visibility=\"hidden\";l=true;f.setPosition(0)}}var h=0;if(k.vScrollBar[0].style.visibility!=\"hidden\"){h=k.scrollBarSize+6}var g=k.checkboxes?20:0;if(k.autoItemsHeight){k.hScrollBar[0].style.visibility=\"hidden\"}else{if(j>=o-h-g){var i=e.max;if(k.vScrollBar[0].style.visibility==\"inherit\"){e.max=g+h+parseInt(j)-k.host.width()+4}else{e.max=g+parseInt(j)-k.host.width()+6}if(k.hScrollBar[0].style.visibility!=\"inherit\"){k.hScrollBar[0].style.visibility=\"inherit\";l=true}if(i!=e.max){e._arrange()}if(k.vScrollBar[0].style.visibility==\"inherit\"){f.max=2+parseInt(n)+k.hScrollBar.outerHeight()+2-parseInt(k.host.height())}}else{if(k.hScrollBar[0].style.visibility!=\"hidden\"){k.hScrollBar[0].style.visibility=\"hidden\";l=true}}}e.setPosition(0);if(l){k._arrange()}if(k.itemswrapper){k.itemswrapper[0].style.width=Math.max(0,Math.max(o-2,17+j))+\"px\";k.itemswrapper[0].style.height=Math.max(0,2*m)+\"px\"}var c=k.isTouchDevice();if(c){if(k.vScrollBar.css(\"visibility\")!=\"visible\"&&k.hScrollBar.css(\"visibility\")!=\"visible\"){a.jqx.mobile.setTouchScroll(false,k.element.id)}else{a.jqx.mobile.setTouchScroll(true,k.element.id)}}},clear:function(){this.source=null;this.clearSelection();this.refresh()},clearSelection:function(b){for(var c=0;c<this.selectedIndexes.length;c++){if(this.selectedIndexes[c]&&this.selectedIndexes[c]!=-1){this._raiseEvent(\"1\",{index:c,type:\"api\",item:this.getVisibleItem(c),originalEvent:null})}this.selectedIndexes[c]=-1}this.selectedIndex=-1;this.selectedValue=null;this.selectedValues=new Array();if(b!=false){this._renderItems()}},unselectIndex:function(c,d){if(isNaN(c)){return}this.selectedIndexes[c]=-1;var g=false;for(var e=0;e<this.selectedIndexes.length;e++){var b=this.selectedIndexes[e];if(b!=-1&&b!=undefined){g=true}}if(!g){this.selectedValue=null;this.selectedIndex=-1;var f=this.getVisibleItem(c);if(f){if(this.selectedValues[f.value]){this.selectedValues[f.value]=null}}}if(d==undefined||d==true){this._renderItems();this._raiseEvent(\"1\",{index:c,type:\"api\",item:this.getVisibleItem(c),originalEvent:null})}this._updateInputSelection();this._raiseEvent(\"2\",{index:c,type:\"api\",item:this.getItem(c)})},getInfo:function(){var d=this;var c=this.getItems();var b=this.getVisibleItems();var e=function(){var h=d.vScrollInstance.value;if(d.filterable){h-=d.filterHeight}var m=new Array();for(var g=0;g<b.length;g++){var j=b[g];if(j){var f=j.initialTop;var l=j.height;var k=true;if(f+l-h<0||f-h>=d.host.height()){k=false}if(k){m.push(j)}}}return m}();return{items:c,visibleItems:b,viewItems:e}},getItem:function(c){if(c==-1||isNaN(c)||typeof(c)===\"string\"){if(c===-1){return null}return this.getItemByValue(c)}var b=null;var d=a.each(this.items,function(){if(this.index==c){b=this;return false}});return b},getVisibleItem:function(b){if(b==-1||isNaN(b)||typeof(b)===\"string\"){if(b===-1){return null}return this.getItemByValue(b)}return this.visibleItems[b]},getVisibleItems:function(){return this.visibleItems},checkIndex:function(b,c,e){if(!this.checkboxes){return}if(isNaN(b)){return}if(b<0||b>=this.visibleItems.length){return}if(this.visibleItems[b]!=null&&this.visibleItems[b].disabled){return}if(this.disabled){return}var d=this.getItem(b);if(this.groups.length>0||this.filterable){var d=this.getVisibleItem(b)}if(d!=null){var f=a(d.checkBoxElement);d.checked=true;if(c==undefined||c==true){this._updateCheckedItems()}}if(e==undefined||e==true){this._raiseEvent(3,{label:d.label,value:d.value,checked:true,item:d})}},getCheckedItems:function(){if(!this.checkboxes){return null}var b=new Array();if(this.items==undefined){return}a.each(this.items,function(){if(this.checked){b[b.length]=this}});return b},checkAll:function(b){if(!this.checkboxes){return}if(this.disabled){return}var c=this;a.each(this.items,function(){var d=this;if(b!==false&&d.checked!==true){c._raiseEvent(3,{label:d.label,value:d.value,checked:true,item:d})}this.checked=true});this._updateCheckedItems()},uncheckAll:function(b){if(!this.checkboxes){return}if(this.disabled){return}var c=this;a.each(this.items,function(){var d=this;if(b!==false&&d.checked!==false){this.checked=false;c._raiseEvent(3,{label:d.label,value:d.value,checked:false,item:d})}this.checked=false});this._updateCheckedItems()},uncheckIndex:function(b,c,e){if(!this.checkboxes){return}if(isNaN(b)){return}if(b<0||b>=this.visibleItems.length){return}if(this.visibleItems[b]!=null&&this.visibleItems[b].disabled){return}if(this.disabled){return}var d=this.getItem(b);if(this.groups.length>0||this.filterable){var d=this.getVisibleItem(b)}if(d!=null){var f=a(d.checkBoxElement);d.checked=false;if(c==undefined||c==true){this._updateCheckedItems()}}if(e==undefined||e==true){this._raiseEvent(3,{label:d.label,value:d.value,checked:false,item:d})}},indeterminateIndex:function(b,c,e){if(!this.checkboxes){return}if(isNaN(b)){return}if(b<0||b>=this.visibleItems.length){return}if(this.visibleItems[b]!=null&&this.visibleItems[b].disabled){return}if(this.disabled){return}var d=this.getItem(b);if(this.groups.length>0||this.filterable){var d=this.getVisibleItem(b)}if(d!=null){var f=a(d.checkBoxElement);d.checked=null;if(c==undefined||c==true){this._updateCheckedItems()}}if(e==undefined||e==true){this._raiseEvent(3,{checked:null})}},getSelectedIndex:function(){return this.selectedIndex},getSelectedItems:function(){var b=this.getVisibleItems();var e=this.selectedIndexes;var d=[];for(var c in e){if(e[c]!=-1){d[d.length]=b[c]}}return d},getSelectedItem:function(){var b=this.getSelectedItems();if(b&&b.length>0){return b[0]}return null},_updateCheckedItems:function(){var b=this.selectedIndex;this.clearSelection(false);var c=this.getCheckedItems();this.selectedIndex=b;this._renderItems();var d=a.data(this.element,\"hoveredItem\");if(d!=null){a(d).addClass(this.toThemeProperty(\"jqx-listitem-state-hover\"));a(d).addClass(this.toThemeProperty(\"jqx-fill-state-hover\"))}this._updateInputSelection()},getItemByValue:function(d){if(this.visibleItems==null){return}if(d&&d.value){d=d.value}if(this.itemsByValue){return this.itemsByValue[a.trim(d).split(\" \").join(\"?\")]}var b=this.visibleItems;for(var c=0;c<b.length;c++){if(b[c].value==d){return b[c];break}}},checkItem:function(c){if(c!=null){var b=this._getItemByParam(c);return this.checkIndex(b.visibleIndex,true)}return false},uncheckItem:function(c){if(c!=null){var b=this._getItemByParam(c);return this.uncheckIndex(b.visibleIndex,true)}return false},indeterminateItem:function(c){if(c!=null){var b=this._getItemByParam(c);return this.indeterminateIndex(b.visibleIndex,true)}return false},val:function(c){if(!this.input){return}var d=function(f){for(var e in f){if(f.hasOwnProperty(e)){return false}}if(typeof c==\"number\"){return false}if(typeof c==\"date\"){return false}if(typeof c==\"boolean\"){return false}if(typeof c==\"string\"){return false}return true};if(d(c)||arguments.length==0){return this.input.val()}var b=this.getItemByValue(c);if(b!=null){this.selectItem(b)}if(this.input){return this.input.val()}},selectItem:function(c){if(c!=null){if(c.index==undefined){var b=this.getItemByValue(c);if(b){c=b}}return this.selectIndex(c.visibleIndex,true)}else{this.clearSelection()}return false},unselectItem:function(c){if(c!=null){if(c.index==undefined){var b=this.getItemByValue(c);if(b){c=b}}return this.unselectIndex(c.visibleIndex,true)}return false},selectIndex:function(j,r,c,d,m,b){if(isNaN(j)){return}var q=this.selectedIndex;if(this.filterable){this.selectedIndex=-1}if(j<-1||j>=this.visibleItems.length){return}if(this.visibleItems[j]!=null&&this.visibleItems[j].disabled){return}if(this.disabled){return}if(!this.multiple&&!this.multipleextended&&this.selectedIndex==j&&!d&&!this.checkboxes){if(this.visibleItems&&this.items&&this.visibleItems.length!=this.items.length){h=this.getVisibleItem(j);if(h){this.selectedValue=h.value;this.selectedValues[h.value]=h.value}}return}if(this.checkboxes){this._updateCheckedItems();var p=q;if(this.selectedIndex==j&&!this.multiple){p=-1}if(m==undefined){m=\"none\"}var h=this.getItem(j);var s=this.getItem(p);if(this.visibleItems&&this.items&&this.visibleItems.length!=this.items.length){h=this.getVisibleItem(j);s=this.getVisibleItem(p)}this._raiseEvent(\"1\",{index:p,type:m,item:s,originalEvent:b});this.selectedIndex=j;this.selectedIndexes[p]=-1;this.selectedIndexes[j]=j;if(h){this.selectedValue=h.value;this.selectedValues[h.value]=h.value}this._raiseEvent(\"0\",{index:j,type:m,item:h,originalEvent:b});this._renderItems();return}this.focused=true;var o=false;if(this.selectedIndex!=j){o=true}var p=q;if(this.selectedIndex==j&&!this.multiple){p=-1}if(m==undefined){m=\"none\"}var h=this.getItem(j);var s=this.getItem(p);if(this.visibleItems&&this.items&&this.visibleItems.length!=this.items.length){h=this.getVisibleItem(j);s=this.getVisibleItem(p)}if(d!=undefined&&d){this._raiseEvent(\"1\",{index:p,type:m,item:s,originalEvent:b});this.selectedIndex=j;this.selectedIndexes[p]=-1;this.selectedIndexes[j]=j;if(h){this.selectedValue=h.value;this.selectedValues[h.value]=h.value}this._raiseEvent(\"0\",{index:j,type:m,item:h,originalEvent:b})}else{var l=this;var e=function(t,x,v,w,u,i){l._raiseEvent(\"1\",{index:x,type:v,item:w,originalEvent:i});l.selectedIndex=t;l.selectedIndexes=[];x=t;l.selectedIndexes[t]=t;l.selectedValues=new Array();if(u){l.selectedValues[u.value]=u.value}l._raiseEvent(\"0\",{index:t,type:v,item:u,originalEvent:i})};var k=function(t,x,v,w,u,i){if(l.selectedIndexes[t]==undefined||l.selectedIndexes[t]==-1){l.selectedIndexes[t]=t;l.selectedIndex=t;if(u){l.selectedValues[u.value]=u.value;l._raiseEvent(\"0\",{index:t,type:v,item:u,originalEvent:i})}}else{x=l.selectedIndexes[t];w=l.getVisibleItem(x);if(w){l.selectedValues[w.value]=null}l.selectedIndexes[t]=-1;l.selectedIndex=-1;l._raiseEvent(\"1\",{index:x,type:v,item:w,originalEvent:i})}};if(this.multipleextended){if(!this._shiftKey&&!this._ctrlKey){if(m!=\"keyboard\"&&m!=\"mouse\"){k(j,p,m,s,h,b);l._clickedIndex=j}else{this.clearSelection(false);l._clickedIndex=j;e(j,p,m,s,h,b)}}else{if(this._ctrlKey){if(m==\"keyboard\"){this.clearSelection(false);l._clickedIndex=j}k(j,p,m,s,h,b)}else{if(this._shiftKey){if(l._clickedIndex==undefined){l._clickedIndex=p}var f=Math.min(l._clickedIndex,j);var n=Math.max(l._clickedIndex,j);this.clearSelection(false);for(var g=f;g<=n;g++){l.selectedIndexes[g]=g;l.selectedValues[l.getVisibleItem(g).value]=l.getVisibleItem(g).value;l._raiseEvent(\"0\",{index:g,type:m,item:this.getVisibleItem(g),originalEvent:b})}if(m!=\"keyboard\"){l.selectedIndex=l._clickedIndex}else{l.selectedIndex=j}}}}}else{if(this.multiple){k(j,p,m,s,h,b)}else{if(h){this.selectedValue=h.value}e(j,p,m,s,h,b)}}}if(c==undefined||c==true){this._renderItems()}if(r!=undefined&&r!=null&&r==true){this.ensureVisible(j)}this._raiseEvent(\"2\",{index:j,item:h,oldItem:s,type:m,originalEvent:b});this._updateInputSelection();return o},_updateInputSelection:function(){this._syncSelection();var c=new Array();if(this.input){if(this.selectedIndex==-1){this.input.val(\"\")}else{if(this.items){if(this.items[this.selectedIndex]!=undefined){this.input.val(this.items[this.selectedIndex].value);c.push(this.items[this.selectedIndex].value)}}}if(this.multiple||this.multipleextended||this.checkboxes){var b=!this.checkboxes?this.getSelectedItems():this.getCheckedItems();var e=\"\";if(b){for(var d=0;d<b.length;d++){if(undefined!=b[d]){if(d==b.length-1){e+=b[d].value}else{e+=b[d].value+\",\"}c.push(b[d].value)}}this.input.val(e)}}}if(this.field&&this.input){if(this.field.nodeName.toLowerCase()==\"select\"){a.each(this.field,function(f,g){a(this).removeAttr(\"selected\");this.selected=c.indexOf(this.value)>=0;if(this.selected){a(this).attr(\"selected\",true)}})}else{a.each(this.items,function(f,g){a(this.originalItem.originalItem).removeAttr(\"data-selected\");this.selected=c.indexOf(this.value)>=0;if(this.selected){a(this.originalItem.originalItem).attr(\"data-selected\",true)}})}}},isIndexInView:function(c){if(isNaN(c)){return false}if(!this.items){return false}if(c<0||c>=this.items.length){return false}var e=this.vScrollInstance.value;var d=0;if(this.filterable){d=this.filterHeight}var f=this.visibleItems[c];if(f==undefined){return true}var b=f.initialTop;var g=f.height;if(b-e<d||b-e+d+g>=this.host.outerHeight()){return false}return true},_itemsInPage:function(){var b=0;var c=this;if(this.items){a.each(this.items,function(){if((this.initialTop+this.height)>=c.content.height()){return false}b++})}return b},_firstItemIndex:function(){if(this.visibleItems!=null){if(this.visibleItems[0]){if(this.visibleItems[0].isGroup){return this._nextItemIndex(0)}else{return 0}}else{return 0}}return -1},_lastItemIndex:function(){if(this.visibleItems!=null){if(this.visibleItems[this.visibleItems.length-1]){if(this.visibleItems[this.visibleItems.length-1].isGroup){return this._prevItemIndex(this.visibleItems.length-1)}else{return this.visibleItems.length-1}}else{return this.visibleItems.length-1}}return -1},_nextItemIndex:function(b){for(indx=b+1;indx<this.visibleItems.length;indx++){if(this.visibleItems[indx]){if(!this.visibleItems[indx].disabled&&!this.visibleItems[indx].isGroup){return indx}}}return -1},_prevItemIndex:function(b){for(indx=b-1;indx>=0;indx--){if(this.visibleItems[indx]){if(!this.visibleItems[indx].disabled&&!this.visibleItems[indx].isGroup){return indx}}}return -1},clearFilter:function(){this.filterInput.val(\"\");this._updateItemsVisibility(\"\")},_search:function(c){var b=this;var d=b.filterInput.val();if(c.keyCode==9){return}if(b.searchMode==\"none\"||b.searchMode==null||b.searchMode==\"undefined\"){return}if(c.keyCode==16||c.keyCode==17||c.keyCode==20){return}if(c.keyCode==37||c.keyCode==39){return false}if(c.altKey||c.keyCode==18){return}if(c.keyCode>=33&&c.keyCode<=40){return}if(c.ctrlKey||c.metaKey||b.ctrlKey){if(c.keyCode!=88&&c.keyCode!=86){return}}if(d===b.searchString){return}b._updateItemsVisibility(d)},_updateItemsVisibility:function(h){var e=this.getItems();if(e==undefined){return{index:-1,matchItem:new Array()}}var f=this;var d=-1;var i=new Array();var g=0;a.each(e,function(k){var m=\"\";if(!this.isGroup){if(this.searchLabel){m=this.searchLabel}else{if(this.label){m=this.label}else{if(this.value){m=this.value}else{if(this.title){m=this.title}else{m=\"jqxItem\"}}}}m=m.toString();var l=false;switch(f.searchMode){case\"containsignorecase\":l=a.jqx.string.containsIgnoreCase(m,h);break;case\"contains\":l=a.jqx.string.contains(m,h);break;case\"equals\":l=a.jqx.string.equals(m,h);break;case\"equalsignorecase\":l=a.jqx.string.equalsIgnoreCase(m,h);break;case\"startswith\":l=a.jqx.string.startsWith(m,h);break;case\"startswithignorecase\":l=a.jqx.string.startsWithIgnoreCase(m,h);break;case\"endswith\":l=a.jqx.string.endsWith(m,h);break;case\"endswithignorecase\":l=a.jqx.string.endsWithIgnoreCase(m,h);break}if(!l){this.visible=false}if(l){i[g++]=this;this.visible=true;d=this.visibleIndex}if(h==\"\"){this.visible=true;l=false}}});f.renderedVisibleItems=new Array();f.visibleItems=new Array();f.vScrollInstance.setPosition(0,true);f._addItems(false);f._renderItems();for(var b=0;b<f.items.length;b++){f.selectedIndexes[b]=-1}f.selectedIndex=-1;for(var c in f.selectedValues){var h=f.selectedValues[c];var j=f.getItemByValue(h);if(j){if(j.visible){f.selectedIndex=j.visibleIndex;f.selectedIndexes[j.visibleIndex]=j.visibleIndex}}}f._syncSelection();if(f.filterChange){f.filterChange(h)}},_getMatches:function(g,d){if(g==undefined||g.length==0){return -1}if(d==undefined){d=0}var b=this.getItems();var f=this;var c=-1;var e=0;a.each(b,function(h){var k=\"\";if(!this.isGroup){if(this.searchLabel){k=this.searchLabel.toString()}else{if(this.label){k=this.label.toString()}else{if(this.value){k=this.value.toString()}else{if(this.title){k=this.title.toString()}else{k=\"jqxItem\"}}}}var j=false;switch(f.searchMode){case\"containsignorecase\":j=a.jqx.string.containsIgnoreCase(k,g);break;case\"contains\":j=a.jqx.string.contains(k,g);break;case\"equals\":j=a.jqx.string.equals(k,g);break;case\"equalsignorecase\":j=a.jqx.string.equalsIgnoreCase(k,g);break;case\"startswith\":j=a.jqx.string.startsWith(k,g);break;case\"startswithignorecase\":j=a.jqx.string.startsWithIgnoreCase(k,g);break;case\"endswith\":j=a.jqx.string.endsWith(k,g);break;case\"endswithignorecase\":j=a.jqx.string.endsWithIgnoreCase(k,g);break}if(j&&this.visibleIndex>=d){c=this.visibleIndex;return false}}});return c},findItems:function(e){var b=this.getItems();var d=this;var c=0;var f=new Array();a.each(b,function(g){var j=\"\";if(!this.isGroup){if(this.label){j=this.label}else{if(this.value){j=this.value}else{if(this.title){j=this.title}else{j=\"jqxItem\"}}}var h=false;switch(d.searchMode){case\"containsignorecase\":h=a.jqx.string.containsIgnoreCase(j,e);break;case\"contains\":h=a.jqx.string.contains(j,e);break;case\"equals\":h=a.jqx.string.equals(j,e);break;case\"equalsignorecase\":h=a.jqx.string.equalsIgnoreCase(j,e);break;case\"startswith\":h=a.jqx.string.startsWith(j,e);break;case\"startswithignorecase\":h=a.jqx.string.startsWithIgnoreCase(j,e);break;case\"endswith\":h=a.jqx.string.endsWith(j,e);break;case\"endswithignorecase\":h=a.jqx.string.endsWithIgnoreCase(j,e);break}if(h){f[c++]=this}}});return f},_syncSelection:function(){var d=this;if(d.filterable){if(d.items){for(var b=0;b<d.items.length;b++){var c=d.items[b];c.selected=false}}for(var b=0;b<d.visibleItems.length;b++){var c=d.visibleItems[b];if(d.selectedIndexes&&d.selectedIndexes[b]==c.visibleIndex){c.selected=true}}if(d.itemswrapper){d._renderItems()}}},_handleKeyDown:function(n){var s=n.keyCode;var k=this;var g=k.selectedIndex;var d=k.selectedIndex;var l=false;if(!this.keyboardNavigation||!this.enableSelection){return}if(this.filterInput&&n.target==this.filterInput[0]){return}var j=function(){if(k.multiple||k.checkboxes){k.clearSelection(false)}};if(n.altKey){s=-1}if(s==32&&this.checkboxes){var f=this.getItem(g);if(f!=null){k._updateItemCheck(f,g);n.preventDefault()}k._searchString=\"\";k.selectIndex(f.visibleIndex,false,true,true,\"keyboard\",n);k._renderItems();return}if(k.incrementalSearch){var o=-1;if(!k._searchString){k._searchString=\"\"}if((s==8||s==46)&&k._searchString.length>=1){k._searchString=k._searchString.substr(0,k._searchString.length-1)}var r=String.fromCharCode(s);var m=(!isNaN(parseInt(r)));var i=false;if((s>=65&&s<=97)||m||s==8||s==32||s==46){if(!n.shiftKey){r=r.toLocaleLowerCase()}var e=1+k.selectedIndex;if(s!=8&&s!=32&&s!=46){if(k._searchString.length>0&&k._searchString.substr(0,1)==r){e=1+k.selectedIndex;k._searchString+=r}else{k._searchString+=r}}if(s==32){k._searchString+=\" \"}var b=this._getMatches(k._searchString,e);o=b;if(o==k._lastMatchIndex||o==-1){var b=this._getMatches(k._searchString,0);o=b}k._lastMatchIndex=o;if(o>=0){var h=function(){j();k.selectIndex(o,false,false,false,\"keyboard\",n);var t=k.isIndexInView(o);if(!t){k.ensureVisible(o)}else{k._renderItems()}};if(k._toSelectTimer){clearTimeout(k._toSelectTimer)}k._toSelectTimer=setTimeout(function(){h()},k.incrementalSearchKeyDownDelay)}i=true}if(k._searchTimer!=undefined){clearTimeout(k._searchTimer)}if(s==27||s==13){k._searchString=\"\"}k._searchTimer=setTimeout(function(){k._searchString=\"\";k._renderItems()},k.incrementalSearchDelay);if(o>=0){return}if(i){return false}}if(s==33){var p=k._itemsInPage();if(k.selectedIndex-p>=0){j();k.selectIndex(d-p,false,false,false,\"keyboard\",n)}else{j();k.selectIndex(k._firstItemIndex(),false,false,false,\"keyboard\",n)}k._searchString=\"\"}if(s==32&&this.checkboxes){var f=this.getItem(g);if(f!=null){k._updateItemCheck(f,g);n.preventDefault()}k._searchString=\"\"}if(s==36){j();k.selectIndex(k._firstItemIndex(),false,false,false,\"keyboard\",n);k._searchString=\"\"}if(s==35){j();k.selectIndex(k._lastItemIndex(),false,false,false,\"keyboard\",n);k._searchString=\"\"}if(s==34){var p=k._itemsInPage();if(k.selectedIndex+p<k.visibleItems.length){j();k.selectIndex(d+p,false,false,false,\"keyboard\",n)}else{j();k.selectIndex(k._lastItemIndex(),false,false,false,\"keyboard\",n)}k._searchString=\"\"}if(s==38){k._searchString=\"\";if(k.selectedIndex>0){var c=k._prevItemIndex(k.selectedIndex);if(c!=k.selectedIndex&&c!=-1){j();k.selectIndex(c,false,false,false,\"keyboard\",n)}else{return true}}else{return false}}else{if(s==40){k._searchString=\"\";if(k.selectedIndex+1<k.visibleItems.length){var c=k._nextItemIndex(k.selectedIndex);if(c!=k.selectedIndex&&c!=-1){j();k.selectIndex(c,false,false,false,\"keyboard\",n)}else{return true}}else{return false}}}if(s==35||s==36||s==38||s==40||s==34||s==33){var q=k.isIndexInView(k.selectedIndex);if(!q){k.ensureVisible(k.selectedIndex)}else{k._renderItems()}return false}return true},_updateItemCheck:function(b,c){if(this.disabled){return}if(b.checked==true){b.checked=(b.hasThreeStates&&this.hasThreeStates)?null:false}else{b.checked=b.checked!=null}switch(b.checked){case true:this.checkIndex(c);break;case false:this.uncheckIndex(c);break;default:this.indeterminateIndex(c);break}},wheel:function(d,c){if(c.autoHeight||!c.enableMouseWheel){d.returnValue=true;return true}if(c.disabled){return true}var e=0;if(!d){d=window.event}if(d.originalEvent&&d.originalEvent.wheelDelta){d.wheelDelta=d.originalEvent.wheelDelta}if(d.wheelDelta){e=d.wheelDelta/120}else{if(d.detail){e=-d.detail/3}}if(e){var b=c._handleDelta(e);if(b){if(d.preventDefault){d.preventDefault()}if(d.originalEvent!=null){d.originalEvent.mouseHandled=true}if(d.stopPropagation!=undefined){d.stopPropagation()}}if(b){b=false;d.returnValue=b;return b}else{return false}}if(d.preventDefault){d.preventDefault()}d.returnValue=false},_handleDelta:function(d){var c=this.vScrollInstance.value;if(d<0){this.scrollDown()}else{this.scrollUp()}var b=this.vScrollInstance.value;if(c!=b){return true}return false},focus:function(){try{this.focused=true;this.host.focus();var c=this;setTimeout(function(){c.host.focus()},25)}catch(b){}},_removeHandlers:function(){var b=this;this.removeHandler(a(document),\"keydown.listbox\"+this.element.id);this.removeHandler(a(document),\"keyup.listbox\"+this.element.id);this.removeHandler(this.vScrollBar,\"valueChanged\");this.removeHandler(this.hScrollBar,\"valueChanged\");if(this._mousewheelfunc){this.removeHandler(this.host,\"mousewheel\",this._mousewheelfunc)}else{this.removeHandler(this.host,\"mousewheel\")}this.removeHandler(this.host,\"keydown\");this.removeHandler(this.content,\"mouseleave\");this.removeHandler(this.content,\"focus\");this.removeHandler(this.content,\"blur\");this.removeHandler(this.host,\"focus\");this.removeHandler(this.host,\"blur\");this.removeHandler(this.content,\"mouseenter\");this.removeHandler(this.content,\"mouseup\");this.removeHandler(this.content,\"mousedown\");this.removeHandler(this.content,\"touchend\");if(this._mousemovefunc){this.removeHandler(this.content,\"mousemove\",this._mousemovefunc)}else{this.removeHandler(this.content,\"mousemove\")}this.removeHandler(this.content,\"selectstart\");if(this.overlayContent){this.removeHandler(this.overlayContent,a.jqx.mobile.getTouchEventName(\"touchend\"))}},_updateSize:function(){if(!this.virtualSize){this._oldheight=null;this.virtualSize=this._calculateVirtualSize()}var b=this;b._arrange();if(b.host.height()!=b._oldheight||b.host.width()!=b._oldwidth){var c=b.host.width()!=b._oldwidth;if(b.autoItemsHeight){b._render(false)}else{if(b.items){if(b.items.length>0&&b.virtualItemsCount*b.items[0].height<b._oldheight-2){b._render(false)}else{var d=b.vScrollInstance.value;b._updatescrollbars();b._renderItems();if(d<b.vScrollInstance.max){b.vScrollInstance.setPosition(d)}else{b.vScrollInstance.setPosition(b.vScrollInstance.max)}}}}b._oldwidth=b.host.width();b._oldheight=b.host.height()}},_addHandlers:function(){var l=this;this.focused=false;var m=false;var j=0;var g=null;var j=0;var b=0;var h=new Date();var e=this.isTouchDevice();this.addHandler(this.vScrollBar,\"valueChanged\",function(n){if(a.jqx.browser.msie&&a.jqx.browser.version>9){setTimeout(function(){l._renderItems()},1)}else{l._renderItems()}});this.addHandler(this.hScrollBar,\"valueChanged\",function(){l._renderItems()});if(this._mousewheelfunc){this.removeHandler(this.host,\"mousewheel\",this._mousewheelfunc)}this._mousewheelfunc=function(n){l.wheel(n,l)};this.addHandler(this.host,\"mousewheel\",this._mousewheelfunc);this.addHandler(a(document),\"keydown.listbox\"+this.element.id,function(n){l._ctrlKey=n.ctrlKey||n.metaKey;l._shiftKey=n.shiftKey});this.addHandler(a(document),\"keyup.listbox\"+this.element.id,function(n){l._ctrlKey=n.ctrlKey||n.metaKey;l._shiftKey=n.shiftKey});this.addHandler(this.host,\"keydown\",function(n){return l._handleKeyDown(n)});this.addHandler(this.content,\"mouseleave\",function(n){l.focused=false;var o=a.data(l.element,\"hoveredItem\");if(o!=null){a(o).removeClass(l.toThemeProperty(\"jqx-listitem-state-hover\"));a(o).removeClass(l.toThemeProperty(\"jqx-fill-state-hover\"));a.data(l.element,\"hoveredItem\",null)}});this.addHandler(this.content,\"focus\",function(n){if(!l.disabled){l.host.addClass(l.toThemeProperty(\"jqx-fill-state-focus\"));l.focused=true}});this.addHandler(this.content,\"blur\",function(n){l.focused=false;l.host.removeClass(l.toThemeProperty(\"jqx-fill-state-focus\"))});this.addHandler(this.host,\"focus\",function(n){if(!l.disabled){l.host.addClass(l.toThemeProperty(\"jqx-fill-state-focus\"));l.focused=true}});this.addHandler(this.host,\"blur\",function(n){if(a.jqx.browser.msie&&a.jqx.browser.version<9&&l.focused){return}l.host.removeClass(l.toThemeProperty(\"jqx-fill-state-focus\"));l.focused=false});this.addHandler(this.content,\"mouseenter\",function(n){l.focused=true});var c=a.jqx.utilities.hasTransform(this.host);if(this.enableSelection){var f=l.isTouchDevice()&&this.touchMode!==true;var i=!f?\"mousedown\":\"touchend\";var k=!f?\"mouseup\":\"touchend\";if(this.overlayContent){this.addHandler(this.overlayContent,a.jqx.mobile.getTouchEventName(\"touchend\"),function(p){if(!l.enableSelection){return true}if(f){l._newScroll=new Date();if(l._newScroll-l._lastScroll<500){return true}}var s=a.jqx.mobile.getTouches(p);var t=s[0];if(t!=undefined){var n=l.host.offset();var r=parseInt(t.pageX);var q=parseInt(t.pageY);if(l.touchMode==true){if(t._pageX!=undefined){r=parseInt(t._pageX);q=parseInt(t._pageY)}}r=r-n.left;q=q-n.top;var o=l._hitTest(r,q);if(o!=null&&!o.isGroup){l._newScroll=new Date();if(l._newScroll-l._lastScroll<500){return false}if(l.checkboxes){l._updateItemCheck(o,o.visibleIndex);return}if(o.html.indexOf(\"href\")!=-1){setTimeout(function(){l.selectIndex(o.visibleIndex,false,true,false,\"mouse\",p);l.content.trigger(\"click\");return false},100)}else{l.selectIndex(o.visibleIndex,false,true,false,\"mouse\",p);if(p.preventDefault){p.preventDefault()}l.content.trigger(\"click\");return false}}}})}else{var d=false;this.addHandler(this.content,i,function(n){if(!l.enableSelection){return true}d=true;if(f){l._newScroll=new Date();if(l._newScroll-l._lastScroll<500){return false}}l.focused=true;if(!l.isTouchDevice()&&l.focusable){l.host.focus()}if(n.target.id!=(\"listBoxContent\"+l.element.id)&&l.itemswrapper[0]!=n.target){var r=n.target;var z=a(r).offset();var q=l.host.offset();if(c){var o=a.jqx.mobile.getLeftPos(r);var t=a.jqx.mobile.getTopPos(r);z.left=o;z.top=t;o=a.jqx.mobile.getLeftPos(l.element);t=a.jqx.mobile.getTopPos(l.element);q.left=o;q.top=t}var s=parseInt(z.top)-parseInt(q.top);var v=parseInt(z.left)-parseInt(q.left);var w=l._hitTest(v,s);if(w!=null&&!w.isGroup){var p=function(y,x){if(!l._shiftKey){l._clickedIndex=y.visibleIndex}if(!l.checkboxes){l.selectIndex(y.visibleIndex,false,true,false,\"mouse\",x)}else{v=20+x.pageX-z.left;if(l.rtl){var A=l.hScrollBar.css(\"visibility\")!=\"hidden\"?l.hScrollInstance.max:l.host.width();if(v<=l.host.width()-20){if(!l.allowDrag){l._updateItemCheck(y,y.visibleIndex);l.selectIndex(y.visibleIndex,false,true,false,\"mouse\",x)}else{setTimeout(function(){if(!l._dragItem){if(!d){l._updateItemCheck(y,y.visibleIndex);l.selectIndex(y.visibleIndex,false,true,false,\"mouse\",x)}}},200)}}}else{if(v+l.hScrollInstance.value>=20){if(!l.allowDrag){l._updateItemCheck(y,y.visibleIndex);l.selectIndex(y.visibleIndex,false,true,false,\"mouse\",x)}else{setTimeout(function(){if(!l._dragItem){if(!d){l._updateItemCheck(y,y.visibleIndex);l.selectIndex(y.visibleIndex,false,true,false,\"mouse\",x)}}},200)}}}}};if(!w.disabled){if(w.html.indexOf(\"href\")!=-1){setTimeout(function(){p(w,n)},100)}else{p(w,n)}}}if(i==\"mousedown\"){var u=false;if(n.which){u=(n.which==3)}else{if(n.button){u=(n.button==2)}}if(u){return true}return false}}return true})}this.addHandler(this.content,\"mouseup\",function(n){l.vScrollInstance.handlemouseup(l,n);d=false});if(a.jqx.browser.msie){this.addHandler(this.content,\"selectstart\",function(n){return false})}}var e=this.isTouchDevice();if(this.enableHover&&!e){this._mousemovefunc=function(n){if(e){return true}if(!l.enableHover){return true}var p=a.jqx.browser.msie==true&&a.jqx.browser.version<9?0:1;if(n.target==null){return true}if(l.disabled){return true}l.focused=true;var r=l.vScrollInstance.isScrolling();if(!r&&n.target.id!=(\"listBoxContent\"+l.element.id)){if(l.itemswrapper[0]!=n.target){var t=n.target;var B=a(t).offset();var s=l.host.offset();if(c){var o=a.jqx.mobile.getLeftPos(t);var v=a.jqx.mobile.getTopPos(t);B.left=o;B.top=v;o=a.jqx.mobile.getLeftPos(l.element);v=a.jqx.mobile.getTopPos(l.element);s.left=o;s.top=v}var u=parseInt(B.top)-parseInt(s.top);var w=parseInt(B.left)-parseInt(s.left);var A=l._hitTest(w,u);if(A!=null&&!A.isGroup&&!A.disabled){var q=a.data(l.element,\"hoveredItem\");if(q!=null){a(q).removeClass(l.toThemeProperty(\"jqx-listitem-state-hover\"));a(q).removeClass(l.toThemeProperty(\"jqx-fill-state-hover\"))}a.data(l.element,\"hoveredItem\",A.element);var z=a(A.element);z.addClass(l.toThemeProperty(\"jqx-listitem-state-hover\"));z.addClass(l.toThemeProperty(\"jqx-fill-state-hover\"))}}}};this.addHandler(this.content,\"mousemove\",this._mousemovefunc)}},_arrange:function(u){if(u==undefined){u=true}var t=this;var p=null;var n=null;var g=t.filterable?t.filterHeight:0;var j=function(h){h=t.host.height();if(h==0){h=200;t.host.height(h)}return h};if(t.width!=null&&t.width.toString().indexOf(\"px\")!=-1){p=t.width}else{if(t.width!=undefined&&!isNaN(t.width)){p=t.width}}if(t.height!=null&&t.height.toString().indexOf(\"px\")!=-1){n=t.height}else{if(t.height!=undefined&&!isNaN(t.height)){n=t.height}}if(t.width!=null&&t.width.toString().indexOf(\"%\")!=-1){t.host.css(\"width\",t.width);p=t.host.width()}if(t.height!=null&&t.height.toString().indexOf(\"%\")!=-1){t.host.css(\"height\",t.height);n=j(n)}if(p!=null){p=parseInt(p);if(parseInt(t.element.style.width)!=parseInt(t.width)){t.host.width(t.width)}}if(!t.autoHeight){if(n!=null){n=parseInt(n);if(parseInt(t.element.style.height)!=parseInt(t.height)){t.host.height(t.height);j(n)}}}else{if(t.virtualSize){if(t.hScrollBar.css(\"visibility\")!=\"hidden\"){t.host.height(t.virtualSize.height+parseInt(t.scrollBarSize)+3);t.height=t.virtualSize.height+parseInt(t.scrollBarSize)+3;n=t.height}else{t.host.height(t.virtualSize.height);t.height=t.virtualSize.height;n=t.virtualSize.height}}}var c=t.scrollBarSize;if(isNaN(c)){c=parseInt(c);if(isNaN(c)){c=\"17px\"}else{c=c+\"px\"}}c=parseInt(c);var m=4;var e=2;var f=1;if(t.vScrollBar){if(t.vScrollBar[0].style.visibility!=\"hidden\"){f=c+m}else{t.vScrollInstance.setPosition(0)}}else{return}if(c==0){f=1;e=1}if(t.hScrollBar){if(t.hScrollBar[0].style.visibility!=\"hidden\"){e=c+m}else{t.hScrollInstance.setPosition(0)}}else{return}if(t.autoItemsHeight){t.hScrollBar[0].style.visibility=\"hidden\";e=0}if(n==null){n=0}var q=parseInt(n)-m-c;if(q<0){q=0}if(parseInt(t.hScrollBar[0].style.height)!=c){if(parseInt(c)<0){c=0}t.hScrollBar[0].style.height=parseInt(c)+\"px\"}if(t.hScrollBar[0].style.top!=q+\"px\"){t.hScrollBar[0].style.top=q+\"px\";t.hScrollBar[0].style.left=\"0px\"}var b=p-c-m;if(b<0){b=0}var l=b+\"px\";if(t.hScrollBar[0].style.width!=l){t.hScrollBar[0].style.width=l}if(f<=1){if(p>=2){t.hScrollBar[0].style.width=parseInt(p-2)+\"px\"}}if(c!=parseInt(t.vScrollBar[0].style.width)){t.vScrollBar[0].style.width=parseInt(c)+\"px\"}if((parseInt(n)-e)!=parseInt(t.vScrollBar[0].style.height)){var s=parseInt(n)-e;if(s<0){s=0}t.vScrollBar[0].style.height=s+\"px\"}if(p==null){p=0}var d=parseInt(p)-parseInt(c)-m+\"px\";if(d!=t.vScrollBar[0].style.left){if(parseInt(d)>=0){t.vScrollBar[0].style.left=d}t.vScrollBar[0].style.top=\"0px\"}var k=t.vScrollInstance;k.disabled=t.disabled;if(u){k._arrange()}var o=t.hScrollInstance;o.disabled=t.disabled;if(u){o._arrange()}if((t.vScrollBar[0].style.visibility!=\"hidden\")&&(t.hScrollBar[0].style.visibility!=\"hidden\")){t.bottomRight[0].style.visibility=\"inherit\";t.bottomRight[0].style.left=1+parseInt(t.vScrollBar[0].style.left)+\"px\";t.bottomRight[0].style.top=1+parseInt(t.hScrollBar[0].style.top)+\"px\";if(t.rtl){t.bottomRight.css({left:0})}t.bottomRight[0].style.width=parseInt(c)+3+\"px\";t.bottomRight[0].style.height=parseInt(c)+3+\"px\"}else{t.bottomRight[0].style.visibility=\"hidden\"}if(parseInt(t.content[0].style.width)!=(parseInt(p)-f)){var i=parseInt(p)-f;if(i<0){i=0}t.content[0].style.width=i+\"px\"}if(t.rtl){t.vScrollBar.css({left:0+\"px\",top:\"0px\"});t.hScrollBar.css({left:t.vScrollBar.width()+2+\"px\"});if(t.vScrollBar[0].style.visibility!=\"hidden\"){t.content.css(\"margin-left\",4+t.vScrollBar.width())}else{t.content.css(\"margin-left\",0);t.hScrollBar.css({left:\"0px\"})}if(t.filterable&&t.filterInput){t.filterInput.css({left:t.vScrollBar.width()+6+\"px\"})}}if(parseInt(t.content[0].style.height)!=(parseInt(n)-e)){var r=parseInt(n)-e;if(r<0){r=0}t.content[0].style.height=r+\"px\";t.content[0].style.top=\"0px\"}if(g>0){t.content[0].style.top=g+\"px\";t.content[0].style.height=parseInt(t.content[0].style.height)-g+\"px\"}if(t.filterable){t.filterInput[0].style.height=(g-6)+\"px\";t.filterInput[0].style.top=\"3px\";if(!t.rtl){t.filterInput[0].style.left=parseInt(t.content.css(\"left\"))+3+\"px\"}t.filterInput[0].style.width=parseInt(t.content.css(\"width\"))-7+\"px\";t.filter[0].style.display=\"block\"}else{t.filter[0].style.display=\"none\"}if(t.overlayContent){t.overlayContent.width(parseInt(p)-f);t.overlayContent.height(parseInt(n)-e)}},ensureVisible:function(h,i){if(isNaN(h)){var l=this.getItemByValue(h);if(l){h=l.index}}var f=this.isIndexInView(h);if(!f){if(h<0){return}if(this.autoHeight){var g=a.data(this.vScrollBar[0],\"jqxScrollBar\").instance;g.setPosition(0)}else{for(indx=0;indx<this.visibleItems.length;indx++){var l=this.visibleItems[indx];if(l.visibleIndex==h&&!l.isGroup){var g=a.data(this.vScrollBar[0],\"jqxScrollBar\").instance;var k=g.value;var b=!this.filterable?0:this.filterHeight+2;var e=this.hScrollBar.css(\"visibility\")===\"hidden\";var d=e?0:this.scrollBarSize+4;if(l.initialTop<k){g.setPosition(l.initialTop);if(indx==0){g.setPosition(0)}}else{if(l.initialTop+l.height>k+this.host.height()-b){var c=this.host.height();if(this.filterable){g.setPosition(this.filterHeight+2+l.initialTop+l.height+2-c+d)}else{g.setPosition(l.initialTop+l.height+2-c+d);if(indx===this.visibleItems.length-1){g.setPosition(g.max)}}if(i){var k=g.value;var j=l.initialTop;if(this.filterable){j=this.filterHeight+2+l.initialTop}if(k+c<g.max){g.setPosition(j)}}}}break}}}}else{if(i){for(indx=0;indx<this.visibleItems.length;indx++){var l=this.visibleItems[indx];if(l.visibleIndex==h&&!l.isGroup){var k=this.vScrollInstance.value;var j=l.initialTop;if(this.filterable){j=this.filterHeight+2+l.initialTop}if(k+this.host.height()<this.vScrollInstance.max){this.vScrollInstance.setPosition(j)}}}}}this._renderItems()},scrollTo:function(c,b){if(this.vScrollBar.css(\"visibility\")!=\"hidden\"){this.vScrollInstance.setPosition(b)}if(this.hScrollBar.css(\"visibility\")!=\"hidden\"){this.hScrollInstance.setPosition(c)}},scrollDown:function(){if(this.vScrollBar.css(\"visibility\")==\"hidden\"){return false}var b=this.vScrollInstance;if(b.value+b.largestep<=b.max){b.setPosition(b.value+b.largestep);return true}else{b.setPosition(b.max);return true}return false},scrollUp:function(){if(this.vScrollBar.css(\"visibility\")==\"hidden\"){return false}var b=this.vScrollInstance;if(b.value-b.largestep>=b.min){b.setPosition(b.value-b.largestep);return true}else{if(b.value!=b.min){b.setPosition(b.min);return true}}return false},databind:function(b,d){this.records=new Array();var f=b._source?true:false;var c=new a.jqx.dataAdapter(b,{autoBind:false});if(f){c=b;b=b._source}var e=function(k){if(b.type!=undefined){c._options.type=b.type}if(b.formatdata!=undefined){c._options.formatData=b.formatdata}if(b.contenttype!=undefined){c._options.contentType=b.contenttype}if(b.async!=undefined){c._options.async=b.async}};var h=function(q,r){var s=function(w){var D=null;if(typeof w===\"string\"){var z=w;var A=w;var C=\"\"}else{if(q.displayMember!=undefined&&q.displayMember!=\"\"){var A=w[q.valueMember];var z=w[q.displayMember]}}var C=\"\";if(q.groupMember){C=w[q.groupMember]}else{if(w&&w.group!=undefined){C=w.group}}if(q.searchMember){D=w[q.searchMember]}else{if(w&&w.searchLabel!=undefined){D=w.searchLabel}}if(!q.valueMember&&!q.displayMember){if(a.type(w)==\"string\"){z=A=w.toString()}}if(w&&w.label!=undefined){var z=w.label}if(w&&w.value!=undefined){var A=w.value}var B=false;if(w&&w.checked!=undefined){B=w.checked}var v=\"\";if(w&&w.html!=undefined){v=w.html}var t=true;if(w&&w.visible!=undefined){t=w.visible}var u=false;if(w&&w.disabled!=undefined){u=w.disabled}var y=false;if(w&&w.hasThreeStates!=undefined){y=w.hasThreeStates}var x={};x.label=z;x.value=A;x.searchLabel=D;x.html=v;x.visible=t;x.originalItem=w;x.group=C;x.groupHtml=\"\";x.disabled=u;x.checked=B;x.hasThreeStates=y;return x};if(r!=undefined){var k=c._changedrecords[0];if(k){a.each(c._changedrecords,function(){var t=this.index;var u=this.record;if(r!=\"remove\"){var v=s(u)}switch(r){case\"update\":q.updateAt(v,t);break;case\"add\":q.insertAt(v,t);break;case\"remove\":q.removeAt(t);break}});return}}q.records=c.records;var m=q.records.length;var p=new Array();for(var l=0;l<m;l++){var n=q.records[l];var o=s(n);o.index=l;p[l]=o}q.items=q.loadItems(p,true);q._render();q._raiseEvent(\"6\")};e(this);var i=this;switch(b.datatype){case\"local\":case\"array\":default:if(b.localdata!=null||a.isArray(b)){c.unbindBindingUpdate(this.element.id);if(this.autoBind||(!this.autoBind&&!d)){c.dataBind()}h(this);c.bindBindingUpdate(this.element.id,function(k){h(i,k)})}break;case\"json\":case\"jsonp\":case\"xml\":case\"xhtml\":case\"script\":case\"text\":case\"csv\":case\"tab\":if(b.localdata!=null){c.unbindBindingUpdate(this.element.id);if(this.autoBind||(!this.autoBind&&!d)){c.dataBind()}h(this);c.bindBindingUpdate(this.element.id,function(){h(i)});return}var j={};if(c._options.data){a.extend(c._options.data,j)}else{if(b.data){a.extend(j,b.data)}c._options.data=j}var g=function(){h(i)};c.unbindDownloadComplete(i.element.id);c.bindDownloadComplete(i.element.id,g);if(this.autoBind||(!this.autoBind&&!d)){c.dataBind()}}},loadItems:function(m,o){if(m==null){this.groups=new Array();this.items=new Array();this.visualItems=new Array();return}var t=this;var k=0;var d=0;var b=0;this.groups=new Array();this.items=new Array();this.visualItems=new Array();var e=new Array();this.itemsByValue=new Array();a.map(m,function(x){if(x==undefined){return null}var j=new a.jqx._jqxListBox.item();var y=x.group;var i=x.groupHtml;var z=x.title;var v=null;if(t.searchMember){v=x[t.searchMember]}else{if(x&&x.searchLabel!=undefined){v=x.searchLabel}}if(z==null||z==undefined){z=\"\"}if(y==null||y==undefined){y=\"\"}if(t.groupMember){y=x[t.groupMember]}if(i==null||i==undefined){i=\"\"}if(!t.groups[y]){t.groups[y]={items:new Array(),index:-1,caption:y,captionHtml:i};k++;var u=k+\"jqxGroup\";t.groups[u]=t.groups[y];d++;t.groups.length=d}var w=t.groups[y];w.index++;w.items[w.index]=j;if(typeof x===\"string\"){j.label=x;j.value=x;if(arguments.length>1&&arguments[1]&&a.type(arguments[1])==\"string\"){j.label=x;j.value=arguments[1]}}else{if(x.label==null&&x.value==null&&x.html==null&&x.group==null&&x.groupHtml==null){j.label=x.toString();j.value=x.toString()}else{j.label=x.label;j.value=x.value;if(j.label===undefined){j.label=x.value}if(j.value===undefined){j.value=x.label}}}if(typeof x!=\"string\"){if(x.label===undefined){if(t.displayMember!=\"\"){if(x[t.displayMember]!=undefined){j.label=x[t.displayMember]}else{j.label=\"\"}}}if(x.value===undefined){if(t.valueMember!=\"\"){j.value=x[t.valueMember]}}}j.hasThreeStates=x.hasThreeStates!=undefined?x.hasThreeStates:true;j.originalItem=x;if(o){j.originalItem=x.originalItem}j.title=z;if(z&&j.value===undefined&&j.label===undefined){j.value=j.label=z}j.html=x.html||\"\";if(x.html&&x.html!=\"\"){if(z&&z!=\"\"){}}j.group=y;j.checked=x.checked||false;j.groupHtml=x.groupHtml||\"\";j.disabled=x.disabled||false;j.visible=x.visible!=undefined?x.visible:true;j.searchLabel=v;j.index=b;e[b]=j;b++;return j});var c=new Array();var p=0;if(this.fromSelect==undefined||this.fromSelect==false){for(var h=0;h<d;h++){var k=h+1;var n=k+\"jqxGroup\";var r=this.groups[n];if(r==undefined||r==null){break}if(h==0&&r.caption==\"\"&&r.captionHtml==\"\"&&d<=1){for(var g=0;g<r.items.length;g++){var q=r.items[g].value;if(r.items[g].value==undefined||r.items[g].value==null){q=g}this.itemsByValue[a.trim(q).split(\" \").join(\"?\")]=r.items[g]}return r.items}else{var l=new a.jqx._jqxListBox.item();l.isGroup=true;l.label=r.caption;if(r.caption==\"\"&&r.captionHtml==\"\"){r.caption=this.emptyGroupText;l.label=r.caption}l.html=r.captionHtml;c[p]=l;p++}for(var f=0;f<r.items.length;f++){c[p]=r.items[f];var q=r.items[f].value;if(r.items[f].value==\"\"||r.items[f].value==null){q=p}t.itemsByValue[a.trim(q).split(\" \").join(\"?\")]=r.items[f];p++}}}else{var p=0;var s=new Array();a.each(e,function(){if(!s[this.group]){if(this.group!=\"\"){var i=new a.jqx._jqxListBox.item();i.isGroup=true;i.label=this.group;c[p]=i;p++;s[this.group]=true}}c[p]=this;var j=this.value;if(this.value==\"\"||this.value==null){j=p-1}t.itemsByValue[a.trim(j).split(\" \").join(\"?\")]=this;p++})}return c},_mapItem:function(c){var b=new a.jqx._jqxListBox.item();if(this.displayMember){if(c.label==undefined){c.label=c[this.displayMember]}if(c.value==undefined){c.value=c[this.valueMember]}}if(typeof c===\"string\"){b.label=c;b.value=c}else{if(typeof c===\"number\"){b.label=c.toString();b.value=c.toString()}else{b.label=c.label!==undefined?c.label:c.value;b.value=c.value!==undefined?c.value:c.label}}if(b.label==undefined&&b.value==undefined&&b.html==undefined){b.label=b.value=c}b.html=c.html||\"\";b.group=c.group||\"\";b.checked=c.checked||false;b.title=c.title||\"\";b.groupHtml=c.groupHtml||\"\";b.disabled=c.disabled||false;b.visible=c.visible||true;return b},addItem:function(b){return this.insertAt(b,this.items?this.items.length:0)},_getItemByParam:function(c){if(c!=null){if(c.index==undefined){var b=this.getItemByValue(c);if(b){c=b}}}return c},insertItem:function(d,b){var c=this._getItemByParam(d);return this.insertAt(c,b)},updateItem:function(c,d){var b=this._getItemByParam(d);if(b&&b.index!=undefined){return this.updateAt(c,b.index)}return false},updateAt:function(d,c){if(d!=null){var b=this._mapItem(d);this.itemsByValue[a.trim(b.value).split(\" \").join(\"?\")]=this.items[c];this.items[c].value=b.value;this.items[c].label=b.label;this.items[c].html=b.html;this.items[c].disabled=b.disabled}this._cachedItemHtml=[];this._renderItems();if(this.rendered){this.rendered()}},insertAt:function(l,f){if(l==null){return false}this._cachedItemHtml=[];if(this.items==undefined||this.items.length==0){this.source=new Array();this.refresh();var g=this._mapItem(l);g.index=0;this.items[this.items.length]=g;this._addItems(true);this._renderItems();if(this.rendered){this.rendered()}if(this.allowDrag&&this._enableDragDrop){this._enableDragDrop()}var k=g.value;if(g.value==\"\"||g.value==null){k=f}this.itemsByValue[a.trim(k).split(\" \").join(\"?\")]=g;return false}var g=this._mapItem(l);if(f==-1||f==undefined||f==null||f>=this.items.length){g.index=this.items.length;this.items[this.items.length]=g}else{var c=new Array();var j=0;var e=false;var h=0;for(var b=0;b<this.items.length;b++){if(this.items[b].isGroup==false){if(h>=f&&!e){c[j++]=g;g.index=f;h++;e=true}}c[j]=this.items[b];if(!this.items[b].isGroup){c[j].index=h;h++}j++}this.items=c}var k=g.value;if(g.value==\"\"||g.value==null){k=f}this.itemsByValue[a.trim(k).split(\" \").join(\"?\")]=g;this.visibleItems=new Array();this.renderedVisibleItems=new Array();var d=a.data(this.vScrollBar[0],\"jqxScrollBar\").instance;var i=d.value;d.setPosition(0);if((this.allowDrag&&this._enableDragDrop)||(this.virtualSize&&this.virtualSize.height<10+this.host.height())){this._addItems(true)}else{this._addItems(false)}if(this.groups.length>1){}this._renderItems();if(this.allowDrag&&this._enableDragDrop){this._enableDragDrop()}d.setPosition(i);if(this.rendered){this.rendered()}return true},removeAt:function(j){if(j<0||j>this.items.length-1){return false}if(j==undefined){return false}var d=this.items[j].height;var n=this.items[j].value;if(n==\"\"||n==null){n=j}this.itemsByValue[a.trim(n).split(\" \").join(\"?\")]=null;if(this.groups.length>1){var h=new Array();for(var b=0;b<this.items.length;b++){if(!this.items[b].isGroup){h.push({item:this.items[b],key:b})}}if(h[j]){this.items.splice(h[j].key,1)}else{return false}}else{this.items.splice(j,1)}var c=new Array();var m=0;var f=false;var k=0;for(var b=0;b<this.items.length;b++){c[m]=this.items[b];if(!this.items[b].isGroup){c[m].index=k;k++}m++}this.items=c;var e=a.data(this.vScrollBar[0],\"jqxScrollBar\").instance;var e=a.data(this.vScrollBar[0],\"jqxScrollBar\").instance;var l=e.value;e.setPosition(0);this.visibleItems=new Array();this.renderedVisibleItems=new Array();if(this.items.length>0){if(this.virtualSize){this.virtualSize.height-=d;var o=this.virtualSize.itemsPerPage*2;if(this.autoHeight){o=this.items.length}this.virtualItemsCount=Math.min(o,this.items.length)}this._updatescrollbars()}else{this._addItems()}this._renderItems();if(this.allowDrag&&this._enableDragDrop){this._enableDragDrop()}if(this.vScrollBar.css(\"visibility\")!=\"hidden\"){e.setPosition(l)}else{e.setPosition(0)}this.itemsByValue=new Array();for(var g=0;g<this.items.length;g++){var n=this.items[g].value;if(this.items[g].value==\"\"||this.items[g].value==null){n=g}this.itemsByValue[a.trim(n).split(\" \").join(\"?\")]=this.items[g]}if(this.rendered){this.rendered()}return true},removeItem:function(e,f){var d=this._getItemByParam(e);var b=-1;if(d&&d.index!=undefined&&f!==true){for(var c=0;c<this.items.length;c++){if(this.items[c].label==d.label&&this.items[c].value==d.value){b=c;break}}if(b!=-1){return this.removeAt(b)}}if(b==-1){return this.removeAt(d.index)}},getItems:function(){return this.items},disableItem:function(c){var b=this._getItemByParam(c);this.disableAt(b.index)},enableItem:function(c){var b=this._getItemByParam(c);this.enableAt(b.index)},disableAt:function(b){if(!this.items){return false}if(b<0||b>this.items.length-1){return false}this.items[b].disabled=true;this._renderItems();return true},enableAt:function(b){if(!this.items){return false}if(b<0||b>this.items.length-1){return false}this.items[b].disabled=false;this._renderItems();return true},destroy:function(){if(this.source&&this.source.unbindBindingUpdate){this.source.unbindBindingUpdate(this.element.id)}this._removeHandlers();this.vScrollBar.jqxScrollBar(\"destroy\");this.hScrollBar.jqxScrollBar(\"destroy\");this.vScrollBar.remove();this.hScrollBar.remove();this.content.remove();a.jqx.utilities.resize(this.host,null,true);var b=a.data(this.element,\"jqxListBox\");delete this.hScrollInstance;delete this.vScrollInstance;delete this.vScrollBar;delete this.hScrollBar;delete this.content;delete this.bottomRight;delete this.itemswrapper;delete this.visualItems;delete this.visibleItems;delete this.items;delete this.groups;delete this.renderedVisibleItems;delete this._mousewheelfunc;delete this._mousemovefunc;delete this._cachedItemHtml;delete this.itemsByValue;delete this._activeElement;delete this.source;delete this.events;if(this.input){this.input.remove();delete this.input}if(b){delete b.instance}this.host.removeData();this.host.removeClass();this.host.remove();this.element=null;delete this.element;this.host=null;delete this.set;delete this.get;delete this.call;delete this.host},_raiseEvent:function(f,c){if(this._stopEvents==true){return true}if(c==undefined){c={owner:null}}var d=this.events[f];args=c;args.owner=this;this._updateInputSelection();var e=new a.Event(d);e.owner=this;e.args=args;if(this.host!=null){var b=this.host.trigger(e)}return b}})})(jqxBaseFramework);(function(a){a.jqx.parseSourceTag=function(m){var l=new Array();var o=a(m).find(\"option\");var b=a(m).find(\"optgroup\");var k=false;if(o.length===0){o=a(m).find(\"li\");if(o.length>0){k=true}}var d=null;var j=0;var d=-1;var h=this;var c=new Array();a.each(o,function(p){var q=b.find(this).length>0;var s=null;if(this.text!=null&&(this.label==null||this.label==\"\")){this.label=this.text}if(k===true){this.label=a(this).text();this.selected=a(this).attr(\"data-selected\");this.checked=this.selected;this.value=a(this).attr(\"data-value\")||p;this.disabled=a(this).attr(\"disabled\")}var r={style:this.style.cssText,selected:this.selected,html:this.innerHTML,classes:this.className,disabled:this.disabled,value:this.value,label:this.label,title:this.title,originalItem:this};var i=a.jqx.browser.msie&&a.jqx.browser.version<8;if(i&&!k){if(r.value==\"\"&&this.text!=null&&this.text.length>0){r.value=this.text}}if(q){s=b.find(this).parent()[0].label;r.group=s;if(!c[s]){c[s]=new Array();c.length++}c[s].push(r)}if(this.selected){d=p}r.checked=this.selected;if(r.label!==undefined){l.push(r)}});if(c.length>0){var n=new Array();for(var f in c){if(f===\"indexOf\"){continue}var g=null;for(var e=0;e<b.length;e++){if(f===b[e].label||b[e].text){g=b[e];break}}a.each(c[f],function(i,p){if(this.label!==undefined){n.push(this)}})}}if(n&&n.length>0){return{items:n,index:d}}else{return{items:l,index:d}}};a.jqx._jqxListBox.item=function(){var b={group:\"\",groupHtml:\"\",selected:false,isGroup:false,highlighted:false,value:null,label:\"\",html:null,visible:true,disabled:false,element:null,width:null,height:null,initialTop:null,top:null,left:null,title:\"\",index:-1,checkBoxElement:null,originalItem:null,checked:false,visibleIndex:-1};return b}})(jqxBaseFramework);\ndefine(\"jqxlistbox\", [\"jqxcore\"], function(){});\n\n","/*\r\njQWidgets v4.1.2 (2016-Apr)\r\nCopyright (c) 2011-2016 jQWidgets.\r\nLicense: http://jqwidgets.com/license/\r\n*/\r\n\r\n(function(a){a.jqx.cssroundedcorners=function(b){var c={all:\"jqx-rc-all\",top:\"jqx-rc-t\",bottom:\"jqx-rc-b\",left:\"jqx-rc-l\",right:\"jqx-rc-r\",\"top-right\":\"jqx-rc-tr\",\"top-left\":\"jqx-rc-tl\",\"bottom-right\":\"jqx-rc-br\",\"bottom-left\":\"jqx-rc-bl\"};for(prop in c){if(!c.hasOwnProperty(prop)){continue}if(b==prop){return c[prop]}}};a.jqx.jqxWidget(\"jqxButton\",\"\",{});a.extend(a.jqx._jqxButton.prototype,{defineInstance:function(){var b={cursor:\"arrow\",roundedCorners:\"all\",disabled:false,height:null,width:null,overrideTheme:false,enableHover:true,enableDefault:true,enablePressed:true,imgPosition:\"center\",imgSrc:\"\",imgWidth:16,imgHeight:16,value:null,textPosition:\"\",textImageRelation:\"overlay\",rtl:false,_ariaDisabled:false,_scrollAreaButton:false,template:\"default\",aria:{\"aria-disabled\":{name:\"disabled\",type:\"boolean\"}}};a.extend(true,this,b);return b},_addImage:function(c){var g=this;if(g.element.nodeName.toLowerCase()==\"input\"||g.element.nodeName.toLowerCase()==\"button\"||g.element.nodeName.toLowerCase()==\"div\"){if(!g._img){g.field=g.element;if(g.field.className){g._className=g.field.className}var h={title:g.field.title};var i=null;if(g.field.getAttribute(\"value\")){var i=g.field.getAttribute(\"value\")}else{if(g.element.nodeName.toLowerCase()!=\"input\"){var i=g.element.innerHTML}}if(g.value){i=g.value}if(g.field.id.length){h.id=g.field.id.replace(/[^\\w]/g,\"_\")+\"_\"+c}else{h.id=a.jqx.utilities.createId()+\"_\"+c}var b=a(\"<div></div>\",h);b[0].style.cssText=g.field.style.cssText;b.css(\"box-sizing\",\"border-box\");var f=a(\"<img/>\");f[0].setAttribute(\"src\",g.imgSrc);f[0].setAttribute(\"width\",g.imgWidth);f[0].setAttribute(\"height\",g.imgHeight);b.append(f);g._img=f;var j=a(\"<span></span>\");if(i){j.html(i);g.value=i}b.append(j);g._text=j;a(g.field).hide().after(b);var e=g.host.data();g.host=b;g.host.data(e);g.element=b[0];g.element.id=g.field.id;g.field.id=h.id;if(g._className){g.host.addClass(g._className);a(g.field).removeClass(g._className)}if(g.field.tabIndex){var d=g.field.tabIndex;g.field.tabIndex=-1;g.element.tabIndex=d}}else{g._img[0].setAttribute(\"src\",g.imgSrc);g._img[0].setAttribute(\"width\",g.imgWidth);g._img[0].setAttribute(\"height\",g.imgHeight);g._text.html(g.value)}if(!g.imgSrc){g._img.hide()}else{g._img.show()}if(!g.value){g._text.hide()}else{g._text.show()}g._positionTextAndImage()}},_positionTextAndImage:function(){var k=this;var r=k.host.outerWidth();var q=k.host.outerHeight();var m=k.imgWidth;var v=k.imgHeight;if(k.imgSrc==\"\"){m=0;v=0}var f=k._text.width();var b=k._text.height();var i=4;var c=4;var l=4;var n=0;var u=0;switch(k.textImageRelation){case\"imageBeforeText\":case\"textBeforeImage\":n=m+f+2*l+i+2*c;u=Math.max(v,b)+2*l+i+2*c;break;case\"imageAboveText\":case\"textAboveImage\":n=Math.max(m,f)+2*l;u=v+b+i+2*l+2*c;break;case\"overlay\":n=Math.max(m,f)+2*l;u=Math.max(v,b)+2*l;break}if(!k.width){k.host.width(n);r=n}if(!k.height){k.host.height(u);q=u}k._img.css(\"position\",\"absolute\");k._text.css(\"position\",\"absolute\");k.host.css(\"position\",\"relative\");k.host.css(\"overflow\",\"hidden\");var e={};var z={};var s=function(E,D,G,C,F){if(D.width<C){D.width=C}if(D.height<F){D.height=F}switch(G){case\"left\":E.style.left=D.left+\"px\";E.style.top=D.top+D.height/2-F/2+\"px\";break;case\"topLeft\":E.style.left=D.left+\"px\";E.style.top=D.top+\"px\";break;case\"bottomLeft\":E.style.left=D.left+\"px\";E.style.top=D.top+D.height-F+\"px\";break;default:case\"center\":E.style.left=D.left+D.width/2-C/2+\"px\";E.style.top=D.top+D.height/2-F/2+\"px\";break;case\"top\":E.style.left=D.left+D.width/2-C/2+\"px\";E.style.top=D.top+\"px\";break;case\"bottom\":E.style.left=D.left+D.width/2-C/2+\"px\";E.style.top=D.top+D.height-F+\"px\";break;case\"right\":E.style.left=D.left+D.width-C+\"px\";E.style.top=D.top+D.height/2-F/2+\"px\";break;case\"topRight\":E.style.left=D.left+D.width-C+\"px\";E.style.top=D.top+\"px\";break;case\"bottomRight\":E.style.left=D.left+D.width-C+\"px\";E.style.top=D.top+D.height-F+\"px\";break}};var g=0;var p=0;var x=r;var j=q;var A=(x-g)/2;var y=(j-p)/2;var B=k._img;var o=k._text;var t=j-p;var d=x-g;g+=c;p+=c;x=x-c-2;d=d-2*c-2;t=t-2*c-2;switch(k.textImageRelation){case\"imageBeforeText\":switch(k.imgPosition){case\"left\":case\"topLeft\":case\"bottomLeft\":z={left:g,top:p,width:g+m,height:t};e={left:g+m+i,top:p,width:d-m-i,height:t};break;case\"center\":case\"top\":case\"bottom\":z={left:A-f/2-m/2-i/2,top:p,width:m,height:t};e={left:z.left+m+i,top:p,width:x-z.left-m-i,height:t};break;case\"right\":case\"topRight\":case\"bottomRight\":z={left:x-f-m-i,top:p,width:m,height:t};e={left:z.left+m+i,top:p,width:x-z.left-m-i,height:t};break}s(B[0],z,k.imgPosition,m,v);s(o[0],e,k.textPosition,f,b);break;case\"textBeforeImage\":switch(k.textPosition){case\"left\":case\"topLeft\":case\"bottomLeft\":e={left:g,top:p,width:g+f,height:t};z={left:g+f+i,top:p,width:d-f-i,height:t};break;case\"center\":case\"top\":case\"bottom\":e={left:A-f/2-m/2-i/2,top:p,width:f,height:t};z={left:e.left+f+i,top:p,width:x-e.left-f-i,height:t};break;case\"right\":case\"topRight\":case\"bottomRight\":e={left:x-f-m-i,top:p,width:f,height:t};z={left:e.left+f+i,top:p,width:x-e.left-f-i,height:t};break}s(B[0],z,k.imgPosition,m,v);s(o[0],e,k.textPosition,f,b);break;case\"imageAboveText\":switch(k.imgPosition){case\"topRight\":case\"top\":case\"topLeft\":z={left:g,top:p,width:d,height:v};e={left:g,top:p+v+i,width:d,height:t-v-i};break;case\"left\":case\"center\":case\"right\":z={left:g,top:y-v/2-b/2-i/2,width:d,height:v};e={left:g,top:z.top+i+v,width:d,height:t-z.top-i-v};break;case\"bottomLeft\":case\"bottom\":case\"bottomRight\":z={left:g,top:j-v-b-i,width:d,height:v};e={left:g,top:z.top+i+v,width:d,height:b};break}s(B[0],z,k.imgPosition,m,v);s(o[0],e,k.textPosition,f,b);break;case\"textAboveImage\":switch(k.textPosition){case\"topRight\":case\"top\":case\"topLeft\":e={left:g,top:p,width:d,height:b};z={left:g,top:p+b+i,width:d,height:t-b-i};break;case\"left\":case\"center\":case\"right\":e={left:g,top:y-v/2-b/2-i/2,width:d,height:b};z={left:g,top:e.top+i+b,width:d,height:t-e.top-i-b};break;case\"bottomLeft\":case\"bottom\":case\"bottomRight\":e={left:g,top:j-v-b-i,width:d,height:b};z={left:g,top:e.top+i+b,width:d,height:v};break}s(B[0],z,k.imgPosition,m,v);s(o[0],e,k.textPosition,f,b);break;case\"overlay\":default:e={left:g,top:p,width:d,height:t};z={left:g,top:p,width:d,height:t};s(B[0],z,k.imgPosition,m,v);s(o[0],e,k.textPosition,f,b);break}},createInstance:function(d){var b=this;b._setSize();if(b.imgSrc!=\"\"||b.textPosition!=\"\"||(b.element.value&&b.element.value.indexOf(\"<\")>=0)||b.value!=null){b.refresh();b._addImage(\"jqxButton\")}if(!b._ariaDisabled){b.host.attr(\"role\",\"button\")}if(!b.overrideTheme){b.host.addClass(b.toThemeProperty(a.jqx.cssroundedcorners(b.roundedCorners)));if(b.enableDefault){b.host.addClass(b.toThemeProperty(\"jqx-button\"))}b.host.addClass(b.toThemeProperty(\"jqx-widget\"))}b.isTouchDevice=a.jqx.mobile.isTouchDevice();if(!b._ariaDisabled){a.jqx.aria(this)}if(b.cursor!=\"arrow\"){if(!b.disabled){b.host.css({cursor:b.cursor})}else{b.host.css({cursor:\"arrow\"})}}var g=\"mouseenter mouseleave mousedown focus blur\";if(b._scrollAreaButton){var g=\"mousedown\"}if(b.isTouchDevice){b.addHandler(b.host,a.jqx.mobile.getTouchEventName(\"touchstart\"),function(h){b.isPressed=true;b.refresh()});b.addHandler(a(document),a.jqx.mobile.getTouchEventName(\"touchend\")+\".\"+b.element.id,function(h){b.isPressed=false;b.refresh()})}b.addHandler(b.host,g,function(h){switch(h.type){case\"mouseenter\":if(!b.isTouchDevice){if(!b.disabled&&b.enableHover){b.isMouseOver=true;b.refresh()}}break;case\"mouseleave\":if(!b.isTouchDevice){if(!b.disabled&&b.enableHover){b.isMouseOver=false;b.refresh()}}break;case\"mousedown\":if(!b.disabled){b.isPressed=true;b.refresh()}break;case\"focus\":if(!b.disabled){b.isFocused=true;b.refresh()}break;case\"blur\":if(!b.disabled){b.isFocused=false;b.refresh()}break}});b.mouseupfunc=function(h){if(!b.disabled){if(b.isPressed||b.isMouseOver){b.isPressed=false;b.refresh()}}};b.addHandler(a(document),\"mouseup.button\"+b.element.id,b.mouseupfunc);try{if(document.referrer!=\"\"||window.frameElement){if(window.top!=null&&window.top!=window.self){var f=\"\";if(window.parent&&document.referrer){f=document.referrer}if(f.indexOf(document.location.host)!=-1){var e=function(h){b.isPressed=false;b.refresh()};if(window.top.document){b.addHandler(a(window.top.document),\"mouseup\",e)}}}}}catch(c){}b.propertyChangeMap.roundedCorners=function(h,j,i,k){h.host.removeClass(h.toThemeProperty(a.jqx.cssroundedcorners(i)));h.host.addClass(h.toThemeProperty(a.jqx.cssroundedcorners(k)))};b.propertyChangeMap.disabled=function(h,j,i,k){if(i!=k){h.refresh();h.host[0].disabled=k;h.host.attr(\"disabled\",k);if(!k){h.host.css({cursor:h.cursor})}else{h.host.css({cursor:\"default\"})}a.jqx.aria(h,\"aria-disabled\",h.disabled)}};b.propertyChangeMap.rtl=function(h,j,i,k){if(i!=k){h.refresh()}};b.propertyChangeMap.template=function(h,j,i,k){if(i!=k){h.host.removeClass(h.toThemeProperty(\"jqx-\"+i));h.refresh()}};b.propertyChangeMap.theme=function(h,j,i,k){h.host.removeClass();if(h.enableDefault){h.host.addClass(h.toThemeProperty(\"jqx-button\"))}h.host.addClass(h.toThemeProperty(\"jqx-widget\"));if(!h.overrideTheme){h.host.addClass(h.toThemeProperty(a.jqx.cssroundedcorners(h.roundedCorners)))}h._oldCSSCurrent=null;h.refresh()};if(b.disabled){b.element.disabled=true;b.host.attr(\"disabled\",true)}},resize:function(c,b){this.width=c;this.height=b;this._setSize()},val:function(){var c=this;var b=c.host.find(\"input\");if(b.length>0){if(arguments.length==0||typeof(value)==\"object\"){return b.val()}b.val(value);c.refresh();return b.val()}if(arguments.length==0||typeof(value)==\"object\"){if(c.element.nodeName.toLowerCase()==\"button\"){return a(c.element).text()}return c.element.value}c.element.value=arguments[0];if(c.element.nodeName.toLowerCase()==\"button\"){a(c.element).text(arguments[0])}c.refresh()},_setSize:function(){var b=this;if(b.width!=null&&(b.width.toString().indexOf(\"px\")!=-1||b.width.toString().indexOf(\"%\")!=-1)){b.host.css(\"width\",b.width)}else{if(b.width!=undefined&&!isNaN(b.width)){b.host.css(\"width\",b.width)}}if(b.height!=null&&(b.height.toString().indexOf(\"px\")!=-1||b.height.toString().indexOf(\"%\")!=-1)){b.host.css(\"height\",b.height)}else{if(b.height!=undefined&&!isNaN(b.height)){b.host.css(\"height\",parseInt(b.height))}}},_removeHandlers:function(){var b=this;b.removeHandler(b.host,\"selectstart\");b.removeHandler(b.host,\"click\");b.removeHandler(b.host,\"focus\");b.removeHandler(b.host,\"blur\");b.removeHandler(b.host,\"mouseenter\");b.removeHandler(b.host,\"mouseleave\");b.removeHandler(b.host,\"mousedown\");b.removeHandler(a(document),\"mouseup.button\"+b.element.id,b.mouseupfunc);if(b.isTouchDevice){b.removeHandler(b.host,a.jqx.mobile.getTouchEventName(\"touchstart\"));b.removeHandler(a(document),a.jqx.mobile.getTouchEventName(\"touchend\")+\".\"+b.element.id)}b.mouseupfunc=null;delete b.mouseupfunc},focus:function(){this.host.focus()},destroy:function(){var b=this;b._removeHandlers();var c=a.data(b.element,\"jqxButton\");if(c){delete c.instance}b.host.removeClass();b.host.removeData();b.host.remove();delete b.set;delete b.get;delete b.call;delete b.element;delete b.host},render:function(){this.refresh()},propertiesChangedHandler:function(d,b,c){if(c&&c.width&&c.height&&Object.keys(c).length==2){d._setSize();d.refresh()}},propertyChangedHandler:function(b,c,e,d){if(this.isInitialized==undefined||this.isInitialized==false){return}if(d==e){return}if(b.batchUpdate&&b.batchUpdate.width&&b.batchUpdate.height&&Object.keys(b.batchUpdate).length==2){return}if(c==\"textImageRelation\"||c==\"textPosition\"||c==\"imgPosition\"){if(b._img){b._positionTextAndImage()}else{b._addImage(\"jqxButton\")}}if(c==\"imgSrc\"||c==\"imgWidth\"||c==\"imgHeight\"||c==\"value\"){b._addImage(\"jqxButton\")}if(c==\"width\"||c==\"height\"){b._setSize();b.refresh()}},refresh:function(){var c=this;if(c.overrideTheme){return}var e=c.toThemeProperty(\"jqx-fill-state-focus\");var i=c.toThemeProperty(\"jqx-fill-state-disabled\");var b=c.toThemeProperty(\"jqx-fill-state-normal\");if(!c.enableDefault){b=\"\"}var h=c.toThemeProperty(\"jqx-fill-state-hover\");var f=c.toThemeProperty(\"jqx-fill-state-pressed\");var g=c.toThemeProperty(\"jqx-fill-state-pressed\");if(!c.enablePressed){f=\"\"}var d=\"\";if(!c.host){return}c.host[0].disabled=c.disabled;if(c.disabled){if(c._oldCSSCurrent){c.host.removeClass(c._oldCSSCurrent)}d=b+\" \"+i;if(c.template!==\"default\"&&c.template!==\"\"){d+=\" jqx-\"+c.template;if(c.theme!=\"\"){d+=\" jqx-\"+c.template+\"-\"+c.theme}}c.host.addClass(d);c._oldCSSCurrent=d;return}else{if(c.isMouseOver&&!c.isTouchDevice){if(c.isPressed){d=g}else{d=h}}else{if(c.isPressed){d=f}else{d=b}}}if(c.isFocused){d+=\" \"+e}if(c.template!==\"default\"&&c.template!==\"\"){d+=\" jqx-\"+c.template;if(c.theme!=\"\"){d+=\" jqx-\"+c.template+\"-\"+c.theme}}if(d!=c._oldCSSCurrent){if(c._oldCSSCurrent){c.host.removeClass(c._oldCSSCurrent)}c.host.addClass(d);c._oldCSSCurrent=d}if(c.rtl){c.host.addClass(c.toThemeProperty(\"jqx-rtl\"));c.host.css(\"direction\",\"rtl\")}}});a.jqx.jqxWidget(\"jqxLinkButton\",\"\",{});a.extend(a.jqx._jqxLinkButton.prototype,{defineInstance:function(){this.disabled=false;this.height=null;this.width=null;this.rtl=false;this.href=null},createInstance:function(d){var c=this;this.host.onselectstart=function(){return false};this.host.attr(\"role\",\"button\");var b=this.height||this.host.height();var e=this.width||this.host.width();this.href=this.host.attr(\"href\");this.target=this.host.attr(\"target\");this.content=this.host.text();this.element.innerHTML=\"\";this.host.append(\"<input type='button' class='jqx-wrapper'/>\");var f=this.host.find(\"input\");f.addClass(this.toThemeProperty(\"jqx-reset\"));f.width(e);f.height(b);f.val(this.content);this.host.find(\"tr\").addClass(this.toThemeProperty(\"jqx-reset\"));this.host.find(\"td\").addClass(this.toThemeProperty(\"jqx-reset\"));this.host.find(\"tbody\").addClass(this.toThemeProperty(\"jqx-reset\"));this.host.css(\"color\",\"inherit\");this.host.addClass(this.toThemeProperty(\"jqx-link\"));f.css({width:e});f.css({height:b});var g=d==undefined?{}:d[0]||{};f.jqxButton(g);if(this.disabled){this.host[0].disabled=true}this.propertyChangeMap.disabled=function(h,j,i,k){h.host[0].disabled=k;h.host.find(\"input\").jqxButton({disabled:k})};this.addHandler(f,\"click\",function(h){if(!this.disabled){c.onclick(h)}return false})},onclick:function(b){if(this.target!=null){window.open(this.href,this.target)}else{window.location=this.href}}});a.jqx.jqxWidget(\"jqxRepeatButton\",\"jqxButton\",{});a.extend(a.jqx._jqxRepeatButton.prototype,{defineInstance:function(){this.delay=50},createInstance:function(e){var c=this;var d=a.jqx.mobile.isTouchDevice();var b=!d?\"mouseup.\"+this.base.element.id:\"touchend.\"+this.base.element.id;var f=!d?\"mousedown.\"+this.base.element.id:\"touchstart.\"+this.base.element.id;this.addHandler(a(document),b,function(g){if(c.timeout!=null){clearTimeout(c.timeout);c.timeout=null;c.refresh()}if(c.timer!=undefined){clearInterval(c.timer);c.timer=null;c.refresh()}});this.addHandler(this.base.host,f,function(g){if(c.timer!=null){clearInterval(c.timer)}c.timeout=setTimeout(function(){clearInterval(c.timer);c.timer=setInterval(function(h){c.ontimer(h)},c.delay)},150)});this.mousemovefunc=function(g){if(!d){if(g.which==0){if(c.timer!=null){clearInterval(c.timer);c.timer=null}}}};this.addHandler(this.base.host,\"mousemove\",this.mousemovefunc)},destroy:function(){var c=a.jqx.mobile.isTouchDevice();var b=!c?\"mouseup.\"+this.base.element.id:\"touchend.\"+this.base.element.id;var e=!c?\"mousedown.\"+this.base.element.id:\"touchstart.\"+this.base.element.id;this.removeHandler(this.base.host,\"mousemove\",this.mousemovefunc);this.removeHandler(this.base.host,e);this.removeHandler(a(document),b);this.timer=null;delete this.mousemovefunc;delete this.timer;var d=a.data(this.base.element,\"jqxRepeatButton\");if(d){delete d.instance}a(this.base.element).removeData();this.base.destroy();delete this.base},stop:function(){clearInterval(this.timer);this.timer=null},ontimer:function(b){var b=new a.Event(\"click\");if(this.base!=null&&this.base.host!=null){this.base.host.trigger(b)}}});a.jqx.jqxWidget(\"jqxToggleButton\",\"jqxButton\",{});a.extend(a.jqx._jqxToggleButton.prototype,{defineInstance:function(){this.toggled=false;this.uiToggle=true;this.aria={\"aria-checked\":{name:\"toggled\",type:\"boolean\"},\"aria-disabled\":{name:\"disabled\",type:\"boolean\"}}},createInstance:function(c){var b=this;b.base.overrideTheme=true;b.isTouchDevice=a.jqx.mobile.isTouchDevice();a.jqx.aria(this);b.propertyChangeMap.roundedCorners=function(d,f,e,g){d.base.host.removeClass(d.toThemeProperty(a.jqx.cssroundedcorners(e)));d.base.host.addClass(d.toThemeProperty(a.jqx.cssroundedcorners(g)))};b.propertyChangeMap.toggled=function(d,f,e,g){d.refresh()};b.propertyChangeMap.disabled=function(d,f,e,g){d.base.disabled=g;d.refresh()};b.addHandler(b.base.host,\"click\",function(d){if(!b.base.disabled&&b.uiToggle){b.toggle()}});if(!b.isTouchDevice){b.addHandler(b.base.host,\"mouseenter\",function(d){if(!b.base.disabled){b.refresh()}});b.addHandler(b.base.host,\"mouseleave\",function(d){if(!b.base.disabled){b.refresh()}})}b.addHandler(b.base.host,\"mousedown\",function(d){if(!b.base.disabled){b.refresh()}});b.addHandler(a(document),\"mouseup.togglebutton\"+b.base.element.id,function(d){if(!b.base.disabled){b.refresh()}})},destroy:function(){this._removeHandlers();this.base.destroy()},_removeHandlers:function(){this.removeHandler(this.base.host,\"click\");this.removeHandler(this.base.host,\"mouseenter\");this.removeHandler(this.base.host,\"mouseleave\");this.removeHandler(this.base.host,\"mousedown\");this.removeHandler(a(document),\"mouseup.togglebutton\"+this.base.element.id)},toggle:function(){this.toggled=!this.toggled;this.refresh();a.jqx.aria(this,\"aria-checked\",this.toggled)},unCheck:function(){this.toggled=false;this.refresh()},check:function(){this.toggled=true;this.refresh()},refresh:function(){var c=this;var h=c.base.toThemeProperty(\"jqx-fill-state-disabled\");var b=c.base.toThemeProperty(\"jqx-fill-state-normal\");if(!c.base.enableDefault){b=\"\"}var g=c.base.toThemeProperty(\"jqx-fill-state-hover\");var e=c.base.toThemeProperty(\"jqx-fill-state-pressed\");var f=c.base.toThemeProperty(\"jqx-fill-state-pressed\");var d=\"\";c.base.host[0].disabled=c.base.disabled;if(c.base.disabled){d=b+\" \"+h;c.base.host.addClass(d);return}else{if(c.base.isMouseOver&&!c.isTouchDevice){if(c.base.isPressed||c.toggled){d=f}else{d=g}}else{if(c.base.isPressed||c.toggled){d=e}else{d=b}}}if(c.base.template!==\"default\"&&c.base.template!==\"\"){d+=\" jqx-\"+c.base.template;if(c.base.theme!=\"\"){d+=\" jqx-\"+c.template+\"-\"+c.base.theme}}if(c.base.host.hasClass(h)&&h!=d){c.base.host.removeClass(h)}if(c.base.host.hasClass(b)&&b!=d){c.base.host.removeClass(b)}if(c.base.host.hasClass(g)&&g!=d){c.base.host.removeClass(g)}if(c.base.host.hasClass(e)&&e!=d){c.base.host.removeClass(e)}if(c.base.host.hasClass(f)&&f!=d){c.base.host.removeClass(f)}if(!c.base.host.hasClass(d)){c.base.host.addClass(d)}}})})(jqxBaseFramework);\ndefine(\"jqxbuttons\", [\"jqxcore\"], function(){});\n\n","/*\r\njQWidgets v4.1.2 (2016-Apr)\r\nCopyright (c) 2011-2016 jQWidgets.\r\nLicense: http://jqwidgets.com/license/\r\n*/\r\n\r\n(function(a){a.jqx.jqxWidget(\"jqxScrollBar\",\"\",{});a.extend(a.jqx._jqxScrollBar.prototype,{defineInstance:function(){var b={height:null,width:null,vertical:false,min:0,max:1000,value:0,step:10,largestep:50,thumbMinSize:10,thumbSize:0,thumbStep:\"auto\",roundedCorners:\"all\",showButtons:true,disabled:false,touchMode:\"auto\",touchModeStyle:\"auto\",thumbTouchSize:0,_triggervaluechanged:true,rtl:false,areaDownCapture:false,areaUpCapture:false,_initialLayout:false,offset:0,reference:0,velocity:0,frame:0,timestamp:0,ticker:null,amplitude:0,target:0};a.extend(true,this,b);return b},createInstance:function(b){this.render()},render:function(){this._mouseup=new Date();var c=this;var d=\"<div id='jqxScrollOuterWrap' style='box-sizing: content-box; width:100%; height: 100%; align:left; border: 0px; valign:top; position: relative;'><div id='jqxScrollWrap' style='box-sizing: content-box; width:100%; height: 100%; left: 0px; top: 0px; align:left; valign:top; position: absolute;'><div id='jqxScrollBtnUp' style='box-sizing: content-box; align:left; valign:top; left: 0px; top: 0px; position: absolute;'><div></div></div><div id='jqxScrollAreaUp' style='box-sizing: content-box; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='jqxScrollThumb' style='box-sizing: content-box; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='jqxScrollAreaDown' style='box-sizing: content-box; align:left; valign:top; left: 0px; top: 0px; position: absolute;'></div><div id='jqxScrollBtnDown' style='box-sizing: content-box; align:left; valign:top; left: 0px; top: 0px; position: absolute;'><div></div></div></div></div>\";if(a.jqx.utilities&&a.jqx.utilities.scrollBarButtonsVisibility==\"hidden\"){this.showButtons=false}if(c.WinJS){MSApp.execUnsafeLocalFunction(function(){c.host.html(d)})}else{this.element.innerHTML=d}if(this.width!=undefined&&parseInt(this.width)>0){this.host.width(parseInt(this.width))}if(this.height!=undefined&&parseInt(this.height)>0){this.host.height(parseInt(this.height))}this.isPercentage=false;if(this.width!=null&&this.width.toString().indexOf(\"%\")!=-1){this.host.width(this.width);this.isPercentage=true}if(this.height!=null&&this.height.toString().indexOf(\"%\")!=-1){this.host.height(this.height);this.isPercentage=true}if(this.isPercentage){var e=this;a.jqx.utilities.resize(this.host,function(){e._arrange()},false)}this.thumbCapture=false;this.scrollOuterWrap=a(this.element.firstChild);this.scrollWrap=a(this.scrollOuterWrap[0].firstChild);this.btnUp=a(this.scrollWrap[0].firstChild);this.areaUp=a(this.btnUp[0].nextSibling);this.btnThumb=a(this.areaUp[0].nextSibling);this.arrowUp=a(this.btnUp[0].firstChild);this.areaDown=a(this.btnThumb[0].nextSibling);this.btnDown=a(this.areaDown[0].nextSibling);this.arrowDown=a(this.btnDown[0].firstChild);var b=this.element.id;this.btnUp[0].id=\"jqxScrollBtnUp\"+b;this.btnDown[0].id=\"jqxScrollBtnDown\"+b;this.btnThumb[0].id=\"jqxScrollThumb\"+b;this.areaUp[0].id=\"jqxScrollAreaUp\"+b;this.areaDown[0].id=\"jqxScrollAreaDown\"+b;this.scrollWrap[0].id=\"jqxScrollWrap\"+b;this.scrollOuterWrap[0].id=\"jqxScrollOuterWrap\"+b;if(!this.host.jqxRepeatButton){throw new Error(\"jqxScrollBar: Missing reference to jqxbuttons.js.\");return}this.btnUp.jqxRepeatButton({_ariaDisabled:true,overrideTheme:true,disabled:this.disabled});this.btnDown.jqxRepeatButton({_ariaDisabled:true,overrideTheme:true,disabled:this.disabled});this.btnDownInstance=a.data(this.btnDown[0],\"jqxRepeatButton\").instance;this.btnUpInstance=a.data(this.btnUp[0],\"jqxRepeatButton\").instance;this.areaUp.jqxRepeatButton({_scrollAreaButton:true,_ariaDisabled:true,overrideTheme:true});this.areaDown.jqxRepeatButton({_scrollAreaButton:true,_ariaDisabled:true,overrideTheme:true});this.btnThumb.jqxButton({_ariaDisabled:true,overrideTheme:true,disabled:this.disabled});this.propertyChangeMap.value=function(f,h,g,i){if(!(isNaN(i))){if(g!=i){f.setPosition(parseFloat(i),true)}}};this.propertyChangeMap.width=function(f,h,g,i){if(f.width!=undefined&&parseInt(f.width)>0){f.host.width(parseInt(f.width));f._arrange()}};this.propertyChangeMap.height=function(f,h,g,i){if(f.height!=undefined&&parseInt(f.height)>0){f.host.height(parseInt(f.height));f._arrange()}};this.propertyChangeMap.theme=function(f,h,g,i){f.setTheme()};this.propertyChangeMap.max=function(f,h,g,i){if(!(isNaN(i))){if(g!=i){f.max=parseInt(i);if(f.min>f.max){f.max=f.min+1}f._arrange();f.setPosition(f.value)}}};this.propertyChangeMap.min=function(f,h,g,i){if(!(isNaN(i))){if(g!=i){f.min=parseInt(i);if(f.min>f.max){f.max=f.min+1}f._arrange();f.setPosition(f.value)}}};this.propertyChangeMap.disabled=function(f,h,g,i){if(g!=i){if(i){f.host.addClass(f.toThemeProperty(\"jqx-fill-state-disabled\"))}else{f.host.removeClass(f.toThemeProperty(\"jqx-fill-state-disabled\"))}f.btnUp.jqxRepeatButton(\"disabled\",f.disabled);f.btnDown.jqxRepeatButton(\"disabled\",f.disabled);f.btnThumb.jqxButton(\"disabled\",f.disabled)}};this.propertyChangeMap.touchMode=function(f,h,g,i){if(g!=i){f._updateTouchBehavior();if(i===true){f.showButtons=false;f.refresh()}else{if(i===false){f.showButtons=true;f.refresh()}}}};this.propertyChangeMap.rtl=function(f,h,g,i){if(g!=i){f.refresh()}};this.buttonUpCapture=false;this.buttonDownCapture=false;this._updateTouchBehavior();this.setPosition(this.value);this._addHandlers();this.setTheme()},resize:function(c,b){this.width=c;this.height=b;this._arrange()},_updateTouchBehavior:function(){this.isTouchDevice=a.jqx.mobile.isTouchDevice();if(this.touchMode==true){if(a.jqx.browser.msie&&a.jqx.browser.version<9){this.setTheme();return}this.isTouchDevice=true;a.jqx.mobile.setMobileSimulator(this.btnThumb[0]);this._removeHandlers();this._addHandlers();this.setTheme()}else{if(this.touchMode==false){this.isTouchDevice=false}}},_addHandlers:function(){var j=this;var e=false;try{if((\"ontouchstart\" in window)||window.DocumentTouch&&document instanceof DocumentTouch){e=true;this._touchSupport=true}}catch(f){}if(j.isTouchDevice||e){this.addHandler(this.btnThumb,a.jqx.mobile.getTouchEventName(\"touchend\"),function(k){var l=j.vertical?j.toThemeProperty(\"jqx-scrollbar-thumb-state-pressed\"):j.toThemeProperty(\"jqx-scrollbar-thumb-state-pressed-horizontal\");var m=j.toThemeProperty(\"jqx-fill-state-pressed\");j.btnThumb.removeClass(l);j.btnThumb.removeClass(m);if(!j.disabled){j.handlemouseup(j,k)}return false});this.addHandler(this.btnThumb,a.jqx.mobile.getTouchEventName(\"touchstart\"),function(k){if(!j.disabled){if(j.touchMode==true){k.clientX=k.originalEvent.clientX;k.clientY=k.originalEvent.clientY}else{var l=k;if(l.originalEvent.touches&&l.originalEvent.touches.length){k.clientX=l.originalEvent.touches[0].clientX;k.clientY=l.originalEvent.touches[0].clientY}else{k.clientX=k.originalEvent.clientX;k.clientY=k.originalEvent.clientY}}j.handlemousedown(k);if(k.preventDefault){k.preventDefault()}}});a.jqx.mobile.touchScroll(this.element,j.max,function(q,p,l,k,m){if(j.host.css(\"visibility\")==\"visible\"){if(j.touchMode==true){m.clientX=m.originalEvent.clientX;m.clientY=m.originalEvent.clientY}else{var o=m;if(o.originalEvent.touches&&o.originalEvent.touches.length){m.clientX=o.originalEvent.touches[0].clientX;m.clientY=o.originalEvent.touches[0].clientY}else{m.clientX=m.originalEvent.clientX;m.clientY=m.originalEvent.clientY}}var n=j.vertical?j.toThemeProperty(\"jqx-scrollbar-thumb-state-pressed\"):j.toThemeProperty(\"jqx-scrollbar-thumb-state-pressed-horizontal\");j.btnThumb.addClass(n);j.btnThumb.addClass(j.toThemeProperty(\"jqx-fill-state-pressed\"));j.thumbCapture=true;j.handlemousemove(m)}},j.element.id,j.host,j.host)}if(!this.isTouchDevice){try{if(document.referrer!=\"\"||window.frameElement){if(window.top!=null&&window.top!=window.self){var b=null;if(window.parent&&document.referrer){b=document.referrer}if(b&&b.indexOf(document.location.host)!=-1){var g=function(k){if(!j.disabled){j.handlemouseup(j,k)}};if(window.top.document.addEventListener){window.top.document.addEventListener(\"mouseup\",g,false)}else{if(window.top.document.attachEvent){window.top.document.attachEvent(\"onmouseup\",g)}}}}}}catch(i){}var c=\"click mouseup mousedown\";this.addHandler(this.btnDown,c,function(l){var k=j.step;if(Math.abs(j.max-j.min)<=k){k=1}if(j.rtl&&!j.vertical){k=-j.step}switch(l.type){case\"click\":if(j.buttonDownCapture&&!j.isTouchDevice){if(!j.disabled){j.setPosition(j.value+k)}}else{if(!j.disabled&&j.isTouchDevice){j.setPosition(j.value+k)}}break;case\"mouseup\":if(!j.btnDownInstance.base.disabled&&j.buttonDownCapture){j.buttonDownCapture=false;j.btnDown.removeClass(j.toThemeProperty(\"jqx-scrollbar-button-state-pressed\"));j.btnDown.removeClass(j.toThemeProperty(\"jqx-fill-state-pressed\"));j._removeArrowClasses(\"pressed\",\"down\");j.handlemouseup(j,l);j.setPosition(j.value+k);return false}break;case\"mousedown\":if(!j.btnDownInstance.base.disabled){j.buttonDownCapture=true;j.btnDown.addClass(j.toThemeProperty(\"jqx-fill-state-pressed\"));j.btnDown.addClass(j.toThemeProperty(\"jqx-scrollbar-button-state-pressed\"));j._addArrowClasses(\"pressed\",\"down\");return false}break}});this.addHandler(this.btnUp,c,function(l){var k=j.step;if(Math.abs(j.max-j.min)<=k){k=1}if(j.rtl&&!j.vertical){k=-j.step}switch(l.type){case\"click\":if(j.buttonUpCapture&&!j.isTouchDevice){if(!j.disabled){j.setPosition(j.value-k)}}else{if(!j.disabled&&j.isTouchDevice){j.setPosition(j.value-k)}}break;case\"mouseup\":if(!j.btnUpInstance.base.disabled&&j.buttonUpCapture){j.buttonUpCapture=false;j.btnUp.removeClass(j.toThemeProperty(\"jqx-scrollbar-button-state-pressed\"));j.btnUp.removeClass(j.toThemeProperty(\"jqx-fill-state-pressed\"));j._removeArrowClasses(\"pressed\",\"up\");j.handlemouseup(j,l);j.setPosition(j.value-k);return false}break;case\"mousedown\":if(!j.btnUpInstance.base.disabled){j.buttonUpCapture=true;j.btnUp.addClass(j.toThemeProperty(\"jqx-fill-state-pressed\"));j.btnUp.addClass(j.toThemeProperty(\"jqx-scrollbar-button-state-pressed\"));j._addArrowClasses(\"pressed\",\"up\");return false}break}})}var h=\"click\";if(this.isTouchDevice){h=a.jqx.mobile.getTouchEventName(\"touchend\")}this.addHandler(this.areaUp,h,function(l){if(!j.disabled){var k=j.largestep;if(j.rtl&&!j.vertical){k=-j.largestep}j.setPosition(j.value-k);return false}});this.addHandler(this.areaDown,h,function(l){if(!j.disabled){var k=j.largestep;if(j.rtl&&!j.vertical){k=-j.largestep}j.setPosition(j.value+k);return false}});this.addHandler(this.areaUp,\"mousedown\",function(k){if(!j.disabled){j.areaUpCapture=true;return false}});this.addHandler(this.areaDown,\"mousedown\",function(k){if(!j.disabled){j.areaDownCapture=true;return false}});this.addHandler(this.btnThumb,\"mousedown dragstart\",function(k){if(k.type===\"dragstart\"){return false}if(!j.disabled){j.handlemousedown(k)}if(k.preventDefault){k.preventDefault()}});this.addHandler(a(document),\"mouseup.\"+this.element.id,function(k){if(!j.disabled){j.handlemouseup(j,k)}});if(!this.isTouchDevice){this.mousemoveFunc=function(k){if(!j.disabled){j.handlemousemove(k)}};this.addHandler(a(document),\"mousemove.\"+this.element.id,this.mousemoveFunc);this.addHandler(a(document),\"mouseleave.\"+this.element.id,function(k){if(!j.disabled){j.handlemouseleave(k)}});this.addHandler(a(document),\"mouseenter.\"+this.element.id,function(k){if(!j.disabled){j.handlemouseenter(k)}});if(!j.disabled){this.addHandler(this.btnUp,\"mouseenter mouseleave\",function(k){if(k.type===\"mouseenter\"){if(!j.disabled&&!j.btnUpInstance.base.disabled&&j.touchMode!=true){j.btnUp.addClass(j.toThemeProperty(\"jqx-scrollbar-button-state-hover\"));j.btnUp.addClass(j.toThemeProperty(\"jqx-fill-state-hover\"));j._addArrowClasses(\"hover\",\"up\")}}else{if(!j.disabled&&!j.btnUpInstance.base.disabled&&j.touchMode!=true){j.btnUp.removeClass(j.toThemeProperty(\"jqx-scrollbar-button-state-hover\"));j.btnUp.removeClass(j.toThemeProperty(\"jqx-fill-state-hover\"));j._removeArrowClasses(\"hover\",\"up\")}}});var d=j.toThemeProperty(\"jqx-scrollbar-thumb-state-hover\");if(!j.vertical){d=j.toThemeProperty(\"jqx-scrollbar-thumb-state-hover-horizontal\")}this.addHandler(this.btnThumb,\"mouseenter mouseleave\",function(k){if(k.type===\"mouseenter\"){if(!j.disabled&&j.touchMode!=true){j.btnThumb.addClass(d);j.btnThumb.addClass(j.toThemeProperty(\"jqx-fill-state-hover\"))}}else{if(!j.disabled&&j.touchMode!=true){j.btnThumb.removeClass(d);j.btnThumb.removeClass(j.toThemeProperty(\"jqx-fill-state-hover\"))}}});this.addHandler(this.btnDown,\"mouseenter mouseleave\",function(k){if(k.type===\"mouseenter\"){if(!j.disabled&&!j.btnDownInstance.base.disabled&&j.touchMode!=true){j.btnDown.addClass(j.toThemeProperty(\"jqx-scrollbar-button-state-hover\"));j.btnDown.addClass(j.toThemeProperty(\"jqx-fill-state-hover\"));j._addArrowClasses(\"hover\",\"down\")}}else{if(!j.disabled&&!j.btnDownInstance.base.disabled&&j.touchMode!=true){j.btnDown.removeClass(j.toThemeProperty(\"jqx-scrollbar-button-state-hover\"));j.btnDown.removeClass(j.toThemeProperty(\"jqx-fill-state-hover\"));j._removeArrowClasses(\"hover\",\"down\")}}})}}},destroy:function(){var b=this.btnUp;var f=this.btnDown;var d=this.btnThumb;var c=this.scrollWrap;var h=this.areaUp;var e=this.areaDown;this.arrowUp.remove();delete this.arrowUp;this.arrowDown.remove();delete this.arrowDown;e.removeClass();h.removeClass();f.removeClass();b.removeClass();d.removeClass();b.jqxRepeatButton(\"destroy\");f.jqxRepeatButton(\"destroy\");h.jqxRepeatButton(\"destroy\");e.jqxRepeatButton(\"destroy\");d.jqxButton(\"destroy\");var g=a.data(this.element,\"jqxScrollBar\");this._removeHandlers();this.btnUp=null;this.btnDown=null;this.scrollWrap=null;this.areaUp=null;this.areaDown=null;this.scrollOuterWrap=null;delete this.mousemoveFunc;delete this.btnDownInstance;delete this.btnUpInstance;delete this.scrollOuterWrap;delete this.scrollWrap;delete this.btnDown;delete this.areaDown;delete this.areaUp;delete this.btnDown;delete this.btnUp;delete this.btnThumb;delete this.propertyChangeMap.value;delete this.propertyChangeMap.min;delete this.propertyChangeMap.max;delete this.propertyChangeMap.touchMode;delete this.propertyChangeMap.disabled;delete this.propertyChangeMap.theme;delete this.propertyChangeMap;if(g){delete g.instance}this.host.removeData();this.host.remove();delete this.host;delete this.set;delete this.get;delete this.call;delete this.element},_removeHandlers:function(){this.removeHandler(this.btnUp,\"mouseenter\");this.removeHandler(this.btnDown,\"mouseenter\");this.removeHandler(this.btnThumb,\"mouseenter\");this.removeHandler(this.btnUp,\"mouseleave\");this.removeHandler(this.btnDown,\"mouseleave\");this.removeHandler(this.btnThumb,\"mouseleave\");this.removeHandler(this.btnUp,\"click\");this.removeHandler(this.btnDown,\"click\");this.removeHandler(this.btnDown,\"mouseup\");this.removeHandler(this.btnUp,\"mouseup\");this.removeHandler(this.btnDown,\"mousedown\");this.removeHandler(this.btnUp,\"mousedown\");this.removeHandler(this.areaUp,\"mousedown\");this.removeHandler(this.areaDown,\"mousedown\");this.removeHandler(this.areaUp,\"click\");this.removeHandler(this.areaDown,\"click\");this.removeHandler(this.btnThumb,\"mousedown\");this.removeHandler(this.btnThumb,\"dragstart\");this.removeHandler(a(document),\"mouseup.\"+this.element.id);if(!this.mousemoveFunc){this.removeHandler(a(document),\"mousemove.\"+this.element.id)}else{this.removeHandler(a(document),\"mousemove.\"+this.element.id,this.mousemoveFunc)}this.removeHandler(a(document),\"mouseleave.\"+this.element.id);this.removeHandler(a(document),\"mouseenter.\"+this.element.id);var b=this},_addArrowClasses:function(c,b){if(c==\"pressed\"){c=\"selected\"}if(c!=\"\"){c=\"-\"+c}if(this.vertical){if(b==\"up\"||b==undefined){this.arrowUp.addClass(this.toThemeProperty(\"jqx-icon-arrow-up\"+c))}if(b==\"down\"||b==undefined){this.arrowDown.addClass(this.toThemeProperty(\"jqx-icon-arrow-down\"+c))}}else{if(b==\"up\"||b==undefined){this.arrowUp.addClass(this.toThemeProperty(\"jqx-icon-arrow-left\"+c))}if(b==\"down\"||b==undefined){this.arrowDown.addClass(this.toThemeProperty(\"jqx-icon-arrow-right\"+c))}}},_removeArrowClasses:function(c,b){if(c==\"pressed\"){c=\"selected\"}if(c!=\"\"){c=\"-\"+c}if(this.vertical){if(b==\"up\"||b==undefined){this.arrowUp.removeClass(this.toThemeProperty(\"jqx-icon-arrow-up\"+c))}if(b==\"down\"||b==undefined){this.arrowDown.removeClass(this.toThemeProperty(\"jqx-icon-arrow-down\"+c))}}else{if(b==\"up\"||b==undefined){this.arrowUp.removeClass(this.toThemeProperty(\"jqx-icon-arrow-left\"+c))}if(b==\"down\"||b==undefined){this.arrowDown.removeClass(this.toThemeProperty(\"jqx-icon-arrow-right\"+c))}}},setTheme:function(){var o=this.btnUp;var m=this.btnDown;var p=this.btnThumb;var e=this.scrollWrap;var g=this.areaUp;var h=this.areaDown;var f=this.arrowUp;var i=this.arrowDown;this.scrollWrap[0].className=this.toThemeProperty(\"jqx-reset\");this.scrollOuterWrap[0].className=this.toThemeProperty(\"jqx-reset\");var k=this.toThemeProperty(\"jqx-reset\");this.areaDown[0].className=k;this.areaUp[0].className=k;var d=this.toThemeProperty(\"jqx-scrollbar\")+\" \"+this.toThemeProperty(\"jqx-widget\")+\" \"+this.toThemeProperty(\"jqx-widget-content\");this.host.addClass(d);if(this.isTouchDevice){this.host.addClass(this.toThemeProperty(\"jqx-scrollbar-mobile\"))}m[0].className=this.toThemeProperty(\"jqx-scrollbar-button-state-normal\");o[0].className=this.toThemeProperty(\"jqx-scrollbar-button-state-normal\");var q=\"\";if(this.vertical){f[0].className=k+\" \"+this.toThemeProperty(\"jqx-icon-arrow-up\");i[0].className=k+\" \"+this.toThemeProperty(\"jqx-icon-arrow-down\");q=this.toThemeProperty(\"jqx-scrollbar-thumb-state-normal\")}else{f[0].className=k+\" \"+this.toThemeProperty(\"jqx-icon-arrow-left\");i[0].className=k+\" \"+this.toThemeProperty(\"jqx-icon-arrow-right\");q=this.toThemeProperty(\"jqx-scrollbar-thumb-state-normal-horizontal\")}q+=\" \"+this.toThemeProperty(\"jqx-fill-state-normal\");p[0].className=q;if(this.disabled){e.addClass(this.toThemeProperty(\"jqx-fill-state-disabled\"));e.removeClass(this.toThemeProperty(\"jqx-scrollbar-state-normal\"))}else{e.addClass(this.toThemeProperty(\"jqx-scrollbar-state-normal\"));e.removeClass(this.toThemeProperty(\"jqx-fill-state-disabled\"))}if(this.roundedCorners==\"all\"){this.host.addClass(this.toThemeProperty(\"jqx-rc-all\"));if(this.vertical){var j=a.jqx.cssroundedcorners(\"top\");j=this.toThemeProperty(j);o.addClass(j);var c=a.jqx.cssroundedcorners(\"bottom\");c=this.toThemeProperty(c);m.addClass(c)}else{var n=a.jqx.cssroundedcorners(\"left\");n=this.toThemeProperty(n);o.addClass(n);var l=a.jqx.cssroundedcorners(\"right\");l=this.toThemeProperty(l);m.addClass(l)}}else{var b=a.jqx.cssroundedcorners(this.roundedCorners);b=this.toThemeProperty(b);elBtnUp.addClass(b);elBtnDown.addClass(b)}var b=a.jqx.cssroundedcorners(this.roundedCorners);b=this.toThemeProperty(b);if(!p.hasClass(b)){p.addClass(b)}if(this.isTouchDevice&&this.touchModeStyle!=false){this.showButtons=false;p.addClass(this.toThemeProperty(\"jqx-scrollbar-thumb-state-normal-touch\"))}},isScrolling:function(){if(this.thumbCapture==undefined||this.buttonDownCapture==undefined||this.buttonUpCapture==undefined||this.areaDownCapture==undefined||this.areaUpCapture==undefined){return false}return this.thumbCapture||this.buttonDownCapture||this.buttonUpCapture||this.areaDownCapture||this.areaUpCapture},track:function(){var d,b,e,c;d=Date.now();b=d-this.timestamp;this.timestamp=d;e=this.offset-this.frame;this.frame=this.offset;c=1000*e/(1+b);this.velocity=0.2*c+0.2*this.velocity},handlemousedown:function(e){if(this.thumbCapture==undefined||this.thumbCapture==false){this.thumbCapture=true;var c=this.btnThumb;if(c!=null){c.addClass(this.toThemeProperty(\"jqx-fill-state-pressed\"));if(this.vertical){c.addClass(this.toThemeProperty(\"jqx-scrollbar-thumb-state-pressed\"))}else{c.addClass(this.toThemeProperty(\"jqx-scrollbar-thumb-state-pressed-horizontal\"))}}}var d=this;function b(f){d.reference=parseInt(d.btnThumb[0].style.top);d.offset=parseInt(d.btnThumb[0].style.top);if(!d.vertical){d.reference=parseInt(d.btnThumb[0].style.left);d.offset=parseInt(d.btnThumb[0].style.left)}d.velocity=d.amplitude=0;d.frame=d.offset;d.timestamp=Date.now();clearInterval(d.ticker);d.ticker=setInterval(function(){d.track()},100)}if(this.thumbCapture&&a.jqx.scrollAnimation){b(e)}this.dragStartX=e.clientX;this.dragStartY=e.clientY;this.dragStartValue=this.value},toggleHover:function(c,b){},refresh:function(){this._arrange()},_setElementPosition:function(c,b,d){if(!isNaN(b)){if(parseInt(c[0].style.left)!=parseInt(b)){c[0].style.left=b+\"px\"}}if(!isNaN(d)){if(parseInt(c[0].style.top)!=parseInt(d)){c[0].style.top=d+\"px\"}}},_setElementTopPosition:function(b,c){if(!isNaN(c)){b[0].style.top=c+\"px\"}},_setElementLeftPosition:function(c,b){if(!isNaN(b)){c[0].style.left=b+\"px\"}},handlemouseleave:function(e){var b=this.btnUp;var d=this.btnDown;if(this.buttonDownCapture||this.buttonUpCapture){b.removeClass(this.toThemeProperty(\"jqx-scrollbar-button-state-pressed\"));d.removeClass(this.toThemeProperty(\"jqx-scrollbar-button-state-pressed\"));this._removeArrowClasses(\"pressed\")}if(this.thumbCapture!=true){return}var c=this.btnThumb;var f=this.vertical?this.toThemeProperty(\"jqx-scrollbar-thumb-state-pressed\"):this.toThemeProperty(\"jqx-scrollbar-thumb-state-pressed-horizontal\");c.removeClass(f);c.removeClass(this.toThemeProperty(\"jqx-fill-state-pressed\"))},handlemouseenter:function(e){var b=this.btnUp;var d=this.btnDown;if(this.buttonUpCapture){b.addClass(this.toThemeProperty(\"jqx-scrollbar-button-state-pressed\"));b.addClass(this.toThemeProperty(\"jqx-fill-state-pressed\"));this._addArrowClasses(\"pressed\",\"up\")}if(this.buttonDownCapture){d.addClass(this.toThemeProperty(\"jqx-scrollbar-button-state-pressed\"));d.addClass(this.toThemeProperty(\"jqx-fill-state-pressed\"));this._addArrowClasses(\"pressed\",\"down\")}if(this.thumbCapture!=true){return}var c=this.btnThumb;if(this.vertical){c.addClass(this.toThemeProperty(\"jqx-scrollbar-thumb-state-pressed\"))}else{c.addClass(this.toThemeProperty(\"jqx-scrollbar-thumb-state-pressed-horizontal\"))}c.addClass(this.toThemeProperty(\"jqx-fill-state-pressed\"))},handlemousemove:function(b){var i=this.btnUp;var e=this.btnDown;var d=0;if(e==null||i==null){return}if(i!=null&&e!=null&&this.buttonDownCapture!=undefined&&this.buttonUpCapture!=undefined){if(this.buttonDownCapture&&b.which==d){e.removeClass(this.toThemeProperty(\"jqx-scrollbar-button-state-pressed\"));e.removeClass(this.toThemeProperty(\"jqx-fill-state-pressed\"));this._removeArrowClasses(\"pressed\",\"down\");this.buttonDownCapture=false}else{if(this.buttonUpCapture&&b.which==d){i.removeClass(this.toThemeProperty(\"jqx-scrollbar-button-state-pressed\"));i.removeClass(this.toThemeProperty(\"jqx-fill-state-pressed\"));this._removeArrowClasses(\"pressed\",\"up\");this.buttonUpCapture=false}}}if(this.thumbCapture!=true){return false}var k=this.btnThumb;if(b.which==d&&!this.isTouchDevice&&!this._touchSupport){this.thumbCapture=false;this._arrange();var j=this.vertical?this.toThemeProperty(\"jqx-scrollbar-thumb-state-pressed\"):this.toThemeProperty(\"jqx-scrollbar-thumb-state-pressed-horizontal\");k.removeClass(j);k.removeClass(this.toThemeProperty(\"jqx-fill-state-pressed\"));return true}if(b.preventDefault!=undefined){b.preventDefault()}if(b.originalEvent!=null){b.originalEvent.mouseHandled=true}if(b.stopPropagation!=undefined){b.stopPropagation()}var l=0;try{if(!this.vertical){l=b.clientX-this.dragStartX}else{l=b.clientY-this.dragStartY}var f=this._btnAndThumbSize;if(!this._btnAndThumbSize){f=(this.vertical)?i.height()+e.height()+k.height():i.width()+e.width()+k.width()}var g=(this.max-this.min)/(this.scrollBarSize-f);if(this.thumbStep==\"auto\"){l*=g}else{l*=g;if(Math.abs(this.dragStartValue+l-this.value)>=parseInt(this.thumbStep)){var c=Math.round(parseInt(l)/this.thumbStep)*this.thumbStep;if(this.rtl&&!this.vertical){this.setPosition(this.dragStartValue-c)}else{this.setPosition(this.dragStartValue+c)}return false}else{return false}}var c=l;if(this.rtl&&!this.vertical){c=-l}this.setPosition(this.dragStartValue+c);this.offset=parseInt(k[0].style.left);if(this.vertical){this.offset=parseInt(k[0].style.top)}}catch(h){alert(h)}return false},handlemouseup:function(j,b){var g=false;if(this.thumbCapture){this.thumbCapture=false;var i=this.btnThumb;var h=this.vertical?this.toThemeProperty(\"jqx-scrollbar-thumb-state-pressed\"):this.toThemeProperty(\"jqx-scrollbar-thumb-state-pressed-horizontal\");i.removeClass(h);i.removeClass(this.toThemeProperty(\"jqx-fill-state-pressed\"));g=true;this._mouseup=new Date();if(a.jqx.scrollAnimation){var d=this;function f(){var k,o;if(d.amplitude){k=Date.now()-d.timestamp;o=-d.amplitude*Math.exp(-k/325);if(o>0.5||o<-0.5){var l=(d.max-d.min)/(d.scrollBarSize-d._btnAndThumbSize);var n=l*(d.target+o);var m=n;if(d.rtl&&!d.vertical){m=-n}d.setPosition(d.dragStartValue+m);requestAnimationFrame(f)}else{var l=(d.max-d.min)/(d.scrollBarSize-d._btnAndThumbSize);var n=l*(d.target+o);var m=n;if(d.rtl&&!d.vertical){m=-n}d.setPosition(d.dragStartValue+m)}}}clearInterval(this.ticker);if(this.velocity>25||this.velocity<-25){this.amplitude=0.8*this.velocity;this.target=Math.round(this.offset+this.amplitude);if(!this.vertical){this.target-=this.reference}else{this.target-=this.reference}this.timestamp=Date.now();requestAnimationFrame(f)}}}this.areaDownCapture=this.areaUpCapture=false;if(this.buttonUpCapture||this.buttonDownCapture){var e=this.btnUp;var c=this.btnDown;this.buttonUpCapture=false;this.buttonDownCapture=false;e.removeClass(this.toThemeProperty(\"jqx-scrollbar-button-state-pressed\"));c.removeClass(this.toThemeProperty(\"jqx-scrollbar-button-state-pressed\"));e.removeClass(this.toThemeProperty(\"jqx-fill-state-pressed\"));c.removeClass(this.toThemeProperty(\"jqx-fill-state-pressed\"));this._removeArrowClasses(\"pressed\");g=true;this._mouseup=new Date()}if(g){if(b.preventDefault!=undefined){b.preventDefault()}if(b.originalEvent!=null){b.originalEvent.mouseHandled=true}if(b.stopPropagation!=undefined){b.stopPropagation()}}},setPosition:function(b,g){var d=this.element;if(b==undefined||b==NaN){b=this.min}if(b>=this.max){b=this.max}if(b<this.min){b=this.min}if(this.value!==b||g==true){if(b==this.max){var c=new a.Event(\"complete\");this.host.trigger(c)}var f=this.value;if(this._triggervaluechanged){var e=new a.Event(\"valueChanged\");e.previousValue=this.value;e.currentValue=b}this.value=b;this._positionelements();if(this._triggervaluechanged){this.host.trigger(e)}if(this.valueChanged){this.valueChanged({currentValue:this.value,previousvalue:f})}}return b},val:function(b){var c=function(e){for(var d in e){if(e.hasOwnProperty(d)){return false}}if(typeof b==\"number\"){return false}if(typeof b==\"date\"){return false}if(typeof b==\"boolean\"){return false}if(typeof b==\"string\"){return false}return true};if(c(b)||arguments.length==0){return this.value}else{this.setPosition(b);return b}},_getThumbSize:function(c){var b=this.max-this.min;var d=0;if(b>1){d=(c/(b+c)*c)}else{if(b==1){d=c-1}else{if(b==0){d=c}}}if(this.thumbSize>0){d=this.thumbSize}if(d<this.thumbMinSize){d=this.thumbMinSize}return Math.min(d,c)},_positionelements:function(){var g=this.element;var n=this.areaUp;var e=this.areaDown;var h=this.btnUp;var f=this.btnDown;var o=this.btnThumb;var b=this.scrollWrap;var p=this._height?this._height:this.host.height();var c=this._width?this._width:this.host.width();var l=(!this.vertical)?p:c;if(!this.showButtons){l=0}var m=(!this.vertical)?c:p;this.scrollBarSize=m;var d=this._getThumbSize(m-2*l);d=Math.floor(d);if(d<this.thumbMinSize){d=this.thumbMinSize}if(p==NaN||p<10){p=10}if(c==NaN||c<10){c=10}l+=2;this.btnSize=l;var i=this._btnAndThumbSize;if(!this._btnAndThumbSize){var i=(this.vertical)?2*this.btnSize+o.outerHeight():2*this.btnSize+o.outerWidth();i=Math.round(i)}var k=(m-i)/(this.max-this.min)*(this.value-this.min);if(this.rtl&&!this.vertical){k=(m-i)/(this.max-this.min)*(this.max-this.value-this.min)}k=Math.round(k);if(k<0){k=0}if(this.vertical){var j=m-k-i;if(j<0){j=0}e[0].style.height=j+\"px\";n[0].style.height=k+\"px\";this._setElementTopPosition(n,l);this._setElementTopPosition(o,l+k);this._setElementTopPosition(e,l+k+d)}else{n[0].style.width=k+\"px\";if(m-k-i>=0){e[0].style.width=m-k-i+\"px\"}else{e[0].style.width=\"0px\"}this._setElementLeftPosition(n,l);this._setElementLeftPosition(o,l+k);this._setElementLeftPosition(e,2+l+k+d)}},_arrange:function(){var m=this;if(m._initialLayout){m._initialLayout=false;return}if(m.min>m.max){var x=m.min;m.min=m.max;m.max=x}if(m.min<0){var k=m.max-m.min;m.min=0;m.max=k}var d=m.element;var g=m.areaUp;var t=m.areaDown;var c=m.btnUp;var l=m.btnDown;var u=m.btnThumb;var p=m.scrollWrap;var n=parseInt(m.element.style.height);var q=parseInt(m.element.style.width);if(m.isPercentage){var n=m.host.height();var q=m.host.width()}if(isNaN(n)){n=0}if(isNaN(q)){q=0}m._width=q;m._height=n;var b=(!m.vertical)?n:q;if(!m.showButtons){b=0}c[0].style.width=b+\"px\";c[0].style.height=b+\"px\";l[0].style.width=b+\"px\";l[0].style.height=b+\"px\";if(m.vertical){p[0].style.width=q+2+\"px\"}else{p[0].style.height=n+2+\"px\"}m._setElementPosition(c,0,0);var s=b+2;if(m.vertical){m._setElementPosition(l,0,n-s)}else{m._setElementPosition(l,q-s,0)}var f=(!m.vertical)?q:n;m.scrollBarSize=f;var h=m._getThumbSize(f-2*s);h=Math.floor(h-2);if(h<m.thumbMinSize){h=m.thumbMinSize}var o=false;if(m.isTouchDevice&&m.touchModeStyle!=false){o=true}if(!m.vertical){u[0].style.width=h+\"px\";u[0].style.height=n+\"px\";if(o&&m.thumbTouchSize!==0){u.css({height:m.thumbTouchSize+\"px\"});u.css(\"margin-top\",(m.host.height()-m.thumbTouchSize)/2)}}else{u[0].style.width=q+\"px\";u[0].style.height=h+\"px\";if(o&&m.thumbTouchSize!==0){u.css({width:m.thumbTouchSize+\"px\"});u.css(\"margin-left\",(m.host.width()-m.thumbTouchSize)/2)}}if(n==NaN||n<10){n=10}if(q==NaN||q<10){q=10}m.btnSize=b;var e=(m.vertical)?2*s+(2+parseInt(u[0].style.height)):2*s+(2+parseInt(u[0].style.width));e=Math.round(e);m._btnAndThumbSize=e;var w=(f-e)/(m.max-m.min)*(m.value-m.min);if(m.rtl&&!m.vertical){w=(f-e)/(m.max-m.min)*(m.max-m.value-m.min)}w=Math.round(w);if(isNaN(w)||w<0||w===-Infinity||w===Infinity){w=0}if(m.vertical){var v=(f-w-e);if(v<0){v=0}t[0].style.height=v+\"px\";t[0].style.width=q+\"px\";g[0].style.height=w+\"px\";g[0].style.width=q+\"px\";var i=parseInt(m.element.style.height);if(m.isPercentage){i=m.host.height()}u[0].style.visibility=\"inherit\";if(i-3*parseInt(b)<0||i<e){u[0].style.visibility=\"hidden\"}m._setElementPosition(g,0,s);m._setElementPosition(u,0,s+w);m._setElementPosition(t,0,s+w+h)}else{if(w>0){g[0].style.width=w+\"px\"}if(n>0){g[0].style.height=n+\"px\"}var j=(f-w-e);if(j<0){j=0}t[0].style.width=j+\"px\";t[0].style.height=n+\"px\";var r=parseInt(m.element.style.width);if(m.isPercentage){r=m.host.width()}u[0].style.visibility=\"inherit\";if((r-3*parseInt(b)<0)||(r<e)){u[0].style.visibility=\"hidden\"}m._setElementPosition(g,s,0);m._setElementPosition(u,s+w,0);m._setElementPosition(t,s+w+h,0)}}})})(jqxBaseFramework);\ndefine(\"jqxscrollbar\", [\"jqxbuttons\"], function(){});\n\n","/*\r\njQWidgets v4.1.2 (2016-Apr)\r\nCopyright (c) 2011-2016 jQWidgets.\r\nLicense: http://jqwidgets.com/license/\r\n*/\r\n\r\n(function(i){i.jqx.observableArray=function(e,J){if(typeof(e)==\"string\"){e=i.parseJSON(e)}if(!Object.defineProperty||!(function(){try{Object.defineProperty({},\"x\",{});return true}catch(M){return false}}())){var L=Object.defineProperty;Object.defineProperty=function(O,P,N){if(L){try{return L(O,P,N)}catch(M){}}if(O!==Object(O)){throw TypeError(\"Object.defineProperty called on non-object\")}if(Object.prototype.__defineGetter__&&(\"get\" in N)){Object.prototype.__defineGetter__.call(O,P,N.get)}if(Object.prototype.__defineSetter__&&(\"set\" in N)){Object.prototype.__defineSetter__.call(O,P,N.set)}if(\"value\" in N){O[P]=N.value}else{if(!O[P]){O[P]=N}}return O}}if(!Array.prototype.forEach){Array.prototype.forEach=function(N){if(this===void 0||this===null){throw TypeError()}var Q=Object(this);var M=Q.length>>>0;if(typeof N!==\"function\"){throw TypeError()}var P=arguments[1],O;for(O=0;O<M;O++){if(O in Q){N.call(P,Q[O],O,Q)}}}}if(typeof Object.getOwnPropertyNames!==\"function\"){Object.getOwnPropertyNames=function(O){if(O!==Object(O)){throw TypeError(\"Object.getOwnPropertyNames called on non-object\")}var M=[],N;for(N in O){if(Object.prototype.hasOwnProperty.call(O,N)){M.push(N)}}return M}}var I=this,H,K=[];I.notifier=null;I.name=\"observableArray\";I.observing=true;I.changes=new Array();var J=J;I.observe=function(){I.observing=true;if(arguments.length==1){J=arguments[0]}};I.unobserve=function(){I.observing=false};I.toArray=function(){return K.slice(0)};I.toJSON=function(X,O){var U=K;if(O){U=O}var T=/[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,W={\"\\b\":\"\\\\b\",\"\\t\":\"\\\\t\",\"\\n\":\"\\\\n\",\"\\f\":\"\\\\f\",\"\\r\":\"\\\\r\",'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\"};function M(Z){return'\"'+Z.replace(T,function(aa){var ab=W[aa];return typeof ab===\"string\"?ab:\"\\\\u\"+(\"0000\"+aa.charCodeAt(0).toString(16)).slice(-4)})+'\"'}function N(Z){return Z<10?\"0\"+Z:Z}function P(aa){var Z;if(isFinite(aa.valueOf())){Z=aa.getUTCFullYear()+\"-\"+N(aa.getUTCMonth()+1)+\"-\"+N(aa.getUTCDate())+\"T\"+N(aa.getUTCHours())+\":\"+N(aa.getUTCMinutes())+\":\"+N(aa.getUTCSeconds())+'Z\"'}else{Z=\"null\"}return Z}function Q(ac){var Z=ac.length,aa=[],ab;for(ab=0;ab<Z;ab++){aa.push(R(ab,ac)||\"null\")}return\"[\"+aa.join(\",\")+\"]\"}function Y(ac){var aa=[],ab,Z;for(ab in ac){if(Object.prototype.hasOwnProperty.call(ac,ab)){if(ab!=\"\"&&X&&X.indexOf(ab)===-1){continue}Z=R(ab,ac);if(Z){aa.push(M(ab)+\":\"+Z)}}}return\"{\"+aa.join(\",\")+\"}\"}function S(Z){switch(Object.prototype.toString.call(Z)){case\"[object Date]\":return P(Z);case\"[object Array]\":return Q(Z)}return Y(Z)}function V(aa,Z){switch(Z){case\"string\":return M(aa);case\"number\":case\"float\":case\"integer\":case\"int\":return isFinite(aa)?aa:\"null\";case\"boolean\":return aa}return\"null\"}function R(aa,Z){var ac=Z[aa],ab=typeof ac;if(ac&&typeof ac===\"object\"&&typeof ac.toJSON===\"function\"){ac=ac.toJSON(aa);ab=typeof ac}if(/(number|float|int|integer|string|boolean)/.test(ab)||(!ac&&ab===\"object\")){return V(ac,ab)}else{return S(ac)}}if(!X&&window.JSON&&typeof window.JSON.stringify===\"function\"){return window.JSON.stringify(U)}return R(\"\",{\"\":U})};I.defineIndexProperty=function(O){if(!(O in I)){var M=function(V,S,U,R){var T=V[S];var Q=T;var P=function(){return Q};var W=function(ab){T=ab;if(Q!==T){var aa=Q;Q=T;if(typeof H===\"function\"){var Y=K.indexOf(R);var Z=\"\";var X=function(ad,ac){Object.getOwnPropertyNames(ad).forEach(function(ae){var af=i.type(ad[ae]);if(af==\"array\"||af==\"object\"){X(ad[ae],ac+\".\"+ae)}else{if(S===ae){Z=ac+\".\"+ae}}})};X(R,Y);H({object:I,type:\"update\",path:Z,index:Y,name:S,newValue:T,oldValue:aa})}}Q=T;return T};if(V[S]!=undefined&&S!=\"length\"){if(Object.defineProperty){Object.defineProperty(V,S,{get:P,set:W})}else{if(Object.prototype.__defineGetter__&&Object.prototype.__defineSetter__){Object.prototype.__defineGetter__.call(V,S,P);Object.prototype.__defineSetter__.call(V,S,W)}}}};var N=function(S,R,P){var Q=i.type(S);if(/(number|float|int|integer|string|boolean)/.test(Q)){return}if(S===undefined){return}Object.getOwnPropertyNames(S).forEach(function(T){var U=i.type(S[T]);if(U==\"array\"||U==\"object\"){M(S,T,R+\".\"+T,P);N(S[T],R+\".\"+T,P)}else{M(S,T,R+\".\"+T,P)}})};Object.defineProperty(I,O,{configurable:true,enumerable:true,get:function(){return K[O]},set:function(Q){var P=K[O];if(I.toJSON(null,P)!=I.toJSON(null,Q)){K[O]=Q;if(typeof H===\"function\"){H({object:I,type:\"update\",path:O.toString(),index:O,name:\"index\",newValue:Q,oldValue:P})}N(Q,O,Q)}}});N(I[O],O,I[O])}};I.push=function(){var M;for(var N=0,O=arguments.length;N<O;N++){M=K.length;K.push(arguments[N]);I.defineIndexProperty(M);if(typeof H===\"function\"){H({object:I,type:\"add\",name:\"length\",index:M,newValue:K.length,oldValue:M})}}return K.length};I.pop=function(){if(~K.length){var M=K.length-1,N=K.pop();delete I[M];if(typeof H===\"function\"){H({object:I,type:\"delete\",name:\"length\",index:M,newValue:K.length,oldValue:M})}return N}};I.unshift=function(){var M=K.length;for(var N=0,O=arguments.length;N<O;N++){K.splice(N,0,arguments[N]);I.defineIndexProperty(K.length-1)}if(typeof H===\"function\"){H({object:I,type:\"add\",index:0,name:\"length\",newValue:K.length,oldValue:M})}return K.length};I.shift=function(){var M=K.length;if(~K.length){var N=K.shift();K.length===0&&delete I[M];if(typeof H===\"function\"){H({object:I,type:\"delete\",index:M,name:\"length\",newValue:K.length,oldValue:M})}return N}};I.slice=function(Q,N,P){var M=K.slice(Q,N);var O=new i.jqx.observableArray(M,P);return O};I.splice=function(Q,R,M){var P=[],U,T;Q=!~Q?K.length-Q:Q;R=(R==null?K.length-Q:R)||0;while(R--){U=K.splice(Q,1)[0];P.push(U);delete I[K.length];if(typeof H===\"function\"){H({object:I,type:\"delete\",index:Q,name:\"length\",newValue:-1,oldValue:Q})}}for(var N=2,S=arguments.length;N<S;N++){K.splice(Q,0,arguments[N]);defineIndexProperty(K.length-1);if(typeof H===\"function\"){H({object:I,type:\"add\",index:Q,name:\"length\",newValue:K.length-1,oldValue:Q})}Q++}var O=new i.jqx.observableArray(P,M);return O};Object.defineProperty(I,\"length\",{configurable:false,enumerable:true,get:function(){return K.length},set:function(M){var N=Number(M);if(N%1===0&&N>=0){if(N<K.length){I.splice(N)}else{if(N>K.length){I.push.apply(I,new Array(N-K.length))}}}else{throw new RangeError(\"Invalid array length\")}return M}});i.jqx.observableArray.prototype.fromArray=function(O,N){var M=new i.jqx.observableArray(O,N);return M};i.jqx.observableArray.prototype.clone=function(){var M=new i.jqx.observableArray(K,J);M.observing=I.observing;M.changes=I.changes;M.notifier=I.notifier;return M};I.remove=function(N){if(N<0||N>=I.length){throw new Error(\"Invalid index : \"+N)}if(I.hasOwnProperty(N)){var M=I[N];I[N]=undefined;K[N]=undefined;if(typeof H===\"function\"){H({object:I,type:\"delete\",index:N,name:\"index\",newValue:undefined,oldValue:M})}return true}return false};I.concat=function(N,P){var M=K.concat(N);var O=new i.jqx.observableArray(M,P);return O};Object.getOwnPropertyNames(Array.prototype).forEach(function(M){if(!(M in I)){var N=function(){var Q=I.observing;I.observing=false;var P=K[M];var O=P.apply(K,arguments);I.observing=Q;return O};Object.defineProperty(I,M,{configurable:false,enumerable:true,writeable:false,value:N})}});I.set=function(N,P){if(i.type(N)==\"string\"&&N.split(\".\").length>1){var M=N.split(\".\");var Q=I;for(var O=0;O<M.length;O++){if(O===0){if(M[O]>=I.length){throw new Error(\"Invalid Index: \"+N)}}if(O<M.length-1){Q=Q[M[O]]}else{Q[M[O]]=P}}return true}if(N>=I.length){I.push(P)}else{I[N]=P}return true};I.get=function(M){return I[M]};if(e instanceof Array){I.push.apply(I,e)}H=function(){if(!I.observing){return}if(arguments&&arguments[0]){I.changes.push(arguments[0])}if(J){J.apply(I,arguments)}if(I.notifier){I.notifier.apply(I,arguments)}};return I};i.jqx.formatDate=function(H,J,I){var e=i.jqx.dataFormat.formatdate(H,J,I);return e};i.jqx.formatNumber=function(H,J,I){var e=i.jqx.dataFormat.formatnumber(H,J,I);return e};i.jqx.dataAdapter=function(J,e){if(J!=undefined){if(J.dataFields!==undefined){J.datafields=J.dataFields}if(J.dataType!==undefined){J.datatype=J.dataType}if(J.localData!==undefined){J.localdata=J.localData}if(J.sortColumn!==undefined){J.sortcolumn=J.sortColumn}if(J.sortDirection!==undefined){J.sortdirection=J.sortDirection}if(J.sortOrder!==undefined){J.sortdirection=J.sortOrder}if(J.formatData!==undefined){J.formatdata=J.formatData}if(J.processData!==undefined){J.processdata=J.processData}if(J.pageSize!==undefined){J.pagesize=J.pageSize}if(J.pageNum!==undefined){J.pagenum=J.pageNum}if(J.updateRow!==undefined){J.updaterow=J.updateRow}if(J.addRow!==undefined){J.addrow=J.addRow}if(J.deleteRow!==undefined){J.deleterow=J.deleteRow}if(J.contentType!==undefined){J.contenttype=J.contentType}if(J.totalRecords!=undefined){J.totalrecords=J.totalRecords}if(J.loadError!=undefined){J.loadError=J.loadError}if(J.sortComparer!=undefined){J.sortcomparer=J.sortComparer}}this._source=J;this._options=e||{};if(J.beforeLoadComplete!=undefined){this._options.beforeLoadComplete=this._source.beforeLoadComplete}if(J.downloadComplete!=undefined){this._options.downloadComplete=this._source.downloadComplete}if(J.loadComplete!=undefined){this._options.loadComplete=this._source.loadComplete}if(J.autoBind!=undefined){this._options.downloadComplete=this._source.autoBind}if(J.formatData!=undefined){this._options.formatData=this._source.formatData}if(J.loadError!=undefined){this._options.loadError=this._source.loadError}if(J.beforeSend!=undefined){this._options.beforeSend=this._source.beforeSend}if(J.contentType!=undefined){this._options.contentType=this._source.contentType}if(J.async!=undefined){this._options.async=this._source.async}if(J.loadServerData!=undefined){this._options.loadServerData=this._source.loadServerData}if(J.uniqueDataFields!=undefined){this._options.uniqueDataFields=this._source.uniqueDataFields}this.records=new Array();this._downloadComplete=new Array();this._bindingUpdate=new Array();if(J!=undefined&&J.localdata!=null&&typeof J.localdata==\"function\"){var I=J.localdata();if(I!=null){J._localdata=J.localdata;var H=this;if(J._localdata.subscribe){H._oldlocaldata=[];J._localdata.subscribe(function(K){var L=function(M){if(i.isArray(M)){return i.makeArray(L(i(M)))}return i.extend(true,{},M)};if(H.suspendKO==false||H.suspendKO==undefined||H._oldlocaldata.length==0){H._oldlocaldata=L(K)}},J._localdata,\"beforeChange\");J._localdata.subscribe(function(L){if(H.suspendKO==false||H.suspendKO==undefined){var K=\"\";H._oldrecords=H.records;if(H._oldlocaldata.length==0){J.localdata=J._localdata()}if(H._oldlocaldata.length==0){K=\"change\"}else{if(L){if(H._oldlocaldata.length==L.length){K=\"update\"}if(H._oldlocaldata.length>L.length){K=\"remove\"}if(H._oldlocaldata.length<L.length){K=\"add\"}}}H.dataBind(null,K)}},J._localdata,\"change\");H._knockoutdatasource=true}J.localdata=I}}if(this._options.autoBind==true){this.dataBind()}};i.jqx.dataAdapter.prototype={getrecords:function(){return this.records},beginUpdate:function(){this.isUpdating=true},endUpdate:function(e){this.isUpdating=false;if(e!=false){if(this._changedrecords&&this._changedrecords.length>0){this.callBindingUpdate(\"update\");this._changedrecords=[]}else{this.dataBind(null,\"\")}}},formatDate:function(H,J,I){var e=i.jqx.dataFormat.formatdate(H,J,I);return e},formatNumber:function(H,J,I){var e=i.jqx.dataFormat.formatnumber(H,J,I);return e},dataBind:function(R,aa){if(this.isUpdating==true){return}var W=this._source;if(!W){return}if(W.generatedfields){W.datafields=null;W.generatedfields=null}i.jqx.dataFormat.datescache=new Array();if(W.dataFields!=null){W.datafields=W.dataFields}if(W.recordstartindex==undefined){W.recordstartindex=0}if(W.recordendindex==undefined){W.recordendindex=0}if(W.loadallrecords==undefined){W.loadallrecords=true}if(W.root==undefined){W.root=\"\"}if(W.record==undefined){W.record=\"\"}if(W.sort!=undefined){this.sort=W.sort}if(W.filter!=undefined){this.filter=W.filter}else{this.filter=null}if(W.sortcolumn!=undefined){this.sortcolumn=W.sortcolumn}if(W.sortdirection!=undefined){this.sortdirection=W.sortdirection}if(W.sortcomparer!=undefined){this.sortcomparer=W.sortcomparer}this.records=new Array();var K=this._options||{};this.virtualmode=K.virtualmode!=undefined?K.virtualmode:false;this.totalrecords=K.totalrecords!=undefined?K.totalrecords:0;this.pageable=K.pageable!=undefined?K.pageable:false;this.pagesize=K.pagesize!=undefined?K.pagesize:0;this.pagenum=K.pagenum!=undefined?K.pagenum:0;this.cachedrecords=K.cachedrecords!=undefined?K.cachedrecords:new Array();this.originaldata=new Array();this.recordids=new Array();this.updaterow=K.updaterow!=undefined?K.updaterow:null;this.addrow=K.addrow!=undefined?K.addrow:null;this.deleterow=K.deleterow!=undefined?K.deleterow:null;this.cache=K.cache!=undefined?K.cache:false;this.unboundmode=false;if(W.formatdata!=undefined){K.formatData=W.formatdata}if(W.data!=undefined){if(K.data==undefined){K.data={}}i.extend(K.data,W.data)}if(W.mapChar!=undefined){W.mapchar=W.maxChar}if(W.mapchar!=undefined){this.mapChar=W.mapchar?W.mapchar:\">\"}else{this.mapChar=K.mapChar?K.mapChar:\">\"}if(K.unboundmode||W.unboundmode){this.unboundmode=K.unboundmode||W.unboundmode}if(W.cache!=undefined){this.cache=W.cache}if(this.koSubscriptions){for(var ac=0;ac<this.koSubscriptions.length;ac++){this.koSubscriptions[ac].dispose()}}this.koSubscriptions=new Array();if(this.pagenum<0){this.pagenum=0}var ah=this;var Q=W.datatype;if(W.datatype===\"csv\"||W.datatype===\"tab\"||W.datatype===\"tsv\"||W.datatype==\"text\"){Q=\"text\"}var N=K.async!=undefined?K.async:true;if(W.async!=undefined){N=W.async}switch(Q){case\"local\":case\"array\":case\"observablearray\":case\"observableArray\":default:if(W.localdata==undefined&&W.length){W.localdata=new Array();for(var Z=0;Z<W.length;Z++){W.localdata[W.localdata.length]=W[Z];W[Z].uid=Z}}if(W.beforeprocessing&&i.isFunction(W.beforeprocessing)){W.beforeprocessing(W.localdata)}var M=W.localdata.length;this.totalrecords=this.virtualmode?(W.totalrecords||M):M;if(this.unboundmode){this.totalrecords=this.unboundmode?(W.totalrecords||M):M;var ad=W.datafields?W.datafields.length:0;if(ad>0){for(var Z=0;Z<this.totalrecords;Z++){var I={};for(var Y=0;Y<ad;Y++){I[W.datafields[Y].name]=\"\"}I.uid=Z;W.localdata[W.localdata.length]=I}}}if(this.totalrecords==undefined){this.totalrecords=0}var ad=W.datafields?W.datafields.length:0;var H=function(ao,aq){var ap={};for(var am=0;am<aq;am++){var al=W.datafields?W.datafields[am]:{};var ar=\"\";if(undefined==al||al==null){continue}if(al.map){if(i.isFunction(al.map)){ar=al.map(ao)}else{var aj=al.map.split(ah.mapChar);if(aj.length>0){var an=ao;for(var ak=0;ak<aj.length;ak++){if(!an){continue}an=an[aj[ak]]}ar=an}else{ar=ao[al.map]}}if(ar!=undefined&&ar!=null){ar=ar.toString()}else{if(ar==undefined&&ar!=null){ar=\"\"}}}var at=false;if(ar==\"\"){at=true;ar=ao[al.name];if(ar!=undefined&&ar!=null){if(W._localdata&&ar.subscribe){ar=ar()}else{if(al.type!=\"array\"){ar=ar.toString()}}}}if(ar==\"[object Object]\"&&al.map&&at){ar=\"\"}ar=ah.getvaluebytype(ar,al);if(al.displayname!=undefined){ap[al.displayname]=ar}else{ap[al.name]=ar}}return ap};if(W._localdata){this._changedrecords=[];this.records=new Array();var ag=W._localdata();i.each(ag,function(am,ap){if(typeof ap===\"string\"){ah.records.push(ap)}else{var ak={};var ao=0;var an=this;i.each(this,function(ay,aD){var at=null;var aE=\"string\";var aC=ay;if(ad>0){var aG=false;var aB=false;for(var ax=0;ax<ad;ax++){var aw=W.datafields[ax];if(aw!=undefined&&(aw.name==ay)){aG=true;at=aw.map;aE=aw.type;aC=aw.name;break}else{if(aw!=undefined&&aw.map&&(aw.map.indexOf(ay)>=0)){aG=true;at=aw.map;aE=aw.type;aC=aw.name;aB=true;var aF=an[ay];if(at!=null){var ar=at.split(ah.mapChar);if(ar.length>0){var az=an;for(var au=0;au<ar.length;au++){az=az[ar[au]]}aF=az}else{aF=an[at]}}if(aE!=\"string\"){aF=ah.getvaluebytype(aF,{type:aE})}ak[aC]=aF;if(ak[aC]!=undefined){ao+=ak[aC].toString().length+ak[aC].toString().substr(0,1)}}}}if(!aG){return true}if(aB){return true}}var av=i.isFunction(an[ay]);if(av){var aF=an[ay]();if(aE!=\"string\"){aF=ah.getvaluebytype(aF,{type:aE})}ak[ay]=aF;if(an[ay].subscribe){var aA=am;ah.koSubscriptions[ah.koSubscriptions.length]=an[ay].subscribe(function(aI){var aH=aA;ak[ay]=aI;var aJ={index:aH,oldrecord:ak,record:ak};ah._changedrecords.push(aJ);if(ah.isUpdating){return}ah.callBindingUpdate(\"update\");ah._changedrecords=[];return false})}}else{var aF=an[ay];if(at!=null){var ar=at.split(ah.mapChar);if(ar.length>0){var az=an;for(var au=0;au<ar.length;au++){az=az[ar[au]]}aF=az}else{aF=an[at]}}if(aE!=\"string\"){aF=ah.getvaluebytype(aF,{type:aE})}ak[aC]=aF;if(ak[aC]!=undefined){ao+=ak[aC].toString().length+ak[aC].toString().substr(0,1)}}});var al=ah.getid(W.id,an,am);ak.uid=al;ah.records.push(ak);ak._koindex=ao;if(ah._oldrecords){var aj=ah.records.length-1;if(aa==\"update\"){if(ah._oldrecords[aj]._koindex!=ao){var aq={index:aj,oldrecord:ah._oldrecords[aj],record:ak};ah._changedrecords.push(aq)}}}}});if(aa==\"add\"){var M=ah.records.length;for(var Z=0;Z<M;Z++){var I=ah.records[Z];var L=false;for(var U=0;U<ah._oldrecords.length;U++){if(ah._oldrecords[U]._koindex===I._koindex){L=true;break}}if(!L){ah._changedrecords.push({index:Z,oldrecord:null,record:I,position:(Z!=0?\"last\":\"first\")})}}}else{if(aa==\"remove\"){var M=ah._oldrecords.length;for(var Z=0;Z<M;Z++){var P=ah._oldrecords[Z];if(!ah.records[Z]){ah._changedrecords.push({index:Z,oldrecord:P,record:null})}else{if(ah.records[Z]._koindex!=P._koindex){ah._changedrecords.push({index:Z,oldrecord:P,record:null})}}}}}}else{if(!i.isArray(W.localdata)){this.records=new Array();var V=0;var T=new Array();i.each(W.localdata,function(al){var ak=ah.getid(W.id,this,al);if(ad==0){if(!(typeof this===\"string\"||this instanceof String)){for(var an in this){V++;var ao=i.type(this[an]);T.push({name:an,type:ao})}ad=V;W.datafields=T;W.generatedfields=T}}if(ad>0){var aj=this;var am=H(aj,ad);am.uid=ak;ah.records[ah.records.length]=am}else{this.uid=ak;ah.records[ah.records.length]=this}})}else{if(ad==0){var V=0;var T=new Array();i.each(W.localdata,function(al,an){var aj=new Object(this);if(typeof an===\"string\"){ah.records=W.localdata;return false}else{var ak=ah.getid(W.id,aj,al);if(typeof(ak)===\"object\"){ak=al}aj.uid=ak;if(al==0){for(var ao in this){V++;var ap=i.type(this[ao]);T.push({name:ao,type:ap})}ad=V;W.datafields=T;W.generatedfields=T}if(ad>0){var am=H(aj,ad);am.uid=ak;ah.records[ah.records.length]=am}else{ah.records[ah.records.length]=aj}}})}else{i.each(W.localdata,function(al){var aj=this;var am=H(aj,ad);var ak=ah.getid(W.id,am,al);if(typeof(ak)===\"object\"){ak=al}var aj=new Object(am);aj.uid=ak;ah.records[ah.records.length]=aj})}}}this.originaldata=W.localdata;this.cachedrecords=this.records;this.addForeignValues(W);if(K.uniqueDataFields){var S=this.getUniqueRecords(this.records,K.uniqueDataFields);this.records=S;this.cachedrecords=S}if(K.beforeLoadComplete){var ae=K.beforeLoadComplete(ah.records,this.originaldata);if(ae!=undefined){ah.records=ae;ah.cachedrecords=ae}}if(K.autoSort&&K.autoSortField){var O=Object.prototype.toString;Object.prototype.toString=(typeof field==\"function\")?field:function(){return this[K.autoSortField]};ah.records.sort(function(ak,aj){if(ak===undefined){ak=null}if(aj===undefined){aj=null}if(ak===null&&aj===null){return 0}if(ak===null&&aj!==null){return 1}if(ak!==null&&aj===null){return -1}ak=ak.toString();aj=aj.toString();if(ak===null&&aj===null){return 0}if(ak===null&&aj!==null){return 1}if(ak!==null&&aj===null){return -1}if(i.jqx.dataFormat.isNumber(ak)&&i.jqx.dataFormat.isNumber(aj)){if(ak<aj){return -1}if(ak>aj){return 1}return 0}else{if(i.jqx.dataFormat.isDate(ak)&&i.jqx.dataFormat.isDate(aj)){if(ak<aj){return -1}if(ak>aj){return 1}return 0}else{if(!i.jqx.dataFormat.isNumber(ak)&&!i.jqx.dataFormat.isNumber(aj)){ak=String(ak).toLowerCase();aj=String(aj).toLowerCase()}}}try{if(ak<aj){return -1}if(ak>aj){return 1}}catch(al){var am=al}return 0});Object.prototype.toString=O}ah.loadedData=W.localdata;ah.buildHierarchy();if(i.isFunction(K.loadComplete)){K.loadComplete(W.localdata,ah.records)}break;case\"json\":case\"jsonp\":case\"xml\":case\"xhtml\":case\"script\":case\"text\":case\"ics\":if(W.localdata!=null&&!W.url){if(i.isFunction(W.beforeprocessing)){W.beforeprocessing(W.localdata)}if(W.datatype===\"xml\"){ah.loadxml(W.localdata,W.localdata,W)}else{if(Q===\"text\"){ah.loadtext(W.localdata,W)}else{if(Q===\"ics\"){ah.loadics(W.localdata,W)}else{ah.loadjson(W.localdata,W.localdata,W)}}}ah.addForeignValues(W);if(K.uniqueDataFields){var S=ah.getUniqueRecords(ah.records,K.uniqueDataFields);ah.records=S;ah.cachedrecords=S}if(K.beforeLoadComplete){var ae=K.beforeLoadComplete(ah.records,this.originaldata);if(ae!=undefined){ah.records=ae;ah.cachedrecords=ae}}ah.loadedData=W.localdata;ah.buildHierarchy.call(ah);if(i.isFunction(K.loadComplete)){K.loadComplete(W.localdata,ah.records)}ah.callBindingUpdate(aa);return}var af=K.data!=undefined?K.data:{};if(W.processdata){W.processdata(af)}if(i.isFunction(K.processData)){K.processData(af)}if(i.isFunction(K.formatData)){var e=K.formatData(af);if(e!=undefined){af=e}}var ab=\"application/x-www-form-urlencoded\";if(K.contentType){ab=K.contentType}var J=\"GET\";if(W.type){J=W.type}if(K.type){J=K.type}var X=Q;if(Q==\"ics\"){X=\"text\"}if(W.url&&W.url.length>0){if(i.isFunction(K.loadServerData)){ah._requestData(af,W,K)}else{this.xhr=i.jqx.data.ajax({dataType:X,cache:this.cache,type:J,url:W.url,async:N,timeout:W.timeout,contentType:ab,data:af,success:function(am,aj,ap){if(i.isFunction(W.beforeprocessing)){var ao=W.beforeprocessing(am,aj,ap);if(ao!=undefined){am=ao}}if(i.isFunction(K.downloadComplete)){var ao=K.downloadComplete(am,aj,ap);if(ao!=undefined){am=ao}}if(am==null){ah.records=new Array();ah.cachedrecords=new Array();ah.originaldata=new Array();ah.callDownloadComplete();if(i.isFunction(K.loadComplete)){K.loadComplete(new Array())}return}var ak=am;if(am.records){ak=am.records}if(am.totalrecords!=undefined){W.totalrecords=am.totalrecords}else{if(am.totalRecords!=undefined){W.totalrecords=am.totalRecords}}if(W.datatype===\"xml\"){ah.loadxml(null,ak,W)}else{if(Q===\"text\"){ah.loadtext(ak,W)}else{if(Q===\"ics\"){ah.loadics(ak,W)}else{ah.loadjson(null,ak,W)}}}ah.addForeignValues(W);if(K.uniqueDataFields){var al=ah.getUniqueRecords(ah.records,K.uniqueDataFields);ah.records=al;ah.cachedrecords=al}if(K.beforeLoadComplete){var an=K.beforeLoadComplete(ah.records,am);if(an!=undefined){ah.records=an;ah.cachedrecords=an}}ah.loadedData=am;ah.buildHierarchy.call(ah);ah.callDownloadComplete();if(i.isFunction(K.loadComplete)){K.loadComplete(am,aj,ap,ah.records)}},error:function(al,aj,ak){if(i.isFunction(W.loaderror)){W.loaderror(al,aj,ak)}if(i.isFunction(K.loadError)){K.loadError(al,aj,ak)}al=null;ah.callDownloadComplete()},beforeSend:function(ak,aj){if(i.isFunction(K.beforeSend)){K.beforeSend(ak,aj)}if(i.isFunction(W.beforesend)){W.beforesend(ak,aj)}}})}}else{ah.buildHierarchy(new Array());ah.callDownloadComplete();if(i.isFunction(K.loadComplete)){if(!ai){var ai={}}K.loadComplete(ai)}}break}this.callBindingUpdate(aa)},buildHierarchy:function(K){var e=this._source;var P=new Array();if(!e.datafields){return}if(e.hierarchy&&!e.hierarchy.reservedNames){e.hierarchy.reservedNames={leaf:\"leaf\",parent:\"parent\",expanded:\"expanded\",checked:\"checked\",selected:\"selected\",level:\"level\",icon:\"icon\",data:\"data\"}}else{if(e.hierarchy){var O=e.hierarchy.reservedNames;if(!O.leaf){O.leaf=\"leaf\"}if(!O.parent){O.parent=\"parent\"}if(!O.expanded){O.expanded=\"expanded\"}if(!O.checked){O.checked=\"checked\"}if(!O.selected){O.selected=\"selected\"}if(!O.level){O.level=\"level\"}if(!O.data){O.data=\"data\"}}}if(!e.hierarchy){return}var N=this;var O=e.hierarchy.reservedNames;if(e.hierarchy.root){if(e.dataType==\"xml\"){var P=this.getRecordsHierarchy(\"uid\",\"parentuid\",\"records\",null,K);this.hierarchy=P;return P}else{this.hierarchy=this.records;var R=e.hierarchy.root;for(var L=0;L<this.records.length;L++){var M=this.records[L];if(!M){continue}var H=function(S){if(e.hierarchy.record){S.records=S[R][e.hierarchy.record]}else{var U=R.split(N.mapChar);var T=null;if(U.length>1){var W=S;for(var V=0;V<U.length;V++){if(W!=undefined){W=W[U[V]]}}T=W}else{T=S[R]}S.records=T}if(S.records==null||(S.records&&S.records.length==0)){S[O.leaf]=true}};H(M);M[O.level]=0;var I=this.getid(e.id,M,L);M.uid=I;M[O.parent]=null;M[O.data]=M;if(M[O.expanded]===undefined){M[O.expanded]=false}var Q=function(W,U){if(!U){W.records=new Array();return}for(var V=0;V<U.length;V++){var S=U[V];if(!S){continue}H(S);S[O.level]=W[O.level]+1;S[O.parent]=W;S[O.data]=S;var T=N.getid(e.id,S,V);if(T==V&&e.id==null){S.uid=W.uid+\"_\"+T}else{S.uid=T}if(S[O.expanded]===undefined){S[O.expanded]=false}Q(S,S.records)}};Q(M,M.records)}}return this.hierarchy}if(e.hierarchy.keyDataField&&e.hierarchy.parentDataField){var P=this.getRecordsHierarchy(e.hierarchy.keyDataField.name,e.hierarchy.parentDataField.name,\"records\",null,K);this.hierarchy=P;return P}if(e.hierarchy.groupingDataFields){var J=new Array();for(var L=0;L<e.hierarchy.groupingDataFields.length;L++){J.push(e.hierarchy.groupingDataFields[L].name)}var P=this.getGroupedRecords(J,\"records\",\"label\",null,\"data\",null,\"parent\",K);this.hierarchy=P;return P}},addRecord:function(H,e,M,I){var J=this;var N=function(){return{leaf:\"leaf\",parent:\"parent\",expanded:\"expanded\",checked:\"checked\",selected:\"selected\",level:\"level\",icon:\"icon\",data:\"data\"}};if(H!=undefined){if(M!=undefined){if(this.hierarchy.length>0){var K=function(O){if(O){for(var P=0;P<O.length;P++){var Q=O[P];if(Q.uid==M){var R=(J._source&&J._source.hierarchy)?J._source.hierarchy.reservedNames:null;if(R==null){R=N()}H[R.parent]=Q;H[R.level]=Q[R.level]+1;if(!Q.records){Q.records=new Array();Q[R.leaf]=false}else{Q[R.leaf]=false}if(e==\"last\"){Q.records.push(H)}else{if(typeof e===\"number\"&&isFinite(e)){Q.records.splice(e,0,H)}else{Q.records.splice(0,0,H)}}return true}if(Q.records){K(Q.records)}}}};K(this.hierarchy)}}else{if(this.hierarchy&&this.hierarchy.length>=0&&(this._source.hierarchy||I)){var L=(J._source&&J._source.hierarchy)?J._source.hierarchy.reservedNames:null;if(L==null){L=N()}H[L.level]=0;if(e==\"last\"){this.hierarchy.push(H)}else{if(typeof e===\"number\"&&isFinite(e)){this.hierarchy.splice(e,0,H)}else{this.hierarchy.splice(0,0,H)}}}else{if(e==\"last\"){this.records.push(H)}else{if(typeof e===\"number\"&&isFinite(e)){this.records.splice(e,0,H)}else{this.records.splice(0,0,H)}}}return true}}return false},deleteRecord:function(H){var J=this;if(this.hierarchy.length>0){var K=function(L){if(L){for(var O=0;O<L.length;O++){var P=L[O];if(P.uid==H){L.splice(O,1);if(J.recordids[H]){delete J.recordids[H]}var N=function(T){for(var Q=0;Q<T.length;Q++){var S=T[Q].uid;for(var R=0;R<J.records.length;R++){var U=J.records[R];if(U.uid==S){J.records.splice(R,1);break}}if(T[Q].records){N(T[Q].records)}}};if(P.records){N(P.records)}for(var M=0;M<J.records.length;M++){var P=J.records[M];if(P.uid==H){J.records.splice(M,1);break}}return true}if(P.records){K(P.records)}}}};K(this.hierarchy)}else{for(var e=0;e<this.records.length;e++){var I=this.records[e];if(I.uid==H){this.records.splice(e,1);return true}}}return false},addForeignValues:function(H){var Q=this;var V=H.datafields?H.datafields.length:0;for(var N=0;N<V;N++){var L=H.datafields[N];if(L!=undefined){if(L.values!=undefined){if(L.value==undefined){L.value=L.name}if(L.values.value==undefined){L.values.value=L.value}var T=new Array();var K,M;if(Q.pageable&&Q.virtualmode){K=Q.pagenum*Q.pagesize;M=K+Q.pagesize;if(M>Q.totalrecords){M=Q.totalrecords}}else{if(Q.virtualmode){K=H.recordstartindex;M=H.recordendindex;if(M>Q.totalrecords){M=Q.totalrecords}}else{K=0;M=Q.records.length}}for(var O=K;O<M;O++){var P=Q.records[O];var I=L.name;var U=P[L.value];if(T[U]!=undefined){P[I]=T[U]}else{for(var J=0;J<L.values.source.length;J++){var S=L.values.source[J];var e=S[L.values.value];if(e==undefined){e=S.uid}if(e==U){var R=S[L.values.name];P[I]=R;T[U]=R;break}}}}}else{if(L.value!=undefined){for(var O=0;O<Q.records.length;O++){var P=Q.records[O];P[L.name]=P[L.value]}}}}}},abort:function(){if(this.xhr&&this.xhr.readyState!=4){this.xhr.abort();me.callDownloadComplete()}},_requestData:function(H,J,e){var I=this;var K=function(P){if(P.totalrecords){J.totalrecords=P.totalrecords;I.totalrecords=P.totalrecords}if(P.records){I.records=P.records;I.cachedrecords=P.records}I.addForeignValues(J);if(e.uniqueDataFields){var N=I.getUniqueRecords(I.records,e.uniqueDataFields);I.records=N;I.cachedrecords=N}if(e.beforeLoadComplete){var O=e.beforeLoadComplete(I.records,data);if(O!=undefined){I.records=O;I.cachedrecords=O}}for(var M=0;M<I.records.length;M++){var L=I.records[M];if(undefined==L){continue}if(undefined==L.uid){L.uid=I.getid(J.id,L,M)}}I.buildHierarchy.call(I);if(i.isFunction(e.loadComplete)){e.loadComplete(P)}I.callDownloadComplete()};e.loadServerData(H,J,K)},getUniqueRecords:function(I,L){if(I&&L){var e=I.length;var Q=L.length;var N=new Array();var O=new Array();for(var P=0;P<e;P++){var M=I[P];var J=\"\";if(M==undefined){continue}for(var K=0;K<Q;K++){var H=L[K];J+=M[H]+\"_\"}if(!O[J]){N[N.length]=M}O[J]=true}}return N},getAggregatedData:function(S,P,M,H){var L=M;if(!L){L=this.records}var Q={};var K=new Array();var J=L.length;if(J==0){return}if(J==undefined){return}for(var O=0;O<J;O++){var R=L[O];for(var N=0;N<S.length;N++){var I=S[N];var U=R[I.name];if(I.aggregates){Q[I.name]=Q[I.name]||{};K[I.name]=K[I.name]||0;K[I.name]++;var e=function(W){for(obj in W){var X=Q[I.name][obj];if(X==null){Q[I.name][obj]=0;X=0}if(i.isFunction(W[obj])){X=W[obj](X,U,I.name,R,H)}Q[I.name][obj]=X}};var T=parseFloat(U);if(isNaN(T)){T=false}else{T=true}if(T){U=parseFloat(U)}if(typeof U===\"number\"&&isFinite(U)){i.each(I.aggregates,function(){var W=Q[I.name][this];if(W==null){W=0;if(this==\"min\"){W=9999999999999}if(this==\"max\"){W=-9999999999999}}if(this==\"sum\"||this==\"avg\"||this==\"stdev\"||this==\"stdevp\"||this==\"var\"||this==\"varp\"){W+=parseFloat(U)}else{if(this==\"product\"){if(O==0){W=parseFloat(U)}else{W*=parseFloat(U)}}else{if(this==\"min\"){W=Math.min(W,parseFloat(U))}else{if(this==\"max\"){W=Math.max(W,parseFloat(U))}else{if(this==\"count\"){W++}else{if(typeof(this)==\"object\"){e(this);return}}}}}}Q[I.name][this]=W})}else{i.each(I.aggregates,function(){if(this==\"min\"||this==\"max\"||this==\"count\"||this==\"product\"||this==\"sum\"||this==\"avg\"||this==\"stdev\"||this==\"stdevp\"||this==\"var\"||this==\"varp\"){if(U===null){return true}var W=Q[I.name][this];if(W==null){W=0}Q[I.name][this]=W;return true}if(typeof(this)==\"object\"){e(this)}})}}}}for(var N=0;N<S.length;N++){var I=S[N];if(!Q[I.name]){Q[I.name]={};i.each(I.aggregates,function(W){Q[I.name][this]=0})}if(Q[I.name][\"avg\"]!=undefined){var U=Q[I.name][\"avg\"];var V=K[I.name];if(V===0||V==undefined){Q[I.name][\"avg\"]=0}else{Q[I.name][\"avg\"]=U/V}}else{if(Q[I.name][\"count\"]!=undefined){Q[I.name][\"count\"]=J}}if(Q[I.name][\"stdev\"]||Q[I.name][\"stdevp\"]||Q[I.name][\"var\"]||Q[I.name][\"varp\"]){i.each(I.aggregates,function(ac){if(this==\"stdev\"||this==\"var\"||this==\"varp\"||this==\"stdevp\"){var ad=Q[I.name][this];var ab=J;var W=(ad/J);var Y=0;for(var Z=0;Z<J;Z++){var aa=L[Z];var ae=aa[I.name];Y+=(ae-W)*(ae-W)}var X=(this==\"stdevp\"||this==\"varp\")?ab:ab-1;if(X==0){X=1}if(this==\"var\"||this==\"varp\"){Q[I.name][this]=Y/X}else{if(this==\"stdevp\"||this==\"stdev\"){Q[I.name][this]=Math.sqrt(Y/X)}}}})}if(I.formatStrings){i.each(I.aggregates,function(X){var W=I.formatStrings[X];if(W){if(this==\"min\"||this==\"max\"||this==\"count\"||this==\"product\"||this==\"sum\"||this==\"avg\"||this==\"stdev\"||this==\"stdevp\"||this==\"var\"||this==\"varp\"){var Y=Q[I.name][this];Q[I.name][this]=i.jqx.dataFormat.formatnumber(Y,W,P)}else{if(typeof this==\"object\"){for(obj in this){var Y=Q[I.name][obj];Q[I.name][obj]=i.jqx.dataFormat.formatnumber(Y,W,P)}}}}})}}return Q},bindDownloadComplete:function(H,e){this._downloadComplete[this._downloadComplete.length]={id:H,func:e}},unbindDownloadComplete:function(H){for(var e=0;e<this._downloadComplete.length;e++){if(this._downloadComplete[e].id==H){this._downloadComplete[e].func=null;this._downloadComplete.splice(e,1);break}}},callDownloadComplete:function(){for(var e=0;e<this._downloadComplete.length;e++){var H=this._downloadComplete[e];if(H.func!=null){H.func()}}},setSource:function(e){this._source=e},generatekey:function(){var e=function(){return(((1+Math.random())*65536)|0).toString(16).substring(1)};return(e()+e()+\"-\"+e()+\"-\"+e()+\"-\"+e()+\"-\"+e()+e()+e())},getGroupedRecords:function(aj,am,W,ae,ak,ab,ad,an,K){var ag=0;var aa=this;if(!K){K=0}var I=new Array();for(var N=0;N<aj.length;N++){I[N]=aa.generatekey()}if(!am){am=\"items\"}if(!W){W=\"group\"}if(!ak){ak=\"record\"}if(!ad){ad=\"parentItem\"}if(undefined===ab){ab=\"value\"}var S=new Array();var L=0;var J=new Array();var R=aj.length;var al=new Array();if(!an){var an=this.records}var P=an.length;var af=function(ao){var ap=ao;if(ae){i.each(ae,function(){if(this.name&&this.map){ap[this.map]=ap[this.name]}})}return ap};for(var V=0;V<P;V++){var ai=af(an[V]);id=ai[aa.uniqueId];var H=new Array();var X=0;for(N=0;N<R;N++){var Q=aj[N];var ac=ai[Q];if(null==ac){continue}H[X++]={value:ac,hash:I[N]}}if(H.length!=R){break}var Y=null;var T=\"\";var e=-1;for(var Z=0;Z<H.length;Z++){e++;var ah=H[Z].value;var M=H[Z].hash;T=T+\"_\"+M+\"_\"+ah;if(J[T]!=undefined&&J[T]!=null){Y=J[T];continue}if(Y==null){Y={level:0};Y[ad]=null;Y[W]=ah;Y[ak]=ai;if(ai.expanded!==undefined){Y.expanded=ai.expanded}else{Y.expanded=false}if(ab){Y[ab]=ai[ab]}Y[am]=new Array();var O=S.length+K;if(!this._source.id||typeof ai.uid===\"number\"||isFinite(ai.uid)){O=\"Row\"+O}Y.uid=O;S[L++]=Y}else{var U={level:Y.level+1};U[ad]=Y;U[W]=ah;U[am]=new Array();U[ak]=ai;if(ai.expanded!==undefined){U.expanded=ai.expanded}else{U.expanded=false}if(ab){U[ab]=ai[ab]}U.uid=Y.uid+\"_\"+Y[am].length;Y[am][Y[am].length]=U;Y=U}J[T]=Y}if(ai){ai.leaf=true}if(Y!=null){if(this._source.id==null){if(undefined==ai.uid){ai.uid=Y.uid+\"_\"+Y[am].length}else{if(ai.uid.toString().indexOf(Y.uid)==-1){ai.uid=Y.uid+\"_\"+ai.uid}}}ai[ad]=Y;ai.level=Y.level+1;Y[am][Y[am].length]=ai}else{if(undefined==ai.uid){ai.uid=this.generatekey()}}}return S},getRecordsHierarchy:function(L,J,aa,U,H){var e=new Array();var I=this.records;if(H){I=H}if(this.records.length==0){return null}var Y=aa!=null?aa:\"items\";var R=[];var ab=I;var O=ab.length;var P=(this._source&&this._source.hierarchy)?this._source.hierarchy.reservedNames:null;var W=function(ac){var ad=ac;if(U){i.each(U,function(){if(this.name&&this.map){ad[this.map]=ad[this.name]}})}return ad};for(var X=0;X<O;X++){var Z=i.extend({},ab[X]);var T=Z[J];var S=Z[L];R[S]={parentid:T,item:Z}}for(var X=0;X<O;X++){var Z=i.extend({},ab[X]);var T=Z[J];var S=Z[L];if(R[T]!=undefined){var Z={parentid:T,item:R[S].item};var Q=R[T].item;if(!Q[Y]){Q[Y]=[]}var M=Q[Y].length;var K=Z.item;if(!P){if(K.parent==undefined){K.parent=Q}}else{if(K[P.parent]==undefined){K[P.parent]=Q}}var N=W(K);Q[Y][M]=N;R[T].item=Q;R[S]=Z}else{var K=R[S].item;if(!P){if(K.parent==undefined){K.parent=null}}else{if(K[P.parent]==undefined){K[P.parent]=null}}var N=W(K);if(!P){N.level=0}else{N[P.level]=0}e[e.length]=N}}if(e.length!=0){var V=function(af,ac){for(var ad=0;ad<ac.length;ad++){if(!P){ac[ad].level=af}else{ac[ad][P.level]=af}var ae=ac[ad][Y];if(ae){if(ae.length>0){V(af+1,ae)}else{if(!P){ac[ad].leaf=true}else{ac[ad][P.leaf]=true}}}else{if(!P){ac[ad].leaf=true}else{ac[ad][P.leaf]=true}}}};V(0,e)}return e},bindBindingUpdate:function(H,e){this._bindingUpdate[this._bindingUpdate.length]={id:H,func:e}},unbindBindingUpdate:function(H){for(var e=0;e<this._bindingUpdate.length;e++){if(this._bindingUpdate[e].id==H){this._bindingUpdate[e].func=null;this._bindingUpdate.splice(e,1);break}}},callBindingUpdate:function(e){for(var I=0;I<this._bindingUpdate.length;I++){var H=this._bindingUpdate[I];if(H.func!=null){H.func(e)}}},getid:function(N,H,K){if(N!=null&&N.name!=undefined){if(N.name){var e=i(H).attr(N.name);if(e!=null&&e.toString().length>0){return e}else{if(N.map){try{var e=i(H).attr(N.map);if(e!=null&&e.toString().length>0){return e}else{if(i(N.map,H).length>0){return i(N.map,H).text()}else{if(i(N.name,H).length>0){return i(N.name,H).text()}}}}catch(J){return K}}}return}}if(i(N,H).length>0){return i(N,H).text()}if(N){if(N.toString().length>0){var e=i(H).attr(N);if(e!=null&&e.toString().length>0){return i.trim(e).split(\" \").join(\"\").replace(/([ #;?%&,.+*~\\':\"!^$[\\]()=>|\\/@])/g,\"\")}else{var I=N.split(this.mapChar);if(I.length>1){var M=H;for(var L=0;L<I.length;L++){if(M!=undefined){M=M[I[L]]}}if(M!=undefined){return M}}else{if(H[N]!=undefined){return H[N]}}}}}return K},loadjson:function(ae,af,R){if(typeof(ae)==\"string\"){ae=i.parseJSON(ae)}if(R.root==undefined){R.root=\"\"}if(R.record==undefined){R.record=\"\"}var ae=ae||af;if(!ae){ae=[]}var ad=this;if(R.root!=\"\"){var K=R.root.split(ad.mapChar);if(K.length>1){var aa=ae;for(var Q=0;Q<K.length;Q++){if(aa!=undefined){aa=aa[K[Q]]}}ae=aa}else{if(ae[R.root]!==undefined){ae=ae[R.root]}else{if(ae[0]&&ae[0][R.root]!==undefined){ae=ae[0][R.root]}else{i.each(ae,function(ah){var ag=this;if(this==R.root){ae=this;return false}else{if(this[R.root]!=undefined){ae=this[R.root]}}})}}if(!ae){var K=R.root.split(ad.mapChar);if(K.length>0){var aa=ae;for(var Q=0;Q<K.length;Q++){if(aa!=undefined){aa=aa[K[Q]]}}ae=aa}}}}else{if(!ae.length){for(obj in ae){if(i.isArray(ae[obj])){ae=ae[obj];break}}}}if(ae!=null&&ae.length==undefined){ae=i.makeArray(ae)}if(ae==null||ae==undefined||ae==\"undefined\"||ae.length==undefined){throw new Error(\"jqxDataAdapter: JSON Parse error! Invalid JSON. Please, check your JSON or your jqxDataAdapter initialization!\");return}if(ae.length==0){this.totalrecords=0;return}var J=ae.length;this.totalrecords=this.virtualmode?(R.totalrecords||J):J;this.records=new Array();this.originaldata=new Array();var W=this.records;var T=!this.pageable?R.recordstartindex:this.pagesize*this.pagenum;this.recordids=new Array();if(R.loadallrecords){T=0;J=this.totalrecords}var P=0;if(this.virtualmode){T=!this.pageable?R.recordstartindex:this.pagesize*this.pagenum;P=T;T=0;J=this.totalrecords}var Y=R.datafields?R.datafields.length:0;if(Y==0){var e=ae[0];var ab=new Array();for(obj in e){var H=obj;ab[ab.length]={name:H}}R.datafields=ab;R.generatedfields=R.datafields;Y=ab.length}var M=T;for(var V=T;V<J;V++){var I=ae[V];if(I==undefined){break}if(R.record&&R.record!=\"\"){I=I[R.record];if(I==undefined){continue}}var ac=this.getid(R.id,I,V);if(typeof(ac)===\"object\"){ac=V}if(!this.recordids[ac]){this.recordids[ac]=I;var L={};for(var U=0;U<Y;U++){var N=R.datafields[U];var S=\"\";if(undefined==N||N==null){continue}if(N.map){if(i.isFunction(N.map)){S=N.map(I)}else{var K=N.map.split(ad.mapChar);if(K.length>0){var Z=I;for(var Q=0;Q<K.length;Q++){if(Z!=undefined){Z=Z[K[Q]]}}S=Z}else{S=I[N.map]}}if(S!=undefined&&S!=null){S=this.getvaluebytype(S,N)}else{if(S==undefined&&S!=null){S=\"\"}}}if(S==\"\"&&!N.map){S=I[N.name];if(S==undefined&&S!=null){S=\"\"}if(N.value!=undefined){if(S!=undefined){var X=S[N.value];if(X!=undefined){S=X}}}}S=this.getvaluebytype(S,N);if(N.displayname!=undefined){L[N.displayname]=S}else{L[N.name]=S}if(N.type===\"array\"){var O=function(aj){if(!aj){return}for(var ap=0;ap<aj.length;ap++){var am=aj[ap];if(!am){continue}for(var an=0;an<Y;an++){var ai=R.datafields[an];var ao=\"\";if(undefined==ai||ai==null){continue}if(ai.map){if(i.isFunction(ai.map)){ao=ai.map(am)}else{var ag=ai.map.split(ad.mapChar);if(ag.length>0){var al=am;for(var ah=0;ah<ag.length;ah++){if(al!=undefined){al=al[ag[ah]]}}ao=al}else{ao=am[ai.map]}}if(ao!=undefined&&ao!=null){ao=this.getvaluebytype(ao,ai)}else{if(ao==undefined&&ao!=null){ao=\"\"}}}if(ao==\"\"&&!ai.map){ao=am[ai.name];if(ao==undefined&&ao!=null){ao=\"\"}if(ai.value!=undefined){if(ao!=undefined){var ak=ao[ai.value];if(ak!=undefined){ao=ak}}}}ao=this.getvaluebytype(ao,ai);if(ai.displayname!=undefined){am[ai.displayname]=ao}else{am[ai.name]=ao}if(ai.type===\"array\"){O.call(this,ao)}}}};O.call(this,S)}}if(R.recordendindex<=0||T<R.recordendindex){W[P+M]=new Object(L);W[P+M].uid=ac;this.originaldata[P+M]=new Object(W[V]);M++}}}this.records=W;this.cachedrecords=this.records},loadxml:function(K,ai,U){if(typeof(K)==\"string\"){K=ai=i(i.parseXML(K));K=null}if(U.root==undefined){U.root=\"\"}if(U.record==undefined){U.record=\"\"}var K;if(i.jqx.browser.msie&&ai){if(ai.xml!=undefined){K=i(U.root+\" \"+U.record,i.parseXML(ai.xml))}else{K=K||i(U.root+\" \"+U.record,ai)}}else{K=K||i(U.root+\" \"+U.record,ai)}if(!K){K=[]}var J=K.length;if(K.length==0){return}this.totalrecords=this.virtualmode?(U.totalrecords||J):J;this.records=new Array();this.originaldata=new Array();var aa=this.records;var X=!this.pageable?U.recordstartindex:this.pagesize*this.pagenum;this.recordids=new Array();if(U.loadallrecords){X=0;J=this.totalrecords}var S=0;if(this.virtualmode){X=!this.pageable?U.recordstartindex:this.pagesize*this.pagenum;S=X;X=0;J=this.totalrecords}var ac=U.datafields?U.datafields.length:0;if(ac==0){var e=K[0];var af=new Array();for(obj in e){var H=obj;af[af.length]={name:H}}U.datafields=af;U.generatedfields=U.datafields;ac=af.length}var T=X;var ae=false;for(var Z=X;Z<J;Z++){var I=K[Z];if(I==undefined){break}var ah=this.getid(U.id,I,Z);if(!this.recordids[ah]){this.recordids[ah]=I;var L={};var P=false;if(U.hierarchy&&U.hierarchy.root){P=true}for(var Y=0;Y<ac;Y++){var Q=U.datafields[Y];var W=\"\";if(undefined==Q||Q==null){continue}if(Q.map){if(i.isFunction(Q.map)){W=Q.map(I)}else{var M=Q.map.indexOf(\"[\");if(M<0){W=i(Q.map,I);if(W.length==1){W=W.text()}else{ae=true;var ag=new Array();for(var ab=0;ab<W.length;ab++){ag.push(i(W[ab]).text())}W=ag;if(P&&ag.length>0){W=ag[0]}}}else{var ad=Q.map.substring(0,M-1);var O=Q.map.indexOf(\"]\");var R=Q.map.substring(M+1,O);W=i(ad,I).attr(R);if(W==undefined){W=i(I).attr(R)}if(W==undefined){W=\"\"}}if(W==\"\"){W=i(I).attr(Q.map);if(W==undefined){W=\"\"}}}}if(W==\"\"){W=i(Q.name,I);if(W.length==1){W=W.text()}else{var ag=new Array();for(var ab=0;ab<W.length;ab++){ag.push(i(W[ab]).text())}W=ag;if(P&&ag.length>0){W=ag[0]}}if(W==\"\"){W=i(I).attr(Q.name);if(W==undefined){W=\"\"}}if(W==\"\"){if(I.nodeName&&I.nodeName==Q.name&&I.firstChild){W=i(I.firstChild).text()}}}var V=W;W=this.getvaluebytype(W,Q);if(Q.displayname!=undefined){L[Q.displayname]=W}else{L[Q.name]=W}}if(U.recordendindex<=0||X<U.recordendindex){aa[S+T]=i.extend({},L);aa[S+T].uid=ah;this.originaldata[S+T]=i.extend({},aa[Z]);T++}}}if(U.hierarchy&&U.hierarchy.root){for(var Z=X;Z<J;Z++){var I=K[Z];var N=aa[Z];if(i(I).parent().length>0){var ah=this.getid(U.id,i(I).parents(U.hierarchy.record+\":first\"));N.parentuid=ah}else{N.parentuid=null}}}this.records=aa;this.cachedrecords=this.records},loadics:function(N,H){if(N==null){return}var S=H.rowDelimiter||this.rowDelimiter||\"\\n\";var R=N.split(S);var K=R.length;var Q=N.split(\"\\r\");if(K==1&&Q.length>1){R=Q;K=R.length}this.records=new Array();this.originaldata=new Array();var L=this.records;this.recordids=new Array();var I=0;var P=function(V){var T=/^(\\d{4})(\\d{2})(\\d{2})(T(\\d{2})(\\d{2})(\\d{2})Z)?$/;var U=T.exec(V);if(!U){throw new Error(\"Invalid UNTIL value: \"+V)}return new Date(Date.UTC(U[1],U[2]-1,U[3],U[5]||0,U[6]||0,U[7]||0))};for(var M=0;M<K;M++){var O=R[M];if(O==\"BEGIN:VEVENT\"){var e={};continue}if(O.indexOf(\"SUMMARY\")>=0){e.SUMMARY=O.substring(O.indexOf(\"SUMMARY\")+8);continue}if(O.indexOf(\"LOCATION\")>=0){e.LOCATION=O.substring(O.indexOf(\"LOCATION\")+9);continue}if(O.indexOf(\"DESCRIPTION\")>=0){e.DESCRIPTION=O.substring(O.indexOf(\"DESCRIPTION\")+12);continue}if(O.indexOf(\"RRULE\")>=0){e.RRULE=O.substring(O.indexOf(\"RRULE\")+6);continue}if(O.indexOf(\"EXDATE\")>=0){var J=O.substring(O.indexOf(\"EXDATE\")+7);e.EXDATE=J;continue}if(O.indexOf(\"DTEND\")>=0){e.DTEND=P(O.substring(O.indexOf(\"DTEND\")+6));continue}if(O.indexOf(\"DTSTART\")>=0){e.DTSTART=P(O.substring(O.indexOf(\"DTSTART\")+8));continue}if(O.indexOf(\"UID\")>=0){e.uid=e.UID=O.substring(O.indexOf(\"UID\")+4);continue}if(O.indexOf(\"STATUS\")>=0){e.STATUS=O.substring(O.indexOf(\"STATUS\")+7);continue}if(O==\"END:VEVENT\"){L.push(e);continue}}this.records=L;this.cachedrecords=this.records},loadtext:function(Y,P){if(Y==null){return}var e=P.rowDelimiter||this.rowDelimiter||\"\\n\";var L=Y.split(e);var J=L.length;var X=Y.split(\"\\r\");if(J==1&&X.length>1){L=X;J=L.length}this.totalrecords=this.virtualmode?(P.totalrecords||J):J;this.records=new Array();this.originaldata=new Array();var U=this.records;var R=!this.pageable?P.recordstartindex:this.pagesize*this.pagenum;this.recordids=new Array();if(P.loadallrecords){R=0;J=this.totalrecords}var N=0;if(this.virtualmode){R=!this.pageable?P.recordstartindex:this.pagesize*this.pagenum;N=R;R=0;J=this.totalrecords}var V=P.datafields.length;var O=P.columnDelimiter||this.columnDelimiter;if(!O){O=(P.datatype===\"tab\"||P.datatype===\"tsv\")?\"\\t\":\",\"}for(var T=R;T<J;T++){var I=L[T];var W=null;if(!this.recordids[W]){if(P.id==null){W=T;this.recordids[W]=I}var K={};var H=L[T].split(O);for(var S=0;S<V;S++){if(S>=H.length){continue}var M=P.datafields[S];var Q=H[S];if(M.map&&i.isFunction(M.map)){Q=M.map(I)}if(M.type){Q=this.getvaluebytype(Q,M)}var Z=M.map||M.name||S.toString();K[Z]=Q;if(P.id!=null){if(P.id===M.name){W=Q;this.recordids[W]=I}}}if(W==null){W=T}U[N+T]=i.extend({},K);U[N+T].uid=W;this.originaldata[N+T]=i.extend({},U[T])}}this.records=U;this.cachedrecords=this.records},getvaluebytype:function(L,H){var J=L;if(L==null){return L}if(i.isArray(L)&&H.type!=\"array\"){for(var I=0;I<L.length;I++){L[I]=this.getvaluebytype(L[I],H)}return L}if(H.type==\"date\"){if(L==\"NaN\"){L=\"\"}else{var K=new Date(L);if(typeof L==\"string\"){if(H.format){var e=i.jqx.dataFormat.parsedate(L,H.format);if(e!=null){K=e}}}if(K.toString()==\"NaN\"||K.toString()==\"Invalid Date\"){if(i.jqx.dataFormat){L=i.jqx.dataFormat.tryparsedate(L)}else{L=K}}else{L=K}if(L==null){L=J}}}else{if(H.type==\"float\"||H.type==\"number\"||H.type==\"decimal\"){if(L==\"NaN\"){L=\"\"}else{var L=parseFloat(L);if(isNaN(L)){L=J}}}else{if(H.type==\"int\"||H.type==\"integer\"){var L=parseInt(L);if(isNaN(L)){L=J}}else{if(H.type==\"bool\"||H.type==\"boolean\"){if(L!=null){if(L.toLowerCase!=undefined){if(L.toLowerCase()==\"false\"){L=false}else{if(L.toLowerCase()==\"true\"){L=true}}}}if(L==1){L=true}else{if(L==0&&L!==\"\"){L=false}else{L=\"\"}}}}}}return L}};i.jqx.dataFormat={};i.extend(i.jqx.dataFormat,{regexTrim:/^\\s+|\\s+$/g,regexInfinity:/^[+-]?infinity$/i,regexHex:/^0x[a-f0-9]+$/i,regexParseFloat:/^[+-]?\\d*\\.?\\d*(e[+-]?\\d+)?$/,toString:Object.prototype.toString,isBoolean:function(e){return typeof e===\"boolean\"},isObject:function(e){return(e&&(typeof e===\"object\"||i.isFunction(e)))||false},isDate:function(e){return e instanceof Date},arrayIndexOf:function(J,I){if(J.indexOf){return J.indexOf(I)}for(var e=0,H=J.length;e<H;e++){if(J[e]===I){return e}}return -1},isString:function(e){return typeof e===\"string\"},isNumber:function(e){return typeof e===\"number\"&&isFinite(e)},isNull:function(e){return e===null},isUndefined:function(e){return typeof e===\"undefined\"},isValue:function(e){return(this.isObject(e)||this.isString(e)||this.isNumber(e)||this.isBoolean(e))},isEmpty:function(e){if(!this.isString(e)&&this.isValue(e)){return false}else{if(!this.isValue(e)){return true}}e=i.trim(e).replace(/\\&nbsp\\;/ig,\"\").replace(/\\&#160\\;/ig,\"\");return e===\"\"},startsWith:function(H,e){return H.indexOf(e)===0},endsWith:function(H,e){return H.substr(H.length-e.length)===e},trim:function(e){return(e+\"\").replace(this.regexTrim,\"\")},isArray:function(e){return this.toString.call(e)===\"[object Array]\"},defaultcalendar:function(){var e={\"/\":\"/\",\":\":\":\",firstDay:0,days:{names:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],namesAbbr:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],namesShort:[\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\"]},months:{names:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\",\"\"],namesAbbr:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\",\"\"]},AM:[\"AM\",\"am\",\"AM\"],PM:[\"PM\",\"pm\",\"PM\"],eras:[{name:\"A.D.\",start:null,offset:0}],twoDigitYearMax:2029,patterns:{d:\"M/d/yyyy\",D:\"dddd, MMMM dd, yyyy\",t:\"h:mm tt\",T:\"h:mm:ss tt\",f:\"dddd, MMMM dd, yyyy h:mm tt\",F:\"dddd, MMMM dd, yyyy h:mm:ss tt\",M:\"MMMM dd\",Y:\"yyyy MMMM\",S:\"yyyy\\u0027-\\u0027MM\\u0027-\\u0027dd\\u0027T\\u0027HH\\u0027:\\u0027mm\\u0027:\\u0027ss\",ISO:\"yyyy-MM-dd hh:mm:ss\",ISO2:\"yyyy-MM-dd HH:mm:ss\",d1:\"dd.MM.yyyy\",d2:\"dd-MM-yyyy\",d3:\"MM-dd-yyyy\",zone1:\"yyyy-MM-ddTHH:mm:ss-HH:mm\",zone2:\"yyyy-MM-ddTHH:mm:ss+HH:mm\",custom:\"yyyy-MM-ddTHH:mm:ss.fff\",custom2:\"yyyy-MM-dd HH:mm:ss.fff\"},percentsymbol:\"%\",currencysymbol:\"$\",currencysymbolposition:\"before\",decimalseparator:\".\",thousandsseparator:\",\"};return e},expandFormat:function(K,J){J=J||\"F\";var I,H=K.patterns,e=J.length;if(e===1){I=H[J];if(!I){throw\"Invalid date format string '\"+J+\"'.\"}J=I}else{if(e===2&&J.charAt(0)===\"%\"){J=J.charAt(1)}}return J},getEra:function(I,H){if(!H){return 0}if(typeof I===\"string\"){return 0}var L,K=I.getTime();for(var J=0,e=H.length;J<e;J++){L=H[J].start;if(L===null||K>=L){return J}}return 0},toUpper:function(e){return e.split(\"\\u00A0\").join(\" \").toUpperCase()},toUpperArray:function(e){var J=[];for(var I=0,H=e.length;I<H;I++){J[I]=this.toUpper(e[I])}return J},getEraYear:function(H,J,e,K){var I=H.getFullYear();if(!K&&J.eras){I-=J.eras[e].offset}return I},toUpper:function(e){if(e){return e.toUpperCase()}return\"\"},getDayIndex:function(K,J,H){var e,L=K.days,I=K._upperDays;if(!I){K._upperDays=I=[this.toUpperArray(L.names),this.toUpperArray(L.namesAbbr),this.toUpperArray(L.namesShort)]}J=J.toUpperCase();if(H){e=this.arrayIndexOf(I[1],J);if(e===-1){e=this.arrayIndexOf(I[2],J)}}else{e=this.arrayIndexOf(I[0],J)}return e},getMonthIndex:function(N,M,I){var e=N.months,H=N.monthsGenitive||N.months,K=N._upperMonths,L=N._upperMonthsGen;if(!K){N._upperMonths=K=[this.toUpperArray(e.names),this.toUpperArray(e.namesAbbr)];N._upperMonthsGen=L=[this.toUpperArray(H.names),this.toUpperArray(H.namesAbbr)]}M=this.toUpper(M);var J=this.arrayIndexOf(I?K[1]:K[0],M);if(J<0){J=this.arrayIndexOf(I?L[1]:L[0],M)}return J},appendPreOrPostMatch:function(J,e){var I=0,L=false;for(var K=0,H=J.length;K<H;K++){var M=J.charAt(K);switch(M){case\"'\":if(L){e.push(\"'\")}else{I++}L=false;break;case\"\\\\\":if(L){e.push(\"\\\\\")}L=!L;break;default:e.push(M);L=false;break}}return I},getTokenRegExp:function(){return/\\/|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|hh|h|HH|H|mm|m|ss|s|tt|t|fff|ff|f|zzz|zz|z|gg|g/g},formatlink:function(e,I){var H=\"\";if(I&&I.target){H=\"target=\"+I.target}if(H!=\"\"){return\"<a \"+H+' href=\"'+e+'\">'+e+\"</a>\"}return'<a href=\"'+e+'\">'+e+\"</a>\"},formatemail:function(e){return'<a href=\"mailto:'+e+'\">'+e+\"</a>\"},formatNumber:function(e,I,H){return this.formatnumber(e,I,H)},formatnumber:function(T,S,O){if(O==undefined||O==null||O==\"\"){O=this.defaultcalendar()}if(S===\"\"||S===null){return T}if(!this.isNumber(T)){T*=1}var P;if(S.length>1){P=parseInt(S.slice(1),10)}var V={};var Q=S.charAt(0).toUpperCase();V.thousandsSeparator=O.thousandsseparator;V.decimalSeparator=O.decimalseparator;switch(Q){case\"D\":case\"d\":case\"F\":case\"f\":V.decimalPlaces=P;break;case\"N\":case\"n\":V.decimalPlaces=0;break;case\"C\":case\"c\":V.decimalPlaces=P;if(O.currencysymbolposition==\"before\"){V.prefix=O.currencysymbol}else{V.suffix=O.currencysymbol}break;case\"P\":case\"p\":V.suffix=O.percentsymbol;V.decimalPlaces=P;break;default:throw\"Bad number format specifier: \"+Q}if(this.isNumber(T)){var K=(T<0);var I=T+\"\";var R=(V.decimalSeparator)?V.decimalSeparator:\".\";var e;if(this.isNumber(V.decimalPlaces)){var L=V.decimalPlaces;var N=Math.pow(10,L);I=(T*N).toFixed(0)/N+\"\";e=I.lastIndexOf(\".\");if(L>0){if(e<0){I+=R;e=I.length-1}else{if(R!==\".\"){I=I.replace(\".\",R)}}while((I.length-1-e)<L){I+=\"0\"}}}else{var I=T+\"\";e=I.lastIndexOf(\".\");if(e>0&&L==undefined){if(R!==\".\"){I=I.replace(\".\",R)}}}if(V.thousandsSeparator){var U=V.thousandsSeparator;e=I.lastIndexOf(R);e=(e>-1)?e:I.length;var J=I.substring(e);var H=-1;for(var M=e;M>0;M--){H++;if((H%3===0)&&(M!==e)&&(!K||(M>1))){J=U+J}J=I.charAt(M-1)+J}I=J}I=(V.prefix)?V.prefix+I:I;I=(V.suffix)?I+V.suffix:I;return I}else{return T}},tryparsedate:function(ai,aj){if(aj==undefined||aj==null){aj=this.defaultcalendar()}var O=this;if(ai==\"\"){return null}if(ai!=null&&!ai.substring){ai=ai.toString()}if(ai!=null&&ai.substring(0,6)==\"/Date(\"){var ar=/^\\/Date\\((-?\\d+)(\\+|-)?(\\d+)?\\)\\/$/;var ap=new Date(+ai.replace(/\\/Date\\((\\d+)\\)\\//,\"$1\"));if(ap==\"Invalid Date\"){var al=ai.match(/^\\/Date\\((\\d+)([-+]\\d\\d)(\\d\\d)\\)\\/$/);var ap=null;if(al){ap=new Date(1*al[1]+3600000*al[2]+60000*al[3])}}if(ap==null||ap==\"Invalid Date\"||isNaN(ap)){var P=ar.exec(ai);if(P){var R=new Date(parseInt(P[1]));if(P[2]){var X=parseInt(P[3]);if(P[2]===\"-\"){X=-X}var T=R.getUTCMinutes();R.setUTCMinutes(T-X)}if(!isNaN(R.valueOf())){return R}}}return ap}patterns=aj.patterns;for(prop in patterns){ap=O.parsedate(ai,patterns[prop],aj);if(ap){if(prop==\"ISO\"){var aa=O.parsedate(ai,patterns.ISO2,aj);if(aa){return aa}}return ap}}if(ai!=null){var aa=null;var L=[\":\",\"/\",\"-\"];var an=true;for(var N=0;N<L.length;N++){if(ai.indexOf(L[N])!=-1){an=false}}if(an){var at=new Number(ai);if(!isNaN(at)){return new Date(at)}}}if(i.type(ai)===\"string\"){var ae=O;ai=ae.trim(ai);var ak=[\":\",\"/\",\"-\",\" \",\",\"];var M=function(ax,av,aw){return aw.replace(new RegExp(ax,\"g\"),av)};ai=M(\", \",\",\",ai);var I=\"\";var W=ai;if(ai.indexOf(\":\")>=0){I=ai.substring(ai.indexOf(\":\")-2);I=ae.trim(I);W=ai.substring(0,ai.indexOf(\":\")-2)}else{if(ai.toUpperCase().indexOf(\"AM\")>=0){I=ai.substring(ai.toUpperCase().indexOf(\"AM\")-2);I=ae.trim(I);W=ai.substring(0,ai.toUpperCase().indexOf(\"AM\")-2)}else{if(ai.toUpperCase().indexOf(\"PM\")>=0){I=ai.substring(ai.toUpperCase().indexOf(\"PM\")-2);I=ae.trim(I);W=ai.substring(0,ai.toUpperCase().indexOf(\"PM\")-2)}}}var e=new Date();var ag=false;if(W){for(var ao=0;ao<ak.length;ao++){if(W.indexOf(ak[ao])>=0){L=W.split(ak[ao]);break}}var H=new Array();var U=new Array();var ac=new Array();var Q=null;var au=null;for(var ao=0;ao<L.length;ao++){var N=L[ao];var ab=ae.parsedate(N,\"d\",aj)||ae.parsedate(N,\"dd\",aj)||ae.parsedate(N,\"ddd\",aj)||ae.parsedate(N,\"dddd\",aj);if(ab){if(N.length<=2){Q=ao;H.push(ab.getDate());break}}}for(var ao=0;ao<L.length;ao++){var N=L[ao];var S=ae.parsedate(N,\"M\",aj)||ae.parsedate(N,\"MM\",aj)||ae.parsedate(N,\"MMM\",aj)||ae.parsedate(N,\"MMMM\",aj);if(S){if(Q!=undefined&&Q==ao){continue}U.push(S.getMonth());if(N.length>2){au=ao;break}}}for(var ao=0;ao<L.length;ao++){var N=L[ao];var ad=ae.parsedate(N,\"yyyy\",aj);if(ad){if(Q!=undefined&&Q==ao){continue}if(au!=undefined&&au==ao){continue}ac.push(ad.getFullYear())}}var am=new Array();for(var aq=0;aq<H.length;aq++){for(var al=0;al<U.length;al++){for(var ah=0;ah<ac.length;ah++){var R=new Date(ac[ah],U[al],H[aq]);if(ac[ah]<1970){R.setFullYear(ac[ah])}if(R.getTime()!=NaN){am.push(R)}}}}if(am.length>0){e=am[0];ag=true}}if(I){var af=I.indexOf(\":\")>=0?I.split(\":\"):I;var K=ae.parsedate(I,\"h:mm tt\",aj)||ae.parsedate(I,\"h:mm:ss tt\",aj)||ae.parsedate(I,\"HH:mm:ss.fff\",aj)||ae.parsedate(I,\"HH:mm:ss.ff\",aj)||ae.parsedate(I,\"HH:mm:ss.tttt\",aj)||ae.parsedate(I,\"HH:mm:ss\",aj)||ae.parsedate(I,\"HH:mm\",aj)||ae.parsedate(I,\"HH\",aj);var V=0,J=0,Y=0,Z=0;if(K&&K.getTime()!=NaN){V=K.getHours();J=K.getMinutes();Y=K.getSeconds();Z=K.getMilliseconds()}else{if(af.length==1){V=parseInt(af[0])}if(af.length==2){V=parseInt(af[0]);J=parseInt(af[1])}if(af.length==3){V=parseInt(af[0]);J=parseInt(af[1]);if(af[2].indexOf(\".\")>=0){Y=parseInt(af[2].toString().split(\".\")[0]);Z=parseInt(af[2].toString().split(\".\")[1])}else{Y=parseInt(af[2])}}if(af.length==4){V=parseInt(af[0]);J=parseInt(af[1]);Y=parseInt(af[2]);Z=parseInt(af[3])}}if(e&&!isNaN(V)&&!isNaN(J)&&!isNaN(Y)&&!isNaN(Z)){e.setHours(V,J,Y,Z);ag=true}}if(ag){return e}}return null},getparseregexp:function(e,R){var T=e._parseRegExp;if(!T){e._parseRegExp=T={}}else{var K=T[R];if(K){return K}}var Q=this.expandFormat(e,R).replace(/([\\^\\$\\.\\*\\+\\?\\|\\[\\]\\(\\)\\{\\}])/g,\"\\\\\\\\$1\"),O=[\"^\"],H=[],N=0,J=0,W=this.getTokenRegExp(),L;while((L=W.exec(Q))!==null){var V=Q.slice(N,L.index);N=W.lastIndex;J+=this.appendPreOrPostMatch(V,O);if(J%2){O.push(L[0]);continue}var I=L[0],M=I.length,S;switch(I){case\"dddd\":case\"ddd\":case\"MMMM\":case\"MMM\":case\"gg\":case\"g\":S=\"(\\\\D+)\";break;case\"tt\":case\"t\":S=\"(\\\\D*)\";break;case\"yyyy\":case\"fff\":case\"ff\":case\"f\":S=\"(\\\\d{\"+M+\"})\";break;case\"dd\":case\"d\":case\"MM\":case\"M\":case\"yy\":case\"y\":case\"HH\":case\"H\":case\"hh\":case\"h\":case\"mm\":case\"m\":case\"ss\":case\"s\":S=\"(\\\\d\\\\d?)\";break;case\"zzz\":S=\"([+-]?\\\\d\\\\d?:\\\\d{2})\";break;case\"zz\":case\"z\":S=\"([+-]?\\\\d\\\\d?)\";break;case\"/\":S=\"(\\\\\"+e[\"/\"]+\")\";break;default:throw\"Invalid date format pattern '\"+I+\"'.\";break}if(S){O.push(S)}H.push(L[0])}this.appendPreOrPostMatch(Q.slice(N),O);O.push(\"$\");var U=O.join(\"\").replace(/\\s+/g,\"\\\\s+\"),P={regExp:U,groups:H};return T[R]=P},outOfRange:function(I,e,H){return I<e||I>H},expandYear:function(L,J){var H=new Date(),e=this.getEra(H);if(J<100){var I=L.twoDigitYearMax;I=typeof I===\"string\"?new Date().getFullYear()%100+parseInt(I,10):I;var K=this.getEraYear(H,L,e);J+=K-(K%100);if(J>I){J-=100}}return J},parsedate:function(ab,ai,W){if(W==undefined||W==null){W=this.defaultcalendar()}ab=this.trim(ab);var T=W,an=this.getparseregexp(T,ai),N=new RegExp(an.regExp).exec(ab);if(N===null){return null}var aj=an.groups,Z=null,R=null,am=null,al=null,S=null,L=0,ae,ad=0,ak=0,e=0,I=null,U=false;for(var af=0,ah=aj.length;af<ah;af++){var H=N[af+1];if(H){var aa=aj[af],K=aa.length,M=parseInt(H,10);switch(aa){case\"dd\":case\"d\":al=M;if(this.outOfRange(al,1,31)){return null}break;case\"MMM\":case\"MMMM\":am=this.getMonthIndex(T,H,K===3);if(this.outOfRange(am,0,11)){return null}break;case\"M\":case\"MM\":am=M-1;if(this.outOfRange(am,0,11)){return null}break;case\"y\":case\"yy\":case\"yyyy\":R=K<4?this.expandYear(T,M):M;if(this.outOfRange(R,0,9999)){return null}break;case\"h\":case\"hh\":L=M;if(L===12){L=0}if(this.outOfRange(L,0,11)){return null}break;case\"H\":case\"HH\":L=M;if(this.outOfRange(L,0,23)){return null}break;case\"m\":case\"mm\":ad=M;if(this.outOfRange(ad,0,59)){return null}break;case\"s\":case\"ss\":ak=M;if(this.outOfRange(ak,0,59)){return null}break;case\"tt\":case\"t\":U=T.PM&&(H===T.PM[0]||H===T.PM[1]||H===T.PM[2]);if(!U&&(!T.AM||(H!==T.AM[0]&&H!==T.AM[1]&&H!==T.AM[2]))){return null}break;case\"f\":case\"ff\":case\"fff\":e=M*Math.pow(10,3-K);if(this.outOfRange(e,0,999)){return null}break;case\"ddd\":case\"dddd\":S=this.getDayIndex(T,H,K===3);if(this.outOfRange(S,0,6)){return null}break;case\"zzz\":var J=H.split(/:/);if(J.length!==2){return null}ae=parseInt(J[0],10);if(this.outOfRange(ae,-12,13)){return null}var P=parseInt(J[1],10);if(this.outOfRange(P,0,59)){return null}I=(ae*60)+(this.startsWith(H,\"-\")?-P:P);break;case\"z\":case\"zz\":ae=M;if(this.outOfRange(ae,-12,13)){return null}I=ae*60;break;case\"g\":case\"gg\":var V=H;if(!V||!T.eras){return null}V=trim(V.toLowerCase());for(var ag=0,ac=T.eras.length;ag<ac;ag++){if(V===T.eras[ag].name.toLowerCase()){Z=ag;break}}if(Z===null){return null}break}}}var Q=new Date(),Y,O=T.convert;Y=Q.getFullYear();if(R===null){R=Y}else{if(T.eras){R+=T.eras[(Z||0)].offset}}if(am===null){am=0}if(al===null){al=1}if(O){Q=O.toGregorian(R,am,al);if(Q===null){return null}}else{Q.setFullYear(R,am,al);if(Q.getDate()!==al){return null}if(S!==null&&Q.getDay()!==S){return null}}if(U&&L<12){L+=12}Q.setHours(L,ad,ak,e);if(I!==null){var X=Q.getMinutes()-(I+Q.getTimezoneOffset());Q.setHours(Q.getHours()+parseInt(X/60,10),X%60)}return Q},cleardatescache:function(){this.datescache=new Array()},formatDate:function(e,I,H){return this.formatdate(e,I,H)},formatdate:function(Z,ad,U){if(U==undefined||U==null){U=this.defaultcalendar()}if(typeof Z===\"string\"){return Z}var J=Z.toString()+\"_\"+ad;if(this.datescache&&this.datescache[J]){return this.datescache[J]}if(!ad||!ad.length||ad===\"i\"){var af;af=this.formatDate(Z,U.patterns.F,U);return af}var aa=U.eras,H=ad===\"s\";ad=this.expandFormat(U,ad);af=[];var M,ab=[\"0\",\"00\",\"000\"],Q,R,e=/([^d]|^)(d|dd)([^d]|$)/g,ae=0,W=this.getTokenRegExp(),I;function O(ag,aj){var ai,ah=ag+\"\";if(aj>1&&ah.length<aj){ai=(ab[aj-2]+ah);return ai.substr(ai.length-aj,aj)}else{ai=ah}return ai}function ac(){if(Q||R){return Q}Q=e.test(ad);R=true;return Q}function K(ah,ag){if(I){return I[ag]}if(ah.getMonth!=undefined){switch(ag){case 0:return ah.getFullYear();case 1:return ah.getMonth();case 2:return ah.getDate()}}}for(;;){var N=W.lastIndex,V=W.exec(ad);var S=ad.slice(N,V?V.index:ad.length);ae+=this.appendPreOrPostMatch(S,af);if(!V){break}if(ae%2){af.push(V[0]);continue}var X=V[0],L=X.length;switch(X){case\"ddd\":case\"dddd\":var T=(L===3)?U.days.namesAbbr:U.days.names;af.push(T[Z.getDay()]);break;case\"d\":case\"dd\":Q=true;af.push(O(K(Z,2),L));break;case\"MMM\":case\"MMMM\":var Y=K(Z,1);af.push(U.months[L===3?\"namesAbbr\":\"names\"][Y]);break;case\"M\":case\"MM\":af.push(O(K(Z,1)+1,L));break;case\"y\":case\"yy\":case\"yyyy\":Y=this.getEraYear(Z,U,this.getEra(Z,aa),H);if(L<4){Y=Y%100}af.push(O(Y,L));break;case\"h\":case\"hh\":M=Z.getHours()%12;if(M===0){M=12}af.push(O(M,L));break;case\"H\":case\"HH\":af.push(O(Z.getHours(),L));break;case\"m\":case\"mm\":af.push(O(Z.getMinutes(),L));break;case\"s\":case\"ss\":af.push(O(Z.getSeconds(),L));break;case\"t\":case\"tt\":Y=Z.getHours()<12?(U.AM?U.AM[0]:\" \"):(U.PM?U.PM[0]:\" \");af.push(L===1?Y.charAt(0):Y);break;case\"f\":case\"ff\":case\"fff\":af.push(O(Z.getMilliseconds(),3).substr(0,L));break;case\"z\":case\"zz\":M=Z.getTimezoneOffset()/60;af.push((M<=0?\"+\":\"-\")+O(Math.floor(Math.abs(M)),L));break;case\"zzz\":M=Z.getTimezoneOffset()/60;af.push((M<=0?\"+\":\"-\")+O(Math.floor(Math.abs(M)),2)+\":\"+O(Math.abs(Z.getTimezoneOffset()%60),2));break;case\"g\":case\"gg\":if(U.eras){af.push(U.eras[this.getEra(Z,aa)].name)}break;case\"/\":af.push(U[\"/\"]);break;default:throw\"Invalid date format pattern '\"+X+\"'.\";break}}var P=af.join(\"\");if(!this.datescache){this.datescache=new Array()}this.datescache[J]=P;return P}});i.jqx.data={};var l,E,p=/#.*$/,a=/^(.*?):[ \\t]*([^\\r\\n]*)\\r?$/mg,f=/^(?:about|app|app\\-storage|.+\\-extension|file|res|widget):$/,j=/^(?:GET|HEAD)$/,o=/^\\/\\//,k=/\\?/,b=/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,d=/([?&])_=[^&]*/,h=/^([\\w\\+\\.\\-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+)|)|)/,t=/\\s+/,F=i.fn.load,G={},C={},q=[\"*/\"]+[\"*\"];try{E=location.href}catch(A){E=document.createElement(\"a\");E.href=\"\";E=E.href}l=h.exec(E.toLowerCase())||[];function r(e){return function(K,M){if(typeof K!==\"string\"){M=K;K=\"*\"}var H,N,O,J=K.toLowerCase().split(t),I=0,L=J.length;if(i.isFunction(M)){for(;I<L;I++){H=J[I];O=/^\\+/.test(H);if(O){H=H.substr(1)||\"*\"}N=e[H]=e[H]||[];N[O?\"unshift\":\"push\"](M)}}}}function v(H,Q,L,O,N,J){N=N||Q.dataTypes[0];J=J||{};J[N]=true;var P,M=H[N],I=0,e=M?M.length:0,K=(H===G);for(;I<e&&(K||!P);I++){P=M[I](Q,L,O);if(typeof P===\"string\"){if(!K||J[P]){P=undefined}else{Q.dataTypes.unshift(P);P=v(H,Q,L,O,P,J)}}}if((K||!P)&&!J[\"*\"]){P=v(H,Q,L,O,\"*\",J)}return P}function u(I,J){var H,e,K=i.jqx.data.ajaxSettings.flatOptions||{};for(H in J){if(J[H]!==undefined){(K[H]?I:(e||(e={})))[H]=J[H]}}if(e){i.extend(true,I,e)}}i.extend(i.jqx.data,{ajaxSetup:function(H,e){if(e){u(H,i.jqx.data.ajaxSettings)}else{e=H;H=i.jqx.data.ajaxSettings}u(H,e);return H},ajaxSettings:{url:E,isLocal:f.test(l[1]),global:true,type:\"GET\",contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",processData:true,async:true,accepts:{xml:\"application/xml, text/xml\",html:\"text/html\",text:\"text/plain\",json:\"application/json, text/javascript\",\"*\":q},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:\"responseXML\",text:\"responseText\"},converters:{\"* text\":window.String,\"text html\":true,\"text json\":i.parseJSON,\"text xml\":i.parseXML},flatOptions:{context:true,url:true}},ajaxPrefilter:r(G),ajaxTransport:r(C),ajax:function(M,J){if(typeof M===\"object\"){J=M;M=undefined}J=J||{};var P,ad,K,Y,R,V,I,X,Q=i.jqx.data.ajaxSetup({},J),af=Q.context||Q,T=af!==Q&&(af.nodeType||af instanceof i)?i(af):i.event,ae=i.Deferred(),aa=i.Callbacks(\"once memory\"),N=Q.statusCode||{},U={},ab={},L=0,O=\"canceled\",W={readyState:0,setRequestHeader:function(ag,ah){if(!L){var e=ag.toLowerCase();ag=ab[e]=ab[e]||ag;U[ag]=ah}return this},getAllResponseHeaders:function(){return L===2?ad:null},getResponseHeader:function(ag){var e;if(L===2){if(!K){K={};while((e=a.exec(ad))){K[e[1].toLowerCase()]=e[2]}}e=K[ag.toLowerCase()]}return e===undefined?null:e},overrideMimeType:function(e){if(!L){Q.mimeType=e}return this},abort:function(e){e=e||O;if(Y){Y.abort(e)}S(0,e);return this}};function S(ak,ag,al,ai){var e,ao,am,aj,an,ah=ag;if(L===2){return}L=2;if(R){clearTimeout(R)}Y=undefined;ad=ai||\"\";W.readyState=ak>0?4:0;if(al){aj=B(Q,W,al)}if(ak>=200&&ak<300||ak===304){if(Q.ifModified){an=W.getResponseHeader(\"Last-Modified\");if(an){i.lastModified[P]=an}an=W.getResponseHeader(\"Etag\");if(an){i.etag[P]=an}}if(ak===304){ah=\"notmodified\";e=true}else{e=c(Q,aj);ah=e.state;ao=e.data;am=e.error;e=!am}}else{am=ah;if(!ah||ak){ah=\"error\";if(ak<0){ak=0}}}W.status=ak;W.statusText=(ag||ah)+\"\";if(e){ae.resolveWith(af,[ao,ah,W])}else{ae.rejectWith(af,[W,ah,am])}W.statusCode(N);N=undefined;if(I){T.trigger(\"ajax\"+(e?\"Success\":\"Error\"),[W,Q,e?ao:am])}aa.fireWith(af,[W,ah]);if(I){T.trigger(\"ajaxComplete\",[W,Q]);if(!(--i.active)){i.event.trigger(\"ajaxStop\")}}}ae.promise(W);W.success=W.done;W.error=W.fail;W.complete=aa.add;W.statusCode=function(ag){if(ag){var e;if(L<2){for(e in ag){N[e]=[N[e],ag[e]]}}else{e=ag[W.status];W.always(e)}}return this};Q.url=((M||Q.url)+\"\").replace(p,\"\").replace(o,l[1]+\"//\");Q.dataTypes=i.trim(Q.dataType||\"*\").toLowerCase().split(t);if(Q.crossDomain==null){V=h.exec(Q.url.toLowerCase());Q.crossDomain=!!(V&&(V[1]!==l[1]||V[2]!==l[2]||(V[3]||(V[1]===\"http:\"?80:443))!=(l[3]||(l[1]===\"http:\"?80:443))))}if(Q.data&&Q.processData&&typeof Q.data!==\"string\"){Q.data=i.param(Q.data,Q.traditional)}v(G,Q,J,W);if(L===2){return W}I=Q.global;Q.type=Q.type.toUpperCase();Q.hasContent=!j.test(Q.type);if(I&&i.active++===0){i.event.trigger(\"ajaxStart\")}if(!Q.hasContent){if(Q.data){Q.url+=(k.test(Q.url)?\"&\":\"?\")+Q.data;delete Q.data}P=Q.url;if(Q.cache===false){var H=i.now(),ac=Q.url.replace(d,\"$1_=\"+H);Q.url=ac+((ac===Q.url)?(k.test(Q.url)?\"&\":\"?\")+\"_=\"+H:\"\")}}if(Q.data&&Q.hasContent&&Q.contentType!==false||J.contentType){W.setRequestHeader(\"Content-Type\",Q.contentType)}if(Q.ifModified){P=P||Q.url;if(i.lastModified[P]){W.setRequestHeader(\"If-Modified-Since\",i.lastModified[P])}if(i.etag[P]){W.setRequestHeader(\"If-None-Match\",i.etag[P])}}W.setRequestHeader(\"Accept\",Q.dataTypes[0]&&Q.accepts[Q.dataTypes[0]]?Q.accepts[Q.dataTypes[0]]+(Q.dataTypes[0]!==\"*\"?\", \"+q+\"; q=0.01\":\"\"):Q.accepts[\"*\"]);for(X in Q.headers){W.setRequestHeader(X,Q.headers[X])}if(Q.beforeSend&&(Q.beforeSend.call(af,W,Q)===false||L===2)){return W.abort()}O=\"abort\";for(X in {success:1,error:1,complete:1}){W[X](Q[X])}Y=v(C,Q,J,W);if(!Y){S(-1,\"No Transport\")}else{W.readyState=1;if(I){T.trigger(\"ajaxSend\",[W,Q])}if(Q.async&&Q.timeout>0){R=setTimeout(function(){W.abort(\"timeout\")},Q.timeout)}try{L=1;Y.send(U,S)}catch(Z){if(L<2){S(-1,Z)}else{throw Z}}}return W},active:0,lastModified:{},etag:{}});function B(P,O,L){var K,M,J,e,H=P.contents,N=P.dataTypes,I=P.responseFields;for(M in I){if(M in L){O[I[M]]=L[M]}}while(N[0]===\"*\"){N.shift();if(K===undefined){K=P.mimeType||O.getResponseHeader(\"content-type\")}}if(K){for(M in H){if(H[M]&&H[M].test(K)){N.unshift(M);break}}}if(N[0] in L){J=N[0]}else{for(M in L){if(!N[0]||P.converters[M+\" \"+N[0]]){J=M;break}if(!e){e=M}}J=J||e}if(J){if(J!==N[0]){N.unshift(J)}return L[J]}}function c(R,J){var P,H,N,L,O=R.dataTypes.slice(),I=O[0],Q={},K=0;if(R.dataFilter){J=R.dataFilter(J,R.dataType)}if(O[1]){for(P in R.converters){Q[P.toLowerCase()]=R.converters[P]}}for(;(N=O[++K]);){if(N!==\"*\"){if(I!==\"*\"&&I!==N){P=Q[I+\" \"+N]||Q[\"* \"+N];if(!P){for(H in Q){L=H.split(\" \");if(L[1]===N){P=Q[I+\" \"+L[0]]||Q[\"* \"+L[0]];if(P){if(P===true){P=Q[H]}else{if(Q[H]!==true){N=L[0];O.splice(K--,0,N)}}break}}}}if(P!==true){if(P&&R[\"throws\"]){J=P(J)}else{try{J=P(J)}catch(M){return{state:\"parsererror\",error:P?M:\"No conversion from \"+I+\" to \"+N}}}}}I=N}}return{state:\"success\",data:J}}var y=[],n=/\\?/,D=/(=)\\?(?=&|$)|\\?\\?/,z=i.now();i.jqx.data.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var e=y.pop()||(i.expando+\"_\"+(z++));this[e]=true;return e}});i.jqx.data.ajaxPrefilter(\"json jsonp\",function(Q,L,P){var O,e,N,J=Q.data,H=Q.url,I=Q.jsonp!==false,M=I&&D.test(H),K=I&&!M&&typeof J===\"string\"&&!(Q.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&D.test(J);if(Q.dataTypes[0]===\"jsonp\"||M||K){O=Q.jsonpCallback=i.isFunction(Q.jsonpCallback)?Q.jsonpCallback():Q.jsonpCallback;e=window[O];if(M){Q.url=H.replace(D,\"$1\"+O)}else{if(K){Q.data=J.replace(D,\"$1\"+O)}else{if(I){Q.url+=(n.test(H)?\"&\":\"?\")+Q.jsonp+\"=\"+O}}}Q.converters[\"script json\"]=function(){if(!N){i.error(O+\" was not called\")}return N[0]};Q.dataTypes[0]=\"json\";window[O]=function(){N=arguments};P.always(function(){window[O]=e;if(Q[O]){Q.jsonpCallback=L.jsonpCallback;y.push(O)}if(N&&i.isFunction(e)){e(N[0])}N=e=undefined});return\"script\"}});i.jqx.data.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/javascript|ecmascript/},converters:{\"text script\":function(e){i.globalEval(e);return e}}});i.jqx.data.ajaxPrefilter(\"script\",function(e){if(e.cache===undefined){e.cache=false}if(e.crossDomain){e.type=\"GET\";e.global=false}});i.jqx.data.ajaxTransport(\"script\",function(I){if(I.crossDomain){var e,H=document.head||document.getElementsByTagName(\"head\")[0]||document.documentElement;return{send:function(J,K){e=document.createElement(\"script\");e.async=\"async\";if(I.scriptCharset){e.charset=I.scriptCharset}e.src=I.url;e.onload=e.onreadystatechange=function(M,L){if(L||!e.readyState||/loaded|complete/.test(e.readyState)){e.onload=e.onreadystatechange=null;if(H&&e.parentNode){H.removeChild(e)}e=undefined;if(!L){K(200,\"success\")}}};H.insertBefore(e,H.firstChild)},abort:function(){if(e){e.onload(0,1)}}}}});var w,x=window.ActiveXObject?function(){for(var e in w){w[e](0,1)}}:false,m=0;function g(){try{return new window.XMLHttpRequest()}catch(H){}}function s(){try{return new window.ActiveXObject(\"Microsoft.XMLHTTP\")}catch(H){}}i.jqx.data.ajaxSettings.xhr=window.ActiveXObject?function(){return !this.isLocal&&g()||s()}:g;(function(e){i.extend(i.support,{ajax:!!e,cors:!!e&&(\"withCredentials\" in e)})})(i.jqx.data.ajaxSettings.xhr());if(i.support.ajax){i.jqx.data.ajaxTransport(function(e){if(!e.crossDomain||i.support.cors){var H;return{send:function(N,I){var L,K,M=e.xhr();if(e.username){M.open(e.type,e.url,e.async,e.username,e.password)}else{M.open(e.type,e.url,e.async)}if(e.xhrFields){for(K in e.xhrFields){M[K]=e.xhrFields[K]}}if(e.mimeType&&M.overrideMimeType){M.overrideMimeType(e.mimeType)}if(!e.crossDomain&&!N[\"X-Requested-With\"]){N[\"X-Requested-With\"]=\"XMLHttpRequest\"}try{for(K in N){M.setRequestHeader(K,N[K])}}catch(J){}M.send((e.hasContent&&e.data)||null);H=function(W,Q){var R,P,O,U,T;try{if(H&&(Q||M.readyState===4)){H=undefined;if(L){M.onreadystatechange=i.noop;if(x){delete w[L]}}if(Q){if(M.readyState!==4){M.abort()}}else{R=M.status;O=M.getAllResponseHeaders();U={};T=M.responseXML;if(T&&T.documentElement){U.xml=T}try{U.text=M.responseText}catch(V){}try{P=M.statusText}catch(V){P=\"\"}if(!R&&e.isLocal&&!e.crossDomain){R=U.text?200:404}else{if(R===1223){R=204}}}}}catch(S){if(!Q){I(-1,S)}}if(U){I(R,P,U,O)}};if(!e.async){H()}else{if(M.readyState===4){setTimeout(H,0)}else{L=++m;if(x){if(!w){w={};i(window).unload(x)}w[L]=H}M.onreadystatechange=H}}},abort:function(){if(H){H(0,1)}}}}})}i.jqx.filter=function(){this.operator=\"and\";var M=0;var J=1;var P=[\"EMPTY\",\"NOT_EMPTY\",\"CONTAINS\",\"CONTAINS_CASE_SENSITIVE\",\"DOES_NOT_CONTAIN\",\"DOES_NOT_CONTAIN_CASE_SENSITIVE\",\"STARTS_WITH\",\"STARTS_WITH_CASE_SENSITIVE\",\"ENDS_WITH\",\"ENDS_WITH_CASE_SENSITIVE\",\"EQUAL\",\"EQUAL_CASE_SENSITIVE\",\"NULL\",\"NOT_NULL\"];var R=[\"EQUAL\",\"NOT_EQUAL\",\"LESS_THAN\",\"LESS_THAN_OR_EQUAL\",\"GREATER_THAN\",\"GREATER_THAN_OR_EQUAL\",\"NULL\",\"NOT_NULL\"];var S=[\"EQUAL\",\"NOT_EQUAL\",\"LESS_THAN\",\"LESS_THAN_OR_EQUAL\",\"GREATER_THAN\",\"GREATER_THAN_OR_EQUAL\",\"NULL\",\"NOT_NULL\"];var L=[\"EQUAL\",\"NOT_EQUAL\"];var K=new Array();var Q=new Array();this.evaluate=function(X){var V=true;for(var W=0;W<K.length;W++){var U=K[W].evaluate(X);if(W==0){V=U}else{if(Q[W]==J||Q[W]==\"or\"){V=V||U}else{V=V&&U}}}return V};this.getfilterscount=function(){return K.length};this.setoperatorsbyfiltertype=function(U,V){switch(U){case\"numericfilter\":R=V;break;case\"stringfilter\":P=V;break;case\"datefilter\":S=V;break;case\"booleanfilter\":L=V;break}};this.getoperatorsbyfiltertype=function(U){var V=new Array();switch(U){case\"numericfilter\":V=R.slice(0);break;case\"stringfilter\":V=P.slice(0);break;case\"datefilter\":V=S.slice(0);break;case\"booleanfilter\":V=L.slice(0);break}return V};var O=function(){var U=function(){return(((1+Math.random())*65536)|0).toString(16).substring(1)};return(U()+\"-\"+U()+\"-\"+U())};this.createfilter=function(Y,V,X,W,U,Z){if(Y==null||Y==undefined){return null}switch(Y){case\"numericfilter\":return new N(V,X.toUpperCase());case\"stringfilter\":return new T(V,X.toUpperCase());case\"datefilter\":return new H(V,X.toUpperCase(),U,Z);case\"booleanfilter\":return new I(V,X.toUpperCase());case\"custom\":return new e(V,X.toUpperCase(),W)}throw new Error(\"jqxGrid: There is no such filter type. The available filter types are: 'numericfilter', 'stringfilter', 'datefilter' and 'booleanfilter'\");return null};this.getfilters=function(){var U=new Array();for(var V=0;V<K.length;V++){var W={value:K[V].filtervalue,condition:K[V].comparisonoperator,operator:Q[V],type:K[V].type};if(K[V].data){W.id=K[V].data}U[V]=W}return U};this.addfilter=function(U,V){K[K.length]=V;V.key=O();Q[Q.length]=U};this.removefilter=function(V){for(var U=0;U<K.length;U++){if(K[U].key==V.key){K.splice(U,1);Q.splice(U,1);break}}};this.getoperatorat=function(U){if(U==undefined||U==null){return null}if(U<0||U>K.length){return null}return Q[U]};this.setoperatorat=function(V,U){if(V==undefined||V==null){return null}if(V<0||V>K.length){return null}Q[U]=U};this.getfilterat=function(U){if(U==undefined||U==null){return null}if(U<0||U>K.length){return null}return K[U]};this.setfilterat=function(U,V){if(U==undefined||U==null){return null}if(U<0||U>K.length){return null}V.key=O();K[U]=V};this.clear=function(){K=new Array();Q=new Array()};var T=function(V,U){this.filtervalue=V;this.comparisonoperator=U;this.type=\"stringfilter\";this.evaluate=function(af){var ae=this.filtervalue;var al=this.comparisonoperator;if(af==null||af==undefined||af==\"\"){if(al==\"NULL\"){return true}if(al==\"EQUAL\"&&af==ae){return true}if(al==\"NOT_EQUAL\"&&af!=ae){return true}if(al!=\"EMPTY\"){return false}else{if(af==\"\"){return true}}}var an=\"\";try{an=af.toString()}catch(ag){return true}var am=function(ap,ao){switch(al){case\"EQUAL\":return i.jqx.string.equalsIgnoreCase(ap,ao);case\"EQUAL_CASE_SENSITIVE\":return i.jqx.string.equals(ap,ao);case\"NOT_EQUAL\":return !i.jqx.string.equalsIgnoreCase(ap,ao);case\"NOT_EQUAL_CASE_SENSITIVE\":return !i.jqx.string.equals(ap,ao);case\"CONTAINS\":return i.jqx.string.containsIgnoreCase(ap,ao);case\"CONTAINS_CASE_SENSITIVE\":return i.jqx.string.contains(ap,ao);case\"DOES_NOT_CONTAIN\":return !i.jqx.string.containsIgnoreCase(ap,ao);case\"DOES_NOT_CONTAIN_CASE_SENSITIVE\":return !i.jqx.string.contains(ap,ao);case\"EMPTY\":return ap==\"\";case\"NOT_EMPTY\":return ap!=\"\";case\"NOT_NULL\":return ap!=null;case\"STARTS_WITH\":return i.jqx.string.startsWithIgnoreCase(ap,ao);case\"ENDS_WITH\":return i.jqx.string.endsWithIgnoreCase(ap,ao);case\"ENDS_WITH_CASE_SENSITIVE\":return i.jqx.string.endsWith(ap,ao);case\"STARTS_WITH_CASE_SENSITIVE\":return i.jqx.string.startsWith(ap,ao);default:return false}};var Z=new Array();if(ae&&ae.indexOf){if(ae.indexOf(\"|\")>=0||ae.indexOf(\" AND \")>=0||ae.indexOf(\" OR \")>=0||ae.indexOf(\" and \")>=0||ae.indexOf(\" or \")>=0){var aa=am(an,ae);if(aa){return aa}var ab=ae.indexOf(\" AND \")>=0?ae.split(\" AND \"):new Array();var Y=ae.indexOf(\" OR \")>=0?ae.split(\" OR \"):new Array();var X=ae.indexOf(\" and \")>=0?ae.split(\" and \"):new Array();var ac=ae.indexOf(\" or \")>=0?ae.split(\" or \"):new Array();var W=ae.indexOf(\"|\")>=0?ae.split(\"|\"):new Array();if(W.length>0){for(var ak=0;ak<W.length;ak++){W[ak]=i.trim(W[ak])}}var aj=ae.indexOf(\" \")>=0?ae.split(\" \"):new Array();if(aj.length>0){for(var ak=0;ak<aj.length;ak++){aj[ak]=i.trim(aj[ak])}}ab=ab.concat(aj);ab=ab.concat(X);Y=Y.concat(W);Y=Y.concat(ac);if(ab.length>0){for(var ak=0;ak<ab.length;ak++){if(!ab[ak].indexOf(\" OR \")>=0){Z.push(ab[ak])}}}if(Y.length>0){for(var ak=0;ak<Y.length;ak++){if(!Y[ak].indexOf(\" AND \")>=0){Z.push(Y[ak])}}}var ai=undefined;for(var ah=0;ah<Z.length;ah++){var af=Z[ah];var aa=am(an,af);var ad=ah<ab.length?\"and\":\"or\";if(ai==undefined){ai=aa}else{if(ad==\"or\"){ai=ai||aa}else{ai=ai&&aa}}}return ai}}return am(an,ae)}};var I=function(V,U){this.filtervalue=V;this.comparisonoperator=U;this.type=\"booleanfilter\";this.evaluate=function(Y){var X=this.filtervalue;var W=this.comparisonoperator;if(Y==null||Y==undefined){if(W==\"NULL\"){return true}return false}var Z=Y;switch(W){case\"EQUAL\":return Z==X||Z.toString()==X.toString();case\"NOT_EQUAL\":return Z!=X&&Z.toString()!=X.toString();default:return false}}};var N=function(V,U){this.filtervalue=V;this.comparisonoperator=U;this.type=\"numericfilter\";this.evaluate=function(ag){var af=this.filtervalue;var al=this.comparisonoperator;if(ag===null||ag===undefined||ag===\"\"){if(al==\"NOT_NULL\"){return false}if(al==\"NULL\"){return true}else{switch(al){case\"EQUAL\":return ag==af;case\"NOT_EQUAL\":return ag!=af}return false}}else{if(al==\"NULL\"){return false}if(al==\"NOT_NULL\"){return true}}var an=ag;try{an=parseFloat(an)}catch(ah){if(ag.toString()!=\"\"){return false}}var am=function(ap,ao){switch(al){case\"EQUAL\":return ap==ao;case\"NOT_EQUAL\":return ap!=ao;case\"GREATER_THAN\":return ap>ao;case\"GREATER_THAN_OR_EQUAL\":return ap>=ao;case\"LESS_THAN\":return ap<ao;case\"LESS_THAN_OR_EQUAL\":return ap<=ao;case\"STARTS_WITH\":return i.jqx.string.startsWithIgnoreCase(ap.toString(),ao.toString());case\"ENDS_WITH\":return i.jqx.string.endsWithIgnoreCase(ap.toString(),ao.toString());case\"ENDS_WITH_CASE_SENSITIVE\":return i.jqx.string.endsWith(ap.toString(),ao.toString());case\"STARTS_WITH_CASE_SENSITIVE\":return i.jqx.string.startsWith(ap.toString(),ao.toString());case\"CONTAINS\":return i.jqx.string.containsIgnoreCase(ap.toString(),ao.toString());case\"CONTAINS_CASE_SENSITIVE\":return i.jqx.string.contains(ap.toString(),ao.toString());case\"DOES_NOT_CONTAIN\":return !i.jqx.string.containsIgnoreCase(ap.toString(),ao.toString());case\"DOES_NOT_CONTAIN_CASE_SENSITIVE\":return !i.jqx.string.contains(ap.toString(),ao.toString());default:return true}};var aa=new Array();if(af&&af.indexOf){if(af.indexOf(\"|\")>=0||af.indexOf(\" AND \")>=0||af.indexOf(\" OR \")>=0||af.indexOf(\" and \")>=0||af.indexOf(\" or \")>=0){var ab=am(an,af);if(ab){return ab}af=af.toString();var ac=af.indexOf(\" AND \")>=0?af.split(\" AND \"):new Array();var Z=af.indexOf(\" OR \")>=0?af.split(\" OR \"):new Array();var Y=af.indexOf(\" and \")>=0?af.split(\" and \"):new Array();var ad=af.indexOf(\" or \")>=0?af.split(\" or \"):new Array();ac=ac.concat(Y);Z=Z.concat(ad);var X=af.indexOf(\"|\")>=0?af.split(\"|\"):new Array();if(X.length>0){for(var ak=0;ak<X.length;ak++){X[ak]=i.trim(X[ak])}}Z=Z.concat(X);if(ac.length>0){for(var ak=0;ak<ac.length;ak++){if(!ac[ak].indexOf(\" OR \")>=0){aa.push(ac[ak])}}}if(Z.length>0){for(var ak=0;ak<Z.length;ak++){if(!Z[ak].indexOf(\" AND \")>=0){aa.push(Z[ak])}}}var aj=undefined;for(var ai=0;ai<aa.length;ai++){var ag=aa[ai];if(ag&&ag.indexOf&&ag.indexOf(\"..\")>=0){var W=ag.toString().split(\"..\");if(W.length==2){ab=an>=W[0]&&an<=W[1]}}else{var ab=am(an,ag)}var ae=ai<ac.length?\"and\":\"or\";if(aj==undefined){aj=ab}else{if(ae==\"or\"){aj=aj||ab}else{aj=aj&&ab}}}return aj}}if(af&&af.indexOf&&af.indexOf(\"..\")>=0){aa=af.toString().split(\"..\");if(aa.length==2){return an>=aa[0]&&an<=aa[1]}}return am(an,af)}};var H=function(X,V,W,ab){this.filtervalue=X;this.type=\"datefilter\";var Z=this;if(W!=undefined&&ab!=undefined){var Y=i.jqx.dataFormat.parsedate(X,W,ab);if(Y!=null){this.filterdate=Y}else{var U=i.jqx.dataFormat.tryparsedate(X,ab);if(U!=null){this.filterdate=U}}}else{var aa=new Date(X);if(aa.toString()==\"NaN\"||aa.toString()==\"Invalid Date\"){this.filterdate=i.jqx.dataFormat.tryparsedate(X)}else{this.filterdate=aa}}if(!this.filterdate){var aa=new Date(X);if(aa.toString()==\"NaN\"||aa.toString()==\"Invalid Date\"){this.filterdate=i.jqx.dataFormat.tryparsedate(X)}else{this.filterdate=aa}}this.comparisonoperator=V;this.evaluate=function(ao){var an=this.filtervalue;var aw=this.comparisonoperator;if(ao==null||ao==undefined||ao==\"\"){if(aw==\"NOT_NULL\"){return false}if(aw==\"NULL\"){return true}else{switch(aw){case\"EQUAL\":return ao==an;case\"NOT_EQUAL\":return ao!=an}return false}}else{if(aw==\"NULL\"){return false}if(aw==\"NOT_NULL\"){return true}}var ay=new Date();ay.setFullYear(1900,0,1);ay.setHours(12,0,0,0);try{var av=new Date(ao);if(av.toString()==\"NaN\"||av.toString()==\"Invalid Date\"){ao=i.jqx.dataFormat.tryparsedate(ao)}else{ao=av}ay=ao;var at=false;if(W!=undefined&&ab!=undefined){if(W.indexOf(\"t\")>=0||W.indexOf(\"T\")>=0||W.indexOf(\":\")>=0||W.indexOf(\"f\")>=0){at=true;if(an&&an.toString().indexOf(\":\")==-1){var aj=i.jqx.dataFormat.tryparsedate(an.toString()+\":00\",ab);if(aj!=null){Z.filterdate=aj}}}}if(!at){ay.setHours(0);ay.setMinutes(0);ay.setSeconds(0)}}catch(ap){if(ao.toString()!=\"\"){return false}}if(Z.filterdate!=null){an=Z.filterdate}else{if(an&&an.indexOf){if(an.indexOf(\":\")!=-1||!isNaN(parseInt(an))){var ai=new Date(ay);ai.setHours(12,0,0,0);var ah=an.split(\":\");for(var au=0;au<ah.length;au++){if(au==0){ai.setHours(ah[au])}if(au==1){ai.setMinutes(ah[au])}if(au==2){ai.setSeconds(ah[au])}}an=ai}}}if(at){if(an&&an.setFullYear){if(ay&&ay.getFullYear){if(W.indexOf(\"d\")==-1&&W.indexOf(\"M\")==-1&&W.indexOf(\"y\")==-1){an.setFullYear(ay.getFullYear(),ay.getMonth(),ay.getDate())}}}}var ax=function(aA,az){if(aA==null){aA=\"\"}switch(aw){case\"EQUAL\":return aA.toString()==az.toString();case\"NOT_EQUAL\":return aA.toString()!=az.toString();case\"GREATER_THAN\":return aA>az;case\"GREATER_THAN_OR_EQUAL\":return aA>=az;case\"LESS_THAN\":return aA<az;case\"LESS_THAN_OR_EQUAL\":return aA<=az;case\"STARTS_WITH\":return i.jqx.string.startsWithIgnoreCase(aA.toString(),az.toString());case\"ENDS_WITH\":return i.jqx.string.endsWithIgnoreCase(aA.toString(),az.toString());case\"ENDS_WITH_CASE_SENSITIVE\":return i.jqx.string.endsWith(aA.toString(),az.toString());case\"STARTS_WITH_CASE_SENSITIVE\":return i.jqx.string.startsWith(aA.toString(),az.toString());case\"CONTAINS\":return i.jqx.string.containsIgnoreCase(aA.toString(),az.toString());case\"CONTAINS_CASE_SENSITIVE\":return i.jqx.string.contains(aA.toString(),az.toString());case\"DOES_NOT_CONTAIN\":return !i.jqx.string.containsIgnoreCase(aA.toString(),az.toString());case\"DOES_NOT_CONTAIN_CASE_SENSITIVE\":return !i.jqx.string.contains(aA.toString(),az.toString());default:return true}};var ag=new Array();if(an&&an.indexOf){if(an.indexOf(\"|\")>=0||an.indexOf(\" AND \")>=0||an.indexOf(\" OR \")>=0||an.indexOf(\" and \")>=0||an.indexOf(\" or \")>=0){var aj=ax(ay,an);if(aj){return aj}var ak=an.indexOf(\" AND \")>=0?an.split(\" AND \"):new Array();var af=an.indexOf(\" OR \")>=0?an.split(\" OR \"):new Array();var ae=an.indexOf(\" and \")>=0?an.split(\" and \"):new Array();var al=an.indexOf(\" or \")>=0?an.split(\" or \"):new Array();ak=ak.concat(ae);af=af.concat(al);var ad=an.indexOf(\"|\")>=0?an.split(\"|\"):new Array();if(ad.length>0){for(var au=0;au<ad.length;au++){ad[au]=i.trim(ad[au])}}af=af.concat(ad);if(ak.length>0){for(var au=0;au<ak.length;au++){if(!ak[au].indexOf(\" OR \")>=0){ag.push(ak[au])}}}if(af.length>0){for(var au=0;au<af.length;au++){if(!af[au].indexOf(\" AND \")>=0){ag.push(af[au])}}}var ar=undefined;for(var aq=0;aq<ag.length;aq++){var ao=ag[aq];if(ao&&ao.indexOf&&ao.indexOf(\"..\")>=0){var ac=ao.toString().split(\"..\");if(ac.length==2){aj=ay>=ac[0]&&ay<=ac[1]}}else{var aj=ax(ay,ao)}var am=aq<ak.length?\"and\":\"or\";if(ar==undefined){ar=aj}else{if(am==\"or\"){ar=ar||aj}else{ar=ar&&aj}}}return ar}}if(an&&an.indexOf&&an.indexOf(\"..\")>=0){ag=an.toString().split(\"..\");if(ag.length==2){return ay>=ag[0]&&ay<=ag[1]}}return ax(ay,an)}};var e=function(V,U,W){this.filtervalue=V;this.comparisonoperator=U;this.evaluate=function(Y,X){return W(this.filtervalue,Y,this.comparisonoperator)}}}})(jqxBaseFramework);\ndefine(\"jqxdata\", [\"jqxcore\"], function(){});\n\n","/*\r\njQWidgets v4.1.2 (2016-Apr)\r\nCopyright (c) 2011-2016 jQWidgets.\r\nLicense: http://jqwidgets.com/license/\r\n*/\r\n\r\n(function(a){a.jqx.jqxWidget(\"jqxComboBox\",\"\",{});a.extend(a.jqx._jqxComboBox.prototype,{defineInstance:function(){var b={disabled:false,width:200,height:25,items:new Array(),selectedIndex:-1,selectedItems:new Array(),_selectedItems:new Array(),source:null,autoItemsHeight:false,scrollBarSize:a.jqx.utilities.scrollBarSize,arrowSize:18,enableHover:true,enableSelection:true,visualItems:new Array(),groups:new Array(),equalItemsWidth:true,itemHeight:-1,visibleItems:new Array(),emptyGroupText:\"Group\",emptyString:\"\",openDelay:250,closeDelay:300,animationType:\"default\",dropDownWidth:\"auto\",dropDownHeight:\"200px\",autoDropDownHeight:false,enableBrowserBoundsDetection:false,dropDownHorizontalAlignment:\"left\",dropDownVerticalAlignment:\"bottom\",searchMode:\"startswithignorecase\",autoComplete:false,remoteAutoComplete:false,remoteAutoCompleteDelay:500,selectionMode:\"default\",minLength:2,displayMember:\"\",valueMember:\"\",groupMember:\"\",searchMember:\"\",keyboardSelection:true,renderer:null,autoOpen:false,template:\"\",checkboxes:false,promptText:\"\",placeHolder:\"\",rtl:false,listBox:null,validateSelection:null,showCloseButtons:true,renderSelectedItem:null,search:null,popupZIndex:100000,searchString:null,multiSelect:false,showArrow:true,_disabledItems:new Array(),touchMode:\"auto\",autoBind:true,aria:{\"aria-disabled\":{name:\"disabled\",type:\"boolean\"}},events:[\"open\",\"close\",\"select\",\"unselect\",\"change\",\"checkChange\",\"bindingComplete\"]};a.extend(true,this,b);return b},createInstance:function(b){var c=this;this.host.attr(\"role\",\"combobox\");a.jqx.aria(this,\"aria-autocomplete\",\"both\");if(a.jqx._jqxListBox==null||a.jqx._jqxListBox==undefined){throw new Error(\"jqxComboBox: Missing reference to jqxlistbox.js.\")}a.jqx.aria(this);if(this.promptText!=\"\"){this.placeHolder=this.promptText}this.render()},render:function(){var n=this;var p=n.element.nodeName.toLowerCase();if(p==\"select\"||p==\"ul\"||p==\"ol\"){n.field=n.element;if(n.field.className){n._className=n.field.className}var m={title:n.field.title};if(n.field.id.length){m.id=n.field.id.replace(/[^\\w]/g,\"_\")+\"_jqxComboBox\"}else{m.id=a.jqx.utilities.createId()+\"_jqxComboBox\"}var c=a(\"<div></div>\",m);if(!n.width){n.width=a(n.field).width()}if(!n.height){n.height=a(n.field).outerHeight()}n.element.style.cssText=n.field.style.cssText;a(n.field).hide().after(c);var k=n.host.data();n.host=c;n.host.data(k);n.element=c[0];n.element.id=n.field.id;n.field.id=m.id;if(n._className){n.host.addClass(n._className);a(n.field).removeClass(n._className)}if(n.field.tabIndex){var f=n.field.tabIndex;n.field.tabIndex=-1;n.element.tabIndex=f}var s=a.jqx.parseSourceTag(n.field);n.source=s.items;if(n.selectedIndex==-1){n.selectedIndex=s.index}}n.removeHandlers();n.isanimating=false;n.id=a.jqx.utilities.createId();n.element.innerHTML=\"\";var g=a(\"<div style='background-color: transparent; -webkit-appearance: none; outline: none; width:100%; height: 100%; padding: 0px; margin: 0px; border: 0px; position: relative;'><div id='dropdownlistWrapper' style='padding: 0; margin: 0; border: none; background-color: transparent; float: left; width:100%; height: 100%; position: relative;'><div id='dropdownlistContent' style='padding: 0; margin: 0; border-top: none; border-bottom: none; float: left; position: absolute;'/><div id='dropdownlistArrow' role='button' style='padding: 0; margin: 0; border-left-width: 1px; border-bottom-width: 0px; border-top-width: 0px; border-right-width: 0px; float: right; position: absolute;'/></div></div>\");n.comboStructure=g;if(a.jqx._jqxListBox==null||a.jqx._jqxListBox==undefined){throw\"jqxComboBox: Missing reference to jqxlistbox.js.\"}n.touch=a.jqx.mobile.isTouchDevice();if(n.touchMode===true){n.touch=true}n.host.append(g);n.dropdownlistWrapper=n.host.find(\"#dropdownlistWrapper\");n.dropdownlistArrow=n.host.find(\"#dropdownlistArrow\");n.dropdownlistContent=n.host.find(\"#dropdownlistContent\");n.dropdownlistContent.addClass(n.toThemeProperty(\"jqx-combobox-content\"));n.dropdownlistContent.addClass(n.toThemeProperty(\"jqx-widget-content\"));n.dropdownlistWrapper[0].id=\"dropdownlistWrapper\"+n.element.id;n.dropdownlistArrow[0].id=\"dropdownlistArrow\"+n.element.id;n.dropdownlistContent[0].id=\"dropdownlistContent\"+n.element.id;if(n.template){n.dropdownlistArrow.addClass(n.toThemeProperty(\"jqx-\"+n.template+\"\"))}n.dropdownlistContent.append(a('<input autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" style=\"box-sizing: border-box; margin: 0; padding: 0; padding-left: 3px; padding-right: 3px; border: 0;\" type=\"textarea\"/>'));n.input=n.dropdownlistContent.find(\"input\");n.input.addClass(n.toThemeProperty(\"jqx-combobox-input\"));n.input.addClass(n.toThemeProperty(\"jqx-widget-content\"));if(n.host.attr(\"tabindex\")){n.input.attr(\"tabindex\",n.host.attr(\"tabindex\"));n.host.removeAttr(\"tabindex\")}n._addInput();if(n.rtl){n.input.css({direction:\"rtl\"});n.dropdownlistContent.addClass(n.toThemeProperty(\"jqx-combobox-content-rtl\"))}try{var q=\"listBox\"+n.id;var i=a(a.find(\"#\"+q));if(i.length>0){i.remove()}a.jqx.aria(this,\"aria-owns\",q);a.jqx.aria(this,\"aria-haspopup\",true);a.jqx.aria(this,\"aria-multiline\",false);if(n.listBoxContainer){n.listBoxContainer.jqxListBox(\"destroy\")}if(n.container){n.container.remove()}var b=a(\"<div style='overflow: hidden; border: none; background-color: transparent; position: absolute;' id='listBox\"+n.id+\"'><div id='innerListBox\"+n.id+\"'></div></div>\");b.hide();b.appendTo(document.body);n.container=b;n.listBoxContainer=a(a.find(\"#innerListBox\"+n.id));var d=n.width;if(n.dropDownWidth!=\"auto\"){d=n.dropDownWidth}if(n.dropDownHeight==null){n.dropDownHeight=200}n.container.width(parseInt(d)+25);n.container.height(parseInt(n.dropDownHeight)+25);n.addHandler(n.listBoxContainer,\"bindingComplete\",function(e){if(!n.listBox){n.listBox=a.data(n.listBoxContainer[0],\"jqxListBox\").instance}n._raiseEvent(\"6\")});var j=true;n.listBoxContainer.jqxListBox({autoItemsHeight:n.autoItemsHeight,_checkForHiddenParent:false,allowDrop:false,allowDrag:false,checkboxes:n.checkboxes,emptyString:n.emptyString,autoBind:!n.remoteAutoComplete&&n.autoBind,renderer:n.renderer,rtl:n.rtl,itemHeight:n.itemHeight,selectedIndex:n.selectedIndex,incrementalSearch:false,width:d,scrollBarSize:n.scrollBarSize,autoHeight:n.autoDropDownHeight,height:n.dropDownHeight,groupMember:n.groupMember,searchMember:n.searchMember,displayMember:n.displayMember,valueMember:n.valueMember,source:n.source,theme:n.theme,rendered:function(){n.listBox=a.data(n.listBoxContainer[0],\"jqxListBox\").instance;if(n.remoteAutoComplete){if(n.autoDropDownHeight){n.container.height(n.listBox.virtualSize.height+25);n.listBoxContainer.height(n.listBox.virtualSize.height);n.listBox._arrange()}else{n.listBox._arrange();n.listBox.ensureVisible(0);n.listBox._renderItems();n.container.height(n.listBoxContainer.height()+25)}if(n.searchString!=undefined&&n.searchString.length>=n.minLength){var e=n.listBoxContainer.jqxListBox(\"items\");if(e){if(e.length>0){if(!n.isOpened()){n.open()}}else{n.close()}}else{n.close()}}else{n.close()}}else{n.renderSelection(\"mouse\");if(n.multiSelect){n.doMultiSelect(false)}}if(n.rendered){n.rendered()}}});n.listBoxContainer.css({position:\"absolute\",zIndex:n.popupZIndex,top:0,left:0});n.listBoxContainer.css(\"border-top-width\",\"1px\");n.listBoxContainer.addClass(n.toThemeProperty(\"jqx-popup\"));if(a.jqx.browser.msie){n.listBoxContainer.addClass(n.toThemeProperty(\"jqx-noshadow\"))}if(n.template){n.listBoxContainer.addClass(n.toThemeProperty(\"jqx-\"+n.template+\"-item\"))}n.listBox=a.data(n.listBoxContainer[0],\"jqxListBox\").instance;n.listBox.enableSelection=n.enableSelection;n.listBox.enableHover=n.enableHover;n.listBox.equalItemsWidth=n.equalItemsWidth;n.listBox._arrange();n.addHandler(n.listBoxContainer,\"unselect\",function(e){if(!n.multiSelect){n._raiseEvent(\"3\",{index:e.args.index,type:e.args.type,item:e.args.item})}});n.addHandler(n.listBoxContainer,\"change\",function(e){if(!n.multiSelect){n.selectedIndex=n.listBox.selectedIndex;n._raiseEvent(\"4\",{index:e.args.index,type:e.args.type,item:e.args.item})}});if(n.animationType==\"none\"){n.container.css(\"display\",\"none\")}else{n.container.hide()}j=false}catch(l){throw l}var r=this;r.input.attr(\"disabled\",r.disabled);var h=a.jqx.browser.msie&&a.jqx.browser.version<8;if(!h){r.input.attr(\"placeholder\",r.placeHolder)}n.propertyChangeMap.disabled=function(e,u,t,v){if(v){e.host.addClass(r.toThemeProperty(\"jqx-combobox-state-disabled\"));e.host.addClass(r.toThemeProperty(\"jqx-fill-state-disabled\"));e.dropdownlistContent.addClass(r.toThemeProperty(\"jqx-combobox-content-disabled\"))}else{e.host.removeClass(r.toThemeProperty(\"jqx-combobox-state-disabled\"));e.host.removeClass(r.toThemeProperty(\"jqx-fill-state-disabled\"));e.dropdownlistContent.removeClass(r.toThemeProperty(\"jqx-combobox-content-disabled\"))}e.input.attr(\"disabled\",e.disabled);a.jqx.aria(e,\"aria-disabled\",e.disabled);e.input.attr(\"disabled\",e.disabled)};if(n.disabled){n.host.addClass(n.toThemeProperty(\"jqx-combobox-state-disabled\"));n.host.addClass(n.toThemeProperty(\"jqx-fill-state-disabled\"));n.dropdownlistContent.addClass(n.toThemeProperty(\"jqx-combobox-content-disabled\"))}n.host.addClass(n.toThemeProperty(\"jqx-combobox-state-normal\"));n.host.addClass(n.toThemeProperty(\"jqx-combobox\"));n.host.addClass(n.toThemeProperty(\"jqx-rc-all\"));n.host.addClass(n.toThemeProperty(\"jqx-widget\"));n.host.addClass(n.toThemeProperty(\"jqx-widget-content\"));n.dropdownlistArrowIcon=a(\"<div></div>\");if(n.dropDownVerticalAlignment==\"top\"){n.dropdownlistArrowIcon.addClass(n.toThemeProperty(\"jqx-icon-arrow-up\"))}else{n.dropdownlistArrowIcon.addClass(n.toThemeProperty(\"jqx-icon-arrow-down\"))}n.dropdownlistArrowIcon.addClass(n.toThemeProperty(\"jqx-icon\"));n.dropdownlistArrow.append(n.dropdownlistArrowIcon);n.dropdownlistArrow.addClass(n.toThemeProperty(\"jqx-combobox-arrow-normal\"));n.dropdownlistArrow.addClass(n.toThemeProperty(\"jqx-fill-state-normal\"));if(!n.rtl){n.dropdownlistArrow.addClass(n.toThemeProperty(\"jqx-rc-r\"))}else{n.dropdownlistArrow.addClass(n.toThemeProperty(\"jqx-rc-l\"))}n._setSize();n._updateHandlers();n.addHandler(n.input,\"keyup.textchange\",function(e){if(n._writeTimer){clearTimeout(n._writeTimer)}n._writeTimer=setTimeout(function(){var t=n._search(e);if(n.cinput&&n.input){if(!n.displayMember){n.cinput[0].value=n.input[0].value}else{n._updateInputSelection()}}},50)});if(a.jqx.browser.msie&&a.jqx.browser.version<8){if(n.host.parents(\".jqx-window\").length>0){var o=n.host.parents(\".jqx-window\").css(\"z-index\");b.css(\"z-index\",o+10);n.listBoxContainer.css(\"z-index\",o+10)}}if(n.checkboxes){n.input.attr(\"readonly\",true);a.jqx.aria(this,\"aria-readonly\",true)}else{a.jqx.aria(this,\"aria-readonly\",false)}if(!n.remoteAutoComplete){n.searchString=\"\"}},_addInput:function(){var b=this.host.attr(\"name\");this.cinput=a(\"<input type='hidden'/>\");this.host.append(this.cinput);if(b){this.cinput.attr(\"name\",b)}},_updateInputSelection:function(){if(this.cinput){var c=new Array();if(this.selectedIndex==-1){this.cinput.val(\"\")}else{var e=this.getSelectedItem();if(e!=null){this.cinput.val(e.value);c.push(e.value)}else{this.cinput.val(this.dropdownlistContent.text())}}if(this.checkboxes||this.multiSelect){if(!this.multiSelect){var b=this.getCheckedItems()}else{var b=this.getSelectedItems()}var f=\"\";if(b!=null){for(var d=0;d<b.length;d++){if(d==b.length-1){f+=b[d].value}else{f+=b[d].value+\",\"}c.push(b[d].value)}}this.cinput.val(f)}if(this.field&&this.cinput){if(this.field.nodeName.toLowerCase()==\"select\"){a.each(this.field,function(g,h){a(this).removeAttr(\"selected\");this.selected=c.indexOf(this.value)>=0;if(this.selected){a(this).attr(\"selected\",true)}})}else{a.each(this.items,function(g,h){a(this.originalItem.originalItem).removeAttr(\"data-selected\");this.selected=c.indexOf(this.value)>=0;if(this.selected){a(this.originalItem.originalItem).attr(\"data-selected\",true)}})}}}},_search:function(m){var d=this;if(m.keyCode==9){return}if(d.searchMode==\"none\"||d.searchMode==null||d.searchMode==\"undefined\"){return}if(m.keyCode==16||m.keyCode==17||m.keyCode==20){return}if(d.checkboxes){return}if(d.multiSelect){var n=a(\"<span style='visibility: hidden; white-space: nowrap;'>\"+d.input.val()+\"</span>\");n.addClass(d.toThemeProperty(\"jqx-widget\"));a(document.body).append(n);var j=n.width()+15;n.remove();if(j>d.host.width()){j=d.host.width()}if(j<25){j=25}d.input.css(\"width\",j+\"px\");if(d.selectedItems.length==0){d.input.css(\"width\",\"100%\");d.input.attr(\"placeholder\",d.placeHolder)}else{d.input.attr(\"placeholder\",\"\")}var f=parseInt(this._findPos(d.host[0])[1])+parseInt(d.host.outerHeight())-1+\"px\";var o=a.jqx.mobile.isSafariMobileBrowser()||a.jqx.mobile.isWindowsPhone();if((o!=null&&o)){f=a.jqx.mobile.getTopPos(this.element)+parseInt(d.host.outerHeight());if(a(\"body\").css(\"border-top-width\")!=\"0px\"){f=parseInt(f)-this._getBodyOffset().top+\"px\"}}d.container.css(\"top\",f);var i=parseInt(d.host.height());d.dropdownlistArrow.height(i)}if(!d.isanimating){if(m.altKey&&m.keyCode==38){d.hideListBox(\"altKey\");return false}if(m.altKey&&m.keyCode==40){if(!d.isOpened()){d.showListBox(\"altKey\")}return false}}if(m.keyCode==37||m.keyCode==39){return false}if(m.altKey||m.keyCode==18){return}if(m.keyCode>=33&&m.keyCode<=40){return}if(m.ctrlKey||d.ctrlKey){if(m.keyCode!=88&&m.keyCode!=86){return}}var l=d.input.val();if(l.length==0&&!d.autoComplete){d.listBox.searchString=d.input.val();d.listBox.clearSelection();d.hideListBox(\"search\");d.searchString=d.input.val();return}if(d.remoteAutoComplete){var s=this;var p=function(){s.listBox.vScrollInstance.value=0};if(l.length>=s.minLength){if(!m.ctrlKey&&!m.altKey){if(s.searchString!=l){var k=s.listBoxContainer.jqxListBox(\"source\");if(k==null){s.listBoxContainer.jqxListBox({source:s.source})}if(d._searchTimer){clearTimeout(d._searchTimer)}if(m.keyCode!=13&&m.keyCode!=27){d._searchTimer=setTimeout(function(){p();if(s.autoDropDownHeight){s.listBox.autoHeight=true}s.searchString=s.input.val();if(s.search!=null){s.search(s.input.val())}else{throw\"'search' function is not defined\"}},d.remoteAutoCompleteDelay)}}s.searchString=l}}else{if(d._searchTimer){clearTimeout(d._searchTimer)}p();s.searchString=\"\";s.listBoxContainer.jqxListBox({source:null})}return}var s=this;if(l===s.searchString){return}if(!(m.keyCode==\"27\"||m.keyCode==\"13\")){var b=d._updateItemsVisibility(l);var e=b.matchItems;var c=b.index;if(!d.autoComplete&&!d.removeAutoComplete){if(!d.multiSelect||(d.multiSelect&&c>=0)){d.listBox.selectIndex(c);var r=d.listBox.isIndexInView(c);if(!r){d.listBox.ensureVisible(c)}else{d.listBox._renderItems()}}}if(d.autoComplete&&e.length===0){d.hideListBox(\"search\")}}if(m.keyCode==\"13\"){var g=d.container.css(\"display\")==\"block\";if(g&&!d.isanimating){d.hideListBox(\"keyboard\");d._oldvalue=d.listBox.selectedValue;return}}else{if(m.keyCode==\"27\"){var g=d.container.css(\"display\")==\"block\";if(g&&!d.isanimating){if(!h.multiSelect){var q=d.listBox.getVisibleItem(d._oldvalue);if(q){var h=this;setTimeout(function(){if(h.autoComplete){h._updateItemsVisibility(\"\")}h.listBox.selectIndex(q.index);h.renderSelection(\"api\")},h.closeDelay)}else{d.clearSelection()}}else{h.input.val(\"\");h.listBox.selectedValue=null}d.hideListBox(\"keyboard\");d.renderSelection(\"api\");m.preventDefault();return false}}else{if(!d.isOpened()&&!d.opening&&!m.ctrlKey){if(d.listBox.visibleItems&&d.listBox.visibleItems.length>0){if(d.input.val()!=d.searchString&&d.searchString!=undefined&&c!=-1){d.showListBox(\"search\")}}}d.searchString=d.input.val();if(d.searchString==\"\"){if(!d.listBox.itemsByValue[\"\"]){c=-1;if(!d.multiSelect){d.clearSelection()}}}var q=d.listBox.getVisibleItem(c);if(q!=undefined){d._updateInputSelection()}}}},val:function(c){if(!this.input){return\"\"}var d=function(f){for(var e in f){if(f.hasOwnProperty(e)){return false}}if(typeof c==\"number\"){return false}if(typeof c==\"date\"){return false}if(typeof c==\"boolean\"){return false}if(typeof c==\"string\"){return false}return true};if(d(c)||arguments.length==0){var b=this.getSelectedItem();if(b){return b.value}return this.input.val()}else{var b=this.getItemByValue(c);if(b!=null){this.selectItem(b)}else{this.input.val(c)}return this.input.val()}},focus:function(){var c=this;var b=function(){c.input.focus();var d=c.input.val();c._setSelection(0,d.length)};b();setTimeout(function(){b()},10)},_setSelection:function(e,b){try{if(\"selectionStart\" in this.input[0]){this.input[0].focus();this.input[0].setSelectionRange(e,b)}else{var c=this.input[0].createTextRange();c.collapse(true);c.moveEnd(\"character\",b);c.moveStart(\"character\",e);c.select()}}catch(d){}},setContent:function(b){this.input.val(b)},_updateItemsVisibility:function(l){var i=this.getItems();if(i==undefined){return{index:-1,matchItem:new Array()}}var j=this;var g=-1;var m=new Array();var k=0;a.each(i,function(p){var r=\"\";if(!this.isGroup){if(this.searchLabel){r=this.searchLabel}else{if(this.label){r=this.label}else{if(this.value){r=this.value}else{if(this.title){r=this.title}else{r=\"jqxItem\"}}}}r=r.toString();var q=false;switch(j.searchMode){case\"containsignorecase\":q=a.jqx.string.containsIgnoreCase(r,l);break;case\"contains\":q=a.jqx.string.contains(r,l);break;case\"equals\":q=a.jqx.string.equals(r,l);break;case\"equalsignorecase\":q=a.jqx.string.equalsIgnoreCase(r,l);break;case\"startswith\":q=a.jqx.string.startsWith(r,l);break;case\"startswithignorecase\":q=a.jqx.string.startsWithIgnoreCase(r,l);break;case\"endswith\":q=a.jqx.string.endsWith(r,l);break;case\"endswithignorecase\":q=a.jqx.string.endsWithIgnoreCase(r,l);break}if(j.autoComplete&&!q){this.visible=false}if(q&&j.autoComplete){m[k++]=this;this.visible=true;g=this.visibleIndex}if(l==\"\"&&j.autoComplete){this.visible=true;q=false}if(j.multiSelect){this.disabled=false;if(j.selectedItems.indexOf(this.value)>=0||j._disabledItems.indexOf(this.value)>=0){this.disabled=true;q=false}}if(!j.multiSelect){if(q&&!j.autoComplete){g=this.visibleIndex;return false}}else{if(q&&!j.autoComplete){if(g===-1){g=this.visibleIndex}return true}}}});this.listBox.searchString=l;var f=this;var h=function(){if(!f.multiSelect){return}var p=0;var s=false;var r=null;for(var q=0;q<f.listBox.items.length;q++){f.listBox.selectedIndexes[q]=-1;if(!f.listBox.items[q].disabled){if(s==false){r=f.listBox.items[q];p=r.visibleIndex;s=true}}}f.listBox.selectedIndex=-1;f.listBox.selectedIndex=p;f.listBox.selectedIndexes[p]=p;if(f.listBox.visibleItems.length>0){if(r){f.listBox.selectedValue=r.value}else{f.listBox.selectedValue=null}}else{f.listBox.selectedValue=null}f.listBox.ensureVisible(0)};if(!this.autoComplete){h();return{index:g,matchItems:m}}this.listBox.renderedVisibleItems=new Array();var b=this.listBox.vScrollInstance.value;this.listBox.vScrollInstance.value=0;this.listBox.visibleItems=new Array();this.listBox._renderItems();var e=this.listBox.selectedValue;var o=this.listBox.getItemByValue(e);if(!this.multiSelect){if(o){if(o.visible){this.listBox.selectedIndex=o.visibleIndex;for(var d=0;d<this.listBox.items.length;d++){this.listBox.selectedIndexes[d]=-1}this.listBox.selectedIndexes[o.visibleIndex]=o.visibleIndex}else{for(var d=0;d<this.listBox.items.length;d++){this.listBox.selectedIndexes[d]=-1}this.listBox.selectedIndex=-1}}}else{h()}this.listBox._renderItems();var n=this.listBox._calculateVirtualSize().height;if(n<b){b=0;this.listBox.vScrollInstance.refresh()}if(this.autoDropDownHeight){this._disableSelection=true;if(this.listBox.autoHeight!=this.autoDropDownHeight){this.listBoxContainer.jqxListBox({autoHeight:this.autoDropDownHeight})}this.container.height(n+25);this.listBox.invalidate();this._disableSelection=false}else{if(n<parseInt(this.dropDownHeight)){var c=this.listBox.hScrollBar[0].style.visibility==\"hidden\"?0:20;this.listBox.height=c+n;this.container.height(n+25+c);this.listBox.invalidate()}else{this.listBox.height=parseInt(this.dropDownHeight);this.container.height(parseInt(this.dropDownHeight)+25);this.listBox.invalidate()}}this.listBox.vScrollInstance.setPosition(b);return{index:g,matchItems:m}},findItems:function(e){var b=this.getItems();var d=this;var c=0;var f=new Array();a.each(b,function(g){var j=\"\";if(!this.isGroup){if(this.label){j=this.label}else{if(this.value){j=this.value}else{if(this.title){j=this.title}else{j=\"jqxItem\"}}}var h=false;switch(d.searchMode){case\"containsignorecase\":h=a.jqx.string.containsIgnoreCase(j,e);break;case\"contains\":h=a.jqx.string.contains(j,e);break;case\"equals\":h=a.jqx.string.equals(j,e);break;case\"equalsignorecase\":h=a.jqx.string.equalsIgnoreCase(j,e);break;case\"startswith\":h=a.jqx.string.startsWith(j,e);break;case\"startswithignorecase\":h=a.jqx.string.startsWithIgnoreCase(j,e);break;case\"endswith\":h=a.jqx.string.endsWith(j,e);break;case\"endswithignorecase\":h=a.jqx.string.endsWithIgnoreCase(j,e);break}if(h){f[c++]=this}}});return f},_resetautocomplete:function(){a.each(this.listBox.items,function(b){this.visible=true});this.listBox.vScrollInstance.value=0;this.listBox._addItems();this.listBox.autoHeight=false;this.listBox.height=this.dropDownHeight;this.container.height(parseInt(this.dropDownHeight)+25);this.listBoxContainer.height(parseInt(this.dropDownHeight));this.listBox._arrange();this.listBox._addItems();this.listBox._renderItems()},getItems:function(){var b=this.listBox.items;return b},getVisibleItems:function(){return this.listBox.getVisibleItems()},_setSize:function(){if(this.width!=null&&this.width.toString().indexOf(\"px\")!=-1){this.host.width(this.width)}else{if(this.width!=undefined&&!isNaN(this.width)){this.host.width(this.width)}}if(this.height!=null&&this.height.toString().indexOf(\"px\")!=-1){this.host.height(this.height)}else{if(this.height!=undefined&&!isNaN(this.height)){this.host.height(this.height)}}var e=false;if(this.width!=null&&this.width.toString().indexOf(\"%\")!=-1){e=true;this.host.width(this.width)}if(this.height!=null&&this.height.toString().indexOf(\"%\")!=-1){e=true;this.host.height(this.height)}if(e){var c=this;var b=this.host.width();if(this.dropDownWidth!=\"auto\"){b=this.dropDownWidth}this.listBoxContainer.jqxListBox({width:b});this.container.width(parseInt(b)+25);this._arrange()}var c=this;var d=function(){if(c.multiSelect){c.host.height(c.height)}c._arrange();if(c.multiSelect){c.host.height(\"auto\")}};c.oldWidth=c.host.width();c.oldHeight=c.host.height();a.jqx.utilities.resize(this.host,function(){var f=c.host.width();var g=c.host.height();if(f!=c.oldWidth||g!=c.oldHeight){d();c.hideListBox(\"api\")}c.oldWidth=f;c.oldHeight=g})},isOpened:function(){var c=this;var b=a.data(document.body,\"openedCombojqxListBox\"+this.element.id);if(this.container.css(\"display\")!=\"block\"){return false}if(b!=null&&b==c.listBoxContainer){return true}return false},_updateHandlers:function(){var d=this;var e=false;this.removeHandlers();if(this.multiSelect){this.addHandler(this.dropdownlistContent,\"click\",function(f){if(f.target.href){return false}d.input.focus();setTimeout(function(){d.input.focus()},10)});this.addHandler(this.dropdownlistContent,\"focus\",function(f){if(f.target.href){return false}d.input.focus();setTimeout(function(){d.input.focus()},10)})}if(!this.touch){if(this.host.parents()){this.addHandler(this.host.parents(),\"scroll.combobox\"+this.element.id,function(f){var g=d.isOpened();if(g){d.close()}})}this.addHandler(this.host,\"mouseenter\",function(){if(!d.disabled&&d.enableHover){e=true;d.host.addClass(d.toThemeProperty(\"jqx-combobox-state-hover\"));if(d.dropDownVerticalAlignment==\"top\"){d.dropdownlistArrowIcon.addClass(d.toThemeProperty(\"jqx-icon-arrow-up\"))}else{d.dropdownlistArrowIcon.addClass(d.toThemeProperty(\"jqx-icon-arrow-down-hover\"))}d.dropdownlistArrow.addClass(d.toThemeProperty(\"jqx-combobox-arrow-hover\"));d.dropdownlistArrow.addClass(d.toThemeProperty(\"jqx-fill-state-hover\"))}});this.addHandler(this.host,\"mouseleave\",function(){if(!d.disabled&&d.enableHover){d.host.removeClass(d.toThemeProperty(\"jqx-combobox-state-hover\"));d.dropdownlistArrowIcon.removeClass(d.toThemeProperty(\"jqx-icon-arrow-down-hover\"));d.dropdownlistArrowIcon.removeClass(d.toThemeProperty(\"jqx-icon-arrow-up-hover\"));d.dropdownlistArrow.removeClass(d.toThemeProperty(\"jqx-combobox-arrow-hover\"));d.dropdownlistArrow.removeClass(d.toThemeProperty(\"jqx-fill-state-hover\"));e=false}})}if(d.autoOpen){this.addHandler(this.host,\"mouseenter\",function(){var f=d.isOpened();if(!f&&d.autoOpen){d.open();d.host.focus()}});this.addHandler(a(document),\"mousemove.\"+d.id,function(i){var h=d.isOpened();if(h&&d.autoOpen){var m=d.host.coord();var l=m.top;var k=m.left;var j=d.container.coord();var f=j.left;var g=j.top;canClose=true;if(i.pageY>=l&&i.pageY<=l+d.host.height()+2){if(i.pageX>=k&&i.pageX<k+d.host.width()){canClose=false}}if(i.pageY>=g&&i.pageY<=g+d.container.height()-20){if(i.pageX>=f&&i.pageX<f+d.container.width()){canClose=false}}if(canClose){d.close()}}})}var c=\"mousedown\";if(this.touch){c=a.jqx.mobile.getTouchEventName(\"touchstart\")}var b=function(h){if(!d.disabled){var f=d.container.css(\"display\")==\"block\";if(!d.isanimating){if(f){d.hideListBox(\"api\");if(!a.jqx.mobile.isTouchDevice()){d.input.focus();setTimeout(function(){d.input.focus()},10)}return true}else{if(d.autoDropDownHeight){d.container.height(d.listBoxContainer.height()+25);var g=d.listBoxContainer.jqxListBox(\"autoHeight\");if(!g){d.listBoxContainer.jqxListBox({autoHeight:d.autoDropDownHeight});d.listBox._arrange();d.listBox.ensureVisible(0);d.listBox._renderItems();d.container.height(d.listBoxContainer.height()+25)}}d.showListBox(\"api\");if(!a.jqx.mobile.isTouchDevice()){setTimeout(function(){d.input.focus()},10)}else{return true}}}}};this.addHandler(this.dropdownlistArrow,c,function(f){b(f)});this.addHandler(this.dropdownlistArrowIcon,c,function(f){});this.addHandler(this.host,\"focus\",function(){d.focus()});this.addHandler(this.input,\"focus\",function(f){d.focused=true;d.host.addClass(d.toThemeProperty(\"jqx-combobox-state-focus\"));d.host.addClass(d.toThemeProperty(\"jqx-fill-state-focus\"));d.dropdownlistContent.addClass(d.toThemeProperty(\"jqx-combobox-content-focus\"));if(f.stopPropagation){f.stopPropagation()}});this.addHandler(this.input,\"blur\",function(){d.focused=false;if(!d.isOpened()&&!d.opening){if(d.selectionMode==\"dropDownList\"){d._selectOldValue()}d.host.removeClass(d.toThemeProperty(\"jqx-combobox-state-focus\"));d.host.removeClass(d.toThemeProperty(\"jqx-fill-state-focus\"));d.dropdownlistContent.removeClass(d.toThemeProperty(\"jqx-combobox-content-focus\"))}if(d._searchTimer){clearTimeout(d._searchTimer)}});this.addHandler(a(document),\"mousedown.\"+this.id,d.closeOpenedListBox,{me:this,listbox:this.listBox,id:this.id});if(this.touch){this.addHandler(a(document),a.jqx.mobile.getTouchEventName(\"touchstart\")+\".\"+this.id,d.closeOpenedListBox,{me:this,listbox:this.listBox,id:this.id})}this.addHandler(this.host,\"keydown\",function(k){var h=d.container.css(\"display\")==\"block\";d.ctrlKey=k.ctrlKey;if(d.host.css(\"display\")==\"none\"){return true}if(k.keyCode==\"13\"||k.keyCode==\"9\"){if(h&&!d.isanimating){if(d.listBox.selectedIndex!=-1){d.renderSelection(\"mouse\");var f=d.listBox.selectedIndex;var j=d.listBox.getVisibleItem(f);if(j){d.listBox.selectedValue=j.value}d._setSelection(d.input.val().length,d.input.val().length);d.hideListBox(\"keyboard\")}if(k.keyCode==\"13\"){d._oldvalue=d.listBox.selectedValue}if(!d.keyboardSelection){d._raiseEvent(\"2\",{index:d.selectedIndex,type:\"keyboard\",item:d.getItem(d.selectedIndex)})}if(k.keyCode==\"9\"){return true}return false}}if(k.keyCode==115){if(!d.isanimating){if(!d.isOpened()){d.showListBox(\"keyboard\")}else{if(d.isOpened()){d.hideListBox(\"keyboard\")}}}return false}if(k.altKey){if(d.host.css(\"display\")==\"block\"){if(!d.isanimating){if(k.keyCode==38){if(d.isOpened()){d.hideListBox(\"altKey\")}}else{if(k.keyCode==40){if(!d.isOpened()){d.showListBox(\"altKey\")}}}}}}if(k.keyCode==\"27\"||k.keyCode==\"9\"){if(d.isOpened()&&!d.isanimating){if(k.keyCode==\"27\"){if(!d.multiSelect){var j=d.listBox.getItemByValue(d._oldvalue);if(j){setTimeout(function(){if(d.autoComplete){d._updateItemsVisibility(\"\")}d.listBox.selectIndex(j.index);d.renderSelection(\"api\")},d.closeDelay)}else{d.clearSelection()}}else{d.listBox.selectedValue=null;d.input.val(\"\")}}d.hideListBox(\"keyboard\");if(k.keyCode==\"9\"){return true}d.renderSelection(\"api\");k.preventDefault();return false}}var g=k.keyCode;if(h&&!d.disabled&&g!=8){return d.listBox._handleKeyDown(k)}else{if(!d.disabled&&!h){var g=k.keyCode;if(g==33||g==34||g==35||g==36||g==38||g==40){return d.listBox._handleKeyDown(k)}}}if(g===8&&d.multiSelect){if(d.input.val().length===0){var i=d.selectedItems[d.selectedItems.length-1];d.selectedItems.pop();d._selectedItems.pop();if(i){d._raiseEvent(\"3\",{index:i.index,type:\"keyboard\",item:i});d._raiseEvent(\"4\",{index:i.index,type:\"keyboard\",item:i})}d.listBox.selectedValue=null;d.doMultiSelect();return false}}});this.addHandler(this.listBoxContainer,\"checkChange\",function(f){d.renderSelection(\"mouse\");d._updateInputSelection();d._raiseEvent(5,{label:f.args.label,value:f.args.value,checked:f.args.checked,item:f.args.item})});this.addHandler(this.listBoxContainer,\"select\",function(f){if(!d.disabled){if(f.args.type!=\"keyboard\"||d.keyboardSelection){d.renderSelection(f.args.type);if(!d.multiSelect){d._raiseEvent(\"2\",{index:f.args.index,type:f.args.type,item:f.args.item})}if(f.args.type==\"mouse\"){d._oldvalue=d.listBox.selectedValue;if(!d.checkboxes){d.hideListBox(\"mouse\");if(!d.touch){d.input.focus()}else{return false}}}}}});if(this.listBox!=null&&this.listBox.content!=null){this.addHandler(this.listBox.content,\"click\",function(f){if(!d.disabled){if(d.listBox.itemswrapper){if(f.target===d.listBox.itemswrapper[0]){return true}}if(f.target&&f.target.className){if(f.target.className.indexOf(\"jqx-fill-state-disabled\")>=0){return true}}d.renderSelection(\"mouse\");d._oldvalue=d.listBox.selectedValue;if(!d.touch&&!d.ishiding){if(!d.checkboxes){d.hideListBox(\"mouse\");d.input.focus()}}if(d.touch===true){if(!d.checkboxes){d.hideListBox(\"mouse\")}}}})}},_selectOldValue:function(){var b=this;if(b.listBox.selectedIndex==-1){if(!b.multiSelect){var c=b.listBox.getItemByValue(b._oldvalue);if(c){setTimeout(function(){if(b.autoComplete){b._updateItemsVisibility(\"\")}b.listBox.selectIndex(c.index);b.renderSelection(\"api\")},b.closeDelay)}else{b.clearSelection();b.listBox.selectIndex(0);b.renderSelection(\"api\")}}else{b.listBox.selectedValue=null;b.input.val(\"\")}}else{b.renderSelection(\"api\")}},removeHandlers:function(){var c=this;if(this.dropdownlistWrapper!=null){this.removeHandler(this.dropdownlistWrapper,\"mousedown\")}if(this.dropdownlistContent){this.removeHandler(this.dropdownlistContent,\"click\");this.removeHandler(this.dropdownlistContent,\"focus\")}this.removeHandler(this.host,\"keydown\");this.removeHandler(this.host,\"focus\");if(this.input!=null){this.removeHandler(this.input,\"focus\");this.removeHandler(this.input,\"blur\")}this.removeHandler(this.host,\"mouseenter\");this.removeHandler(this.host,\"mouseleave\");this.removeHandler(a(document),\"mousemove.\"+c.id);if(this.listBoxContainer){this.removeHandler(this.listBoxContainer,\"checkChange\");this.removeHandler(this.listBoxContainer,\"select\")}if(this.host.parents()){this.removeHandler(this.host.parents(),\"scroll.combobox\"+this.element.id)}if(this.dropdownlistArrowIcon&&this.dropdownlistArrow){var b=\"mousedown\";if(this.touch){b=a.jqx.mobile.getTouchEventName(\"touchstart\")}this.removeHandler(this.dropdownlistArrowIcon,b);this.removeHandler(this.dropdownlistArrow,b)}},getItem:function(b){var c=this.listBox.getItem(b);return c},getItemByValue:function(c){var b=this.listBox.getItemByValue(c);return b},getVisibleItem:function(b){var c=this.listBox.getVisibleItem(b);return c},renderSelection:function(j){if(j==undefined||j==\"none\"){return}if(this._disableSelection===true){return}if(this.listBox==null){return}if(this.multiSelect){return}var k=this.listBox.visibleItems[this.listBox.selectedIndex];if(this.autoComplete&&!this.checkboxes){if(this.listBox.selectedValue!==undefined){var k=this.getItemByValue(this.listBox.selectedValue)}}if(this.checkboxes){var f=this.getCheckedItems();if(f!=null&&f.length>0){k=f[0]}else{k=null}}if(k==null){var d=a.jqx.browser.msie&&a.jqx.browser.version<8;this.input.val(\"\");this.input.attr(\"value\",\"\");if(!d){this.input.attr(\"placeholder\",this.placeHolder)}this._updateInputSelection();return}this.selectedIndex=this.listBox.selectedIndex;var c=a(\"<span></span>\");if(k.label!=undefined&&k.label!=null&&k.label.toString().length>0){a.jqx.utilities.html(c,k.label)}else{if(k.value!=undefined&&k.value!=null&&k.value.toString().length>0){a.jqx.utilities.html(c,k.value)}else{if(k.title!=undefined&&k.title!=null&&k.title.toString().length>0){a.jqx.utilities.html(c,k.title)}else{a.jqx.utilities.html(c,this.emptyString)}}}var b=c.outerHeight();if(this.checkboxes){var g=this.getCheckedItems();var h=\"\";for(var e=0;e<g.length;e++){if(e==g.length-1){h+=g[e].label}else{h+=g[e].label+\", \"}}this.input.val(h)}else{this.input.val(c.text())}c.remove();this._updateInputSelection();if(this.renderSelectedItem){var l=this.renderSelectedItem(this.listBox.selectedIndex,k);if(l!=undefined){this.input[0].value=l}}this.input.attr(\"value\",this.input.val());if(this.listBox&&this.listBox._activeElement){a.jqx.aria(this,\"aria-activedescendant\",this.listBox._activeElement.id)}},dataBind:function(){this.listBoxContainer.jqxListBox({source:this.source});this.renderSelection(\"mouse\");if(this.source==null){this.clearSelection()}},clear:function(){this.listBoxContainer.jqxListBox({source:null});this.clearSelection()},clearSelection:function(b){this.selectedIndex=-1;this.listBox.clearSelection();this.input.val(\"\");if(this.multiSelect){this.listBox.selectedValue=\"\";this.selectedItems=new Array();this._selectedItems=new Array();this.doMultiSelect(false)}},unselectIndex:function(c,d){if(isNaN(c)){return}if(this.autoComplete){this._updateItemsVisibility(\"\")}this.listBox.unselectIndex(c,d);this.renderSelection(\"mouse\");if(this.multiSelect){if(c>=0){var b=this.getItem(c);var e=this.selectedItems.indexOf(b.value);if(e>=0){if(b.value===this.listBox.selectedValue){this.listBox.selectedValue=null}this.selectedItems.splice(e,1);this._selectedItems.splice(e,1)}}this.doMultiSelect(false)}},selectIndex:function(b,d,e,c){if(this.autoComplete){this._updateItemsVisibility(\"\")}this.listBox.selectIndex(b,d,e,c);this.renderSelection(\"mouse\");this.selectedIndex=b;if(this.multiSelect){this.doMultiSelect()}},selectItem:function(b){if(this.autoComplete){this._updateItemsVisibility(\"\")}if(this.listBox!=undefined){this.listBox.selectedIndex=-1;this.listBox.selectItem(b);this.selectedIndex=this.listBox.selectedIndex;this.renderSelection(\"mouse\");if(this.multiSelect){this.doMultiSelect(false)}}},unselectItem:function(d){if(this.autoComplete){this._updateItemsVisibility(\"\")}if(this.listBox!=undefined){this.listBox.unselectItem(d);this.renderSelection(\"mouse\");if(this.multiSelect){var b=this.getItemByValue(d);if(b){var c=this.selectedItems.indexOf(b.value);if(c>=0){if(b.value===this.listBox.selectedValue){this.listBox.selectedValue=null}this.selectedItems.splice(c,1);this._selectedItems.splice(c,1)}}this.doMultiSelect(false)}}},checkItem:function(b){if(this.autoComplete){this._updateItemsVisibility(\"\")}if(this.listBox!=undefined){this.listBox.checkItem(b)}},uncheckItem:function(b){if(this.autoComplete){this._updateItemsVisibility(\"\")}if(this.listBox!=undefined){this.listBox.uncheckItem(b)}},indeterminateItem:function(b){if(this.autoComplete){this._updateItemsVisibility(\"\")}if(this.listBox!=undefined){this.listBox.indeterminateItem(b)}},getSelectedValue:function(){return this.listBox.selectedValue},getSelectedIndex:function(){if(!this.multiSelect){return this.listBox.selectedIndex}else{if(this.remoteAutoComplete&&this.multiSelect&&this._selectedItems.length>0){return this.getSelectedItems()[0].index}if(this._selectedItems&&this._selectedItems.length>0){return this.getSelectedItems()[0].index}}},getSelectedItem:function(){if(!this.multiSelect){return this.getVisibleItem(this.listBox.selectedIndex)}else{if(this.remoteAutoComplete&&this.multiSelect&&this._selectedItems.length>0){return this.getSelectedItems()[0]}if(this._selectedItems&&this._selectedItems.length>0){return this.getSelectedItems()[0]}return null}},getSelectedItems:function(){if(this.remoteAutoComplete&&this.multiSelect){return this._selectedItems}var c=new Array();var b=this;a.each(this.selectedItems,function(){var d=b.getItemByValue(this);if(d){c.push(d)}else{var d=b._selectedItems[this];if(d){c.push(d)}}});return c},getCheckedItems:function(){return this.listBox.getCheckedItems()},checkIndex:function(b){this.listBox.checkIndex(b)},uncheckIndex:function(b){this.listBox.uncheckIndex(b)},indeterminateIndex:function(b){this.listBox.indeterminateIndex(b)},checkAll:function(){this.listBox.checkAll();this.renderSelection(\"mouse\")},uncheckAll:function(){this.listBox.uncheckAll();this.renderSelection(\"mouse\")},insertAt:function(c,b){if(c==null){return false}return this.listBox.insertAt(c,b)},addItem:function(b){return this.listBox.addItem(b)},removeAt:function(c){var b=this.listBox.removeAt(c);this.renderSelection(\"mouse\");return b},removeItem:function(c){var b=this.listBox.removeItem(c);this.renderSelection(\"mouse\");return b},updateItem:function(c,d){var b=this.listBox.updateItem(c,d);this.renderSelection(\"mouse\");return b},updateAt:function(d,c){var b=this.listBox.updateAt(d,c);this.renderSelection(\"mouse\");return b},ensureVisible:function(b){return this.listBox.ensureVisible(b)},disableAt:function(b){var c=this.getVisibleItem(b);if(c){this._disabledItems.push(c.value)}return this.listBox.disableAt(b)},enableAt:function(b){var c=this.getVisibleItem(b);if(c){this._disabledItems.splice(this._disabledItems.indexOf(c.value),1)}return this.listBox.enableAt(b)},disableItem:function(b){var b=this.getVisibleItem(b);if(b){this._disabledItems.push(b.value)}return this.listBox.disableItem(b)},enableItem:function(b){var b=this.getVisibleItem(b);if(b){this._disabledItems.splice(this._disabledItems.indexOf(b.value),1)}return this.listBox.enableItem(b)},_findPos:function(c){while(c&&(c.type==\"hidden\"||c.nodeType!=1||a.expr.filters.hidden(c))){c=c.nextSibling}if(c){var b=a(c).coord(true);return[b.left,b.top]}},testOffset:function(h,f,c){var g=h.outerWidth();var j=h.outerHeight();var i=a(window).width()+a(window).scrollLeft();var e=a(window).height()+a(window).scrollTop();if(f.left+g>i){if(g>this.host.width()){var d=this.host.coord().left;var b=g-this.host.width();f.left=d-b+2}}if(f.left<0){f.left=parseInt(this.host.coord().left)+\"px\"}f.top-=Math.min(f.top,(f.top+j>e&&e>j)?Math.abs(j+c+23):0);return f},open:function(){if(!this.isOpened()&&!this.opening){this.showListBox(\"api\")}},close:function(){if(this.isOpened()){this.hideListBox(\"api\")}},_getBodyOffset:function(){var c=0;var b=0;if(a(\"body\").css(\"border-top-width\")!=\"0px\"){c=parseInt(a(\"body\").css(\"border-top-width\"));if(isNaN(c)){c=0}}if(a(\"body\").css(\"border-left-width\")!=\"0px\"){b=parseInt(a(\"body\").css(\"border-left-width\"));if(isNaN(b)){b=0}}return{left:b,top:c}},showListBox:function(m){if(this.listBox.items&&this.listBox.items.length==0){return}if(m==\"search\"&&!this.autoComplete&&!this.remoteAutoComplete){if(this.autoDropDownHeight){this.container.height(this.listBoxContainer.height()+25)}}if(this.autoComplete||this.multiSelect&&!this.remoteAutoComplete){if(m!=\"search\"){this._updateItemsVisibility(\"\");if(this.multiSelect){var r=this.getVisibleItems();for(var x=0;x<r.length;x++){if(!r[x].disabled){this.ensureVisible(x);break}}}}}if(this.remoteAutoComplete){this.listBox.clearSelection()}if(m!=\"search\"){this._oldvalue=this.listBox.selectedValue}a.jqx.aria(this,\"aria-expanded\",true);if(this.dropDownWidth==\"auto\"&&this.width!=null&&this.width.indexOf&&this.width.indexOf(\"%\")!=-1){if(this.listBox.host.width()!=this.host.width()){var u=this.host.width();this.listBoxContainer.jqxListBox({width:u});this.container.width(parseInt(u)+25)}}var q=this;var h=this.listBoxContainer;var z=this.listBox;var e=a(window).scrollTop();var f=a(window).scrollLeft();var o=parseInt(this._findPos(this.host[0])[1])+parseInt(this.host.outerHeight())-1+\"px\";var d,s=parseInt(Math.round(this.host.coord(true).left));d=s+\"px\";var y=a.jqx.mobile.isSafariMobileBrowser()||a.jqx.mobile.isWindowsPhone();this.ishiding=false;var g=a.jqx.utilities.hasTransform(this.host);if(g||(y!=null&&y)){d=a.jqx.mobile.getLeftPos(this.element);o=a.jqx.mobile.getTopPos(this.element)+parseInt(this.host.outerHeight());if(a(\"body\").css(\"border-top-width\")!=\"0px\"){o=parseInt(o)-this._getBodyOffset().top+\"px\"}if(a(\"body\").css(\"border-left-width\")!=\"0px\"){d=parseInt(d)-this._getBodyOffset().left+\"px\"}}this.host.addClass(this.toThemeProperty(\"jqx-combobox-state-selected\"));if(this.dropDownVerticalAlignment==\"top\"){this.dropdownlistArrowIcon.addClass(this.toThemeProperty(\"jqx-icon-arrow-up-selected\"))}else{this.dropdownlistArrowIcon.addClass(this.toThemeProperty(\"jqx-icon-arrow-down-selected\"))}this.dropdownlistArrow.addClass(this.toThemeProperty(\"jqx-combobox-arrow-selected\"));this.dropdownlistArrow.addClass(this.toThemeProperty(\"jqx-fill-state-pressed\"));this.host.addClass(this.toThemeProperty(\"jqx-combobox-state-focus\"));this.host.addClass(this.toThemeProperty(\"jqx-fill-state-focus\"));this.dropdownlistContent.addClass(this.toThemeProperty(\"jqx-combobox-content-focus\"));this.container.css(\"left\",d);this.container.css(\"top\",o);z._arrange();var c=true;var b=false;if(this.dropDownHorizontalAlignment==\"right\"||this.rtl){var k=this.container.outerWidth();var v=Math.abs(k-this.host.width());if(k>this.host.width()){this.container.css(\"left\",25+parseInt(Math.round(s))-v+\"px\")}else{this.container.css(\"left\",25+parseInt(Math.round(s))+v+\"px\")}}if(this.dropDownVerticalAlignment==\"top\"){var w=h.height();b=true;h.css(\"top\",23);h.addClass(this.toThemeProperty(\"jqx-popup-up\"));var n=parseInt(this.host.outerHeight());var l=parseInt(o)-Math.abs(w+n+23);this.container.css(\"top\",l)}if(this.enableBrowserBoundsDetection){var j=this.testOffset(h,{left:parseInt(this.container.css(\"left\")),top:parseInt(o)},parseInt(this.host.outerHeight()));if(parseInt(this.container.css(\"top\"))!=j.top){b=true;h.css(\"top\",23);h.addClass(this.toThemeProperty(\"jqx-popup-up\"))}else{h.css(\"top\",0)}this.container.css(\"top\",j.top);this.container.css(\"top\",j.top);if(parseInt(this.container.css(\"left\"))!=j.left){this.container.css(\"left\",j.left)}}if(this.animationType==\"none\"){this.container.css(\"display\",\"block\");a.data(document.body,\"openedCombojqxListBoxParent\",q);a.data(document.body,\"openedCombojqxListBox\"+q.element.id,h);h.css(\"margin-top\",0);h.css(\"opacity\",1)}else{this.container.css(\"display\",\"block\");var p=h.outerHeight();h.stop();if(this.animationType==\"fade\"){h.css(\"margin-top\",0);h.css(\"opacity\",0);h.animate({opacity:1},this.openDelay,function(){q.isanimating=false;q.opening=false;a.data(document.body,\"openedCombojqxListBoxParent\",q);a.data(document.body,\"openedCombojqxListBox\"+q.element.id,h)})}else{h.css(\"opacity\",1);if(b){h.css(\"margin-top\",p)}else{h.css(\"margin-top\",-p)}this.isanimating=true;this.opening=true;h.animate({\"margin-top\":0},this.openDelay,function(){q.isanimating=false;q.opening=false;a.data(document.body,\"openedCombojqxListBoxParent\",q);a.data(document.body,\"openedCombojqxListBox\"+q.element.id,h)})}}z._renderItems();if(!b){this.host.addClass(this.toThemeProperty(\"jqx-rc-b-expanded\"));h.addClass(this.toThemeProperty(\"jqx-rc-t-expanded\"));this.dropdownlistArrow.addClass(this.toThemeProperty(\"jqx-rc-b-expanded\"))}else{this.host.addClass(this.toThemeProperty(\"jqx-rc-t-expanded\"));h.addClass(this.toThemeProperty(\"jqx-rc-b-expanded\"));this.dropdownlistArrow.addClass(this.toThemeProperty(\"jqx-rc-t-expanded\"))}h.addClass(this.toThemeProperty(\"jqx-fill-state-focus\"));this._raiseEvent(\"0\",z)},doMultiSelect:function(c){if(this.checkboxes){this.multiSelect=false}var e=this;if(!this.multiSelect){var g=e.dropdownlistContent.find(\".jqx-button\");var d=\"mousedown\";if(this.touch){d=a.jqx.mobile.getTouchEventName(\"touchstart\")}this.removeHandler(g,d);this.removeHandler(g.find(\".jqx-icon-close\"),d);g.remove();var f=this.listBox.items;if(!f){return}for(var b=0;b<f.length;b++){f[b].disabled=false}this.listBox._renderItems();this.selectedItems=new Array();this._selectedItems=new Array();return}if(this.validateSelection){var k=this.validateSelection(this.listBox.selectedValue);if(!k){return}}var h=this.selectedItems;if(this.listBox.selectedValue){if(this.selectedItems.indexOf(this.listBox.selectedValue)===-1){var j=this.getItemByValue(this.listBox.selectedValue);if(j&&j.visible){this.selectedItems.push(this.listBox.selectedValue);this._selectedItems.push(j);this._raiseEvent(\"2\",{index:j.index,item:j});this._raiseEvent(\"4\",{index:j.index,item:j})}}this.listBox.selectedIndex=0}var f=this.listBox.items;if(!f){return}for(var b=0;b<f.length;b++){f[b].disabled=false;if(this.selectedItems.indexOf(f[b].value)>=0||this._disabledItems.indexOf(this.value)>=0){f[b].disabled=true}}this.listBox._renderItems();this.searchString=\"\";this.input.val(\"\");var f=\"\";var d=\"mousedown\";var g=e.dropdownlistContent.find(\".jqx-button\");if(this.touch){d=a.jqx.mobile.getTouchEventName(\"touchstart\")}this.removeHandler(g,d);this.removeHandler(g.find(\".jqx-icon-close\"),d);g.remove();e.input.detach();if(this.selectedItems.length>0){e.input.css(\"width\",\"25px\");e.input.attr(\"placeholder\",\"\")}else{e.input.css(\"width\",\"100%\");e.input.attr(\"placeholder\",this.placeHolder)}a.each(this.selectedItems,function(l){var n=e.getItemByValue(this);if(!n||e.remoteAutoComplete){n=e._selectedItems[l]}var p=a('<div style=\"overflow: hidden; float: left;\"></div>');p.addClass(e.toThemeProperty(\"jqx-button\"));p.addClass(e.toThemeProperty(\"jqx-combobox-multi-item\"));p.addClass(e.toThemeProperty(\"jqx-fill-state-normal\"));p.addClass(e.toThemeProperty(\"jqx-rc-all\"));if(n){var q=n.label;if(e.renderSelectedItem){var i=e.renderSelectedItem(l,n);if(i){q=i}}if(p[0].innerHTML==\"\"){p[0].innerHTML='<a data-value=\"'+n.value+'\" style=\"float: left;\" href=\"#\">'+q+\"</a>\"}if(e.rtl){p[0].innerHTML='<a data-value=\"'+n.value+'\" style=\"float: right;\" href=\"#\">'+q+\"</a>\"}var o=!e.rtl?\"right\":\"left\";if(e.showCloseButtons){var m='<div style=\"position: relative; overflow: hidden; float: '+o+'; min-height: 16px; min-width: 18px;\"><div style=\"position: absolute; left: 100%; top: 50%; margin-left: -18px; margin-top: -7px; float: none; width: 16px; height: 16px;\" class=\"'+e.toThemeProperty(\"jqx-icon-close\")+'\"></div></div>';if(a.jqx.browser.msie&&a.jqx.browser.version<8){m='<div style=\"position: relative; overflow: hidden; float: left; min-height: 16px; min-width: 18px;\"><div style=\"position: absolute; left: 100%; top: 50%; margin-left: -18px; margin-top: -7px; float: none; width: 16px; height: 16px;\" class=\"'+e.toThemeProperty(\"jqx-icon-close\")+'\"></div></div>'}if(e.rtl){var m='<div style=\"position: relative; overflow: hidden; float: '+o+'; min-height: 16px; min-width: 18px;\"><div style=\"position: absolute; left: 0px; top: 50%; margin-top: -7px; float: none; width: 16px; height: 16px;\" class=\"'+e.toThemeProperty(\"jqx-icon-close\")+'\"></div></div>';if(a.jqx.browser.msie&&a.jqx.browser.version<8){m='<div style=\"position: relative; overflow: hidden; float: left; min-height: 16px; min-width: 18px;\"><div style=\"position: absolute; left: 0px; top: 50%; margin-top: -7px; float: none; width: 16px; height: 16px;\" class=\"'+e.toThemeProperty(\"jqx-icon-close\")+'\"></div></div>'}}p[0].innerHTML+=m}}else{if(p[0].innerHTML==\"\"){p[0].innerHTML='<a href=\"#\"></a>'}}e.dropdownlistContent.append(p)});e.dropdownlistContent.append(e.input);e.input.val(\"\");if(c!==false){e.input.focus();setTimeout(function(){e.input.focus()},10)}var g=e.dropdownlistContent.find(\".jqx-button\");if(this.touchMode===true){d=\"mousedown\"}this.addHandler(g,d,function(l){if(l.target.className.indexOf(\"jqx-icon-close\")>=0){return true}if(e.disabled){return true}var m=a(l.target).attr(\"data-value\");var i=e.getItemByValue(m);if(i){e.listBox.selectedValue=null;e.listBox.clearSelection()}e.listBox.scrollTo(0,0);e.open();if(l.preventDefault){l.preventDefault()}if(l.stopPropagation){l.stopPropagation()}return false});this.addHandler(g.find(\".jqx-icon-close\"),d,function(p){if(e.disabled){return}var r=a(p.target).parent().parent().find(\"a\").attr(\"data-value\");var o=e.getItemByValue(r);if(o||(e.remoteAutoComplete&&!o&&e.selectedItems.indexOf(r)>=0)){e.listBox.selectedValue=null;var l=e.selectedItems.indexOf(r);var n=o&&o.index>=0?o.index:l;if(l>=0){e.selectedItems.splice(l,1);var q=e._selectedItems[l];if(!q){q=o}e._selectedItems.splice(l,1);e._raiseEvent(\"3\",{index:n,type:\"mouse\",item:q});e._raiseEvent(\"4\",{index:n,type:\"mouse\",item:q});e.doMultiSelect()}else{for(var m=0;m<e.selectedItems.length;m++){var q=e.selectedItems[m];if(q==r){e.selectedItems.splice(m,1);e._selectedItems.splice(m,1);e._raiseEvent(\"3\",{index:n,type:\"mouse\",item:o});e._raiseEvent(\"4\",{index:n,type:\"mouse\",item:o});e.doMultiSelect();break}}}}});e.dropdownlistArrow.height(this.host.height());e._updateInputSelection()},hideListBox:function(h){var f=this.listBoxContainer;var g=this.listBox;var c=this.container;if(this.container[0].style.display==\"none\"){return}a.jqx.aria(this,\"aria-expanded\",false);if(h==\"keyboard\"||h==\"mouse\"){this.listBox.searchString=\"\"}if(h==\"keyboard\"||h==\"mouse\"&&this.multiSelect){this.doMultiSelect()}var d=this;a.data(document.body,\"openedCombojqxListBox\"+this.element.id,null);if(this.animationType==\"none\"){this.opening=false;this.container.css(\"display\",\"none\")}else{if(!this.ishiding){var b=f.outerHeight();f.css(\"margin-top\",0);f.stop();this.opening=false;this.isanimating=true;var e=-b;if(parseInt(this.container.coord().top)<parseInt(this.host.coord().top)){e=b}if(this.animationType==\"fade\"){f.css({opacity:1});f.animate({opacity:0},this.closeDelay,function(){d.isanimating=false;c.css(\"display\",\"none\");d.ishiding=false})}else{f.animate({\"margin-top\":e},this.closeDelay,function(){d.isanimating=false;c.css(\"display\",\"none\");d.ishiding=false})}}}this.ishiding=true;this.host.removeClass(this.toThemeProperty(\"jqx-combobox-state-selected\"));this.dropdownlistArrowIcon.removeClass(this.toThemeProperty(\"jqx-icon-arrow-down-selected\"));this.dropdownlistArrowIcon.removeClass(this.toThemeProperty(\"jqx-icon-arrow-up-selected\"));this.dropdownlistArrow.removeClass(this.toThemeProperty(\"jqx-combobox-arrow-selected\"));this.dropdownlistArrow.removeClass(this.toThemeProperty(\"jqx-fill-state-pressed\"));if(!this.focused){this.host.removeClass(this.toThemeProperty(\"jqx-combobox-state-focus\"));this.host.removeClass(this.toThemeProperty(\"jqx-fill-state-focus\"));this.dropdownlistContent.removeClass(this.toThemeProperty(\"jqx-combobox-content-focus\"))}this.host.removeClass(this.toThemeProperty(\"jqx-rc-b-expanded\"));f.removeClass(this.toThemeProperty(\"jqx-rc-t-expanded\"));this.host.removeClass(this.toThemeProperty(\"jqx-rc-t-expanded\"));f.removeClass(this.toThemeProperty(\"jqx-rc-b-expanded\"));f.removeClass(this.toThemeProperty(\"jqx-fill-state-focus\"));this.dropdownlistArrow.removeClass(this.toThemeProperty(\"jqx-rc-t-expanded\"));this.dropdownlistArrow.removeClass(this.toThemeProperty(\"jqx-rc-b-expanded\"));this._raiseEvent(\"1\",g)},closeOpenedListBox:function(e){var d=e.data.me;var b=a(e.target);var c=e.data.listbox;if(c==null){return true}if(a(e.target).ischildof(e.data.me.host)){return}var f=d;var g=false;a.each(b.parents(),function(){if(this.className!=\"undefined\"){if(this.className.indexOf){if(this.className.indexOf(\"jqx-listbox\")!=-1){g=true;return false}if(this.className.indexOf(\"jqx-combobox\")!=-1){if(d.element.id==this.id){g=true}return false}}}});if(c!=null&&!g){if(d.isOpened()){d.hideListBox(\"api\");d.input.blur()}}return true},loadFromSelect:function(b){this.listBox.loadFromSelect(b);this.clearSelection()},refresh:function(b){this._setSize();this._arrange();if(this.listBox){this.renderSelection()}},resize:function(){this._setSize();this._arrange()},_arrange:function(){var d=parseInt(this.host.width());var j=parseInt(this.host.height());var e=this.arrowSize;var f=this.arrowSize;var h=1;if(!this.showArrow){f=0;e=0;this.dropdownlistArrow.hide();h=0;this.host.css(\"cursor\",\"arrow\")}var b=d-f-1*h;if(b>0){this.dropdownlistContent[0].style.width=b+\"px\"}if(this.rtl){this.dropdownlistContent[0].style.width=(-1+b+\"px\")}this.dropdownlistContent[0].style.height=j+\"px\";this.dropdownlistContent[0].style.left=\"0px\";this.dropdownlistContent[0].style.top=\"0px\";this.dropdownlistArrow[0].style.width=f+1+\"px\";this.dropdownlistArrow[0].style.height=j+\"px\";this.dropdownlistArrow[0].style.left=1+b+\"px\";this.input[0].style.width=\"100%\";if(!this.multiSelect){this.input.height(j)}var c=this.input.height();if(c==0){c=parseInt(this.input.css(\"font-size\"))+3}if(this.input[0].className.indexOf(\"jqx-rc-all\")==-1){this.input.addClass(this.toThemeProperty(\"jqx-rc-all\"))}var i=parseInt(j)/2-parseInt(c)/2;if(i>0){}if(this.rtl){this.dropdownlistArrow.css(\"left\",\"0px\");this.dropdownlistContent.css(\"left\",this.dropdownlistArrow.width());if(a.jqx.browser.msie&&a.jqx.browser.version<=8){this.dropdownlistContent.css(\"left\",1+this.dropdownlistArrow.width())}}if(this.multiSelect){this.input.css(\"float\",\"left\");this.input.width(25);this.dropdownlistWrapper.parent().css(\"height\",\"auto\");this.dropdownlistContent.css(\"height\",\"auto\");this.dropdownlistWrapper.css(\"height\",\"auto\");this.dropdownlistContent.css(\"position\",\"relative\");this.dropdownlistContent.css(\"cursor\",\"text\");this.host.css(\"height\",\"auto\");this.host.css(\"min-height\",this.height);this.dropdownlistContent.css(\"min-height\",this.height);var j=parseInt(this.host.height());this.dropdownlistArrow.height(j);var g=parseInt(this.host.css(\"min-height\"));var i=parseInt(g)/2-parseInt(c)/2;if(i>0){this.input.css(\"margin-top\",i)}}},destroy:function(){if(this.source&&this.source.unbindBindingUpdate){this.source.unbindBindingUpdate(this.element.id);this.source.unbindBindingUpdate(this.listBoxContainer[0].id);this.source.unbindDownloadComplete(this.element.id);this.source.unbindDownloadComplete(this.listBoxContainer[0].id)}a.jqx.utilities.resize(this.host,null,true);this.removeHandler(this.listBoxContainer,\"select\");this.removeHandler(this.listBoxContainer,\"unselect\");this.removeHandler(this.listBoxContainer,\"change\");this.removeHandler(this.listBoxContainer,\"bindingComplete\");this.removeHandler(this.dropdownlistWrapper,\"selectstart\");this.removeHandler(this.dropdownlistWrapper,\"mousedown\");this.removeHandler(this.host,\"keydown\");this.removeHandler(this.listBoxContainer,\"select\");this.removeHandler(this.listBox.content,\"click\");this.removeHandlers();this.removeHandler(this.input,\"keyup.textchange\");this.listBoxContainer.jqxListBox(\"destroy\");this.listBoxContainer.remove();this.host.removeClass();this.removeHandler(a(document),\"mousedown.\"+this.id,this.closeOpenedListBox);if(this.touch){this.removeHandler(a(document),a.jqx.mobile.getTouchEventName(\"touchstart\")+\".\"+this.id)}this.cinput.remove();delete this.cinput;this.dropdownlistArrow.remove();delete this.dropdownlistArrow;this.dropdownlistArrowIcon.remove();delete this.dropdownlistArrowIcon;delete this.dropdownlistWrapper;delete this.listBoxContainer;delete this.input;delete this.dropdownlistContent;delete this.comboStructure;this.container.remove();delete this.listBox;delete this.container;var b=a.data(this.element,\"jqxComboBox\");if(b){delete b.instance}this.host.removeData();this.host.remove();delete this.host;delete this.set;delete this.get;delete this.call;delete this.element},_raiseEvent:function(f,c){if(c==undefined){c={owner:null}}var d=this.events[f];args=c;args.owner=this;var e=new a.Event(d);e.owner=this;if(f==2||f==3||f==4||f==5){e.args=c}var b=this.host.trigger(e);return b},propertiesChangedHandler:function(b,c,e){if(e.width&&e.height&&Object.keys(e).length==2){b._setSize();if(c==\"width\"){if(b.dropDownWidth==\"auto\"){var d=b.host.width();b.listBoxContainer.jqxListBox({width:d});b.container.width(parseInt(d)+25)}}b._arrange();b.close()}},propertyChangedHandler:function(d,f,j,h){if(d.isInitialized==undefined||d.isInitialized==false){return}if(d.batchUpdate&&d.batchUpdate.width&&d.batchUpdate.height&&Object.keys(d.batchUpdate).length==2){return}if(f==\"template\"){d.listBoxContainer.removeClass(d.toThemeProperty(\"jqx-\"+j+\"-item\"));d.listBoxContainer.addClass(d.toThemeProperty(\"jqx-\"+d.template+\"-item\"));d.dropDownListArrow.removeClass(d.toThemeProperty(\"jqx-\"+j+\"\"));d.dropDownListArrow.addClass(d.toThemeProperty(\"jqx-\"+d.template+\"\"))}if(f==\"dropDownVerticalAlignment\"){d.dropdownlistArrowIcon.removeClass(d.toThemeProperty(\"jqx-icon-arrow-up\"));d.dropdownlistArrowIcon.removeClass(d.toThemeProperty(\"jqx-icon-arrow-down\"));if(d.dropDownVerticalAlignment==\"top\"){d.dropdownlistArrowIcon.addClass(d.toThemeProperty(\"jqx-icon-arrow-up\"))}else{d.dropdownlistArrowIcon.addClass(d.toThemeProperty(\"jqx-icon-arrow-down\"))}d.listBoxContainer.css(\"top\",0);d.listBoxContainer.removeClass(this.toThemeProperty(\"jqx-popup-up\"))}if(f==\"autoItemsHeight\"){d.listBoxContainer.jqxListBox({autoItemsHeight:h})}if(f==\"itemHeight\"){d.listBoxContainer.jqxListBox({itemHeight:h})}if(f==\"renderSelectedItem\"){d.renderSelection(\"mouse\")}if(f==\"renderer\"){d.listBoxContainer.jqxListBox({renderer:h})}if(f==\"enableSelection\"){d.listBoxContainer.jqxListBox({enableSelection:h})}if(f==\"enableHover\"){d.listBoxContainer.jqxListBox({enableHover:h})}if(f===\"touchMode\"){d.listBoxContainer.jqxListBox({touchMode:h});d.touch=a.jqx.mobile.isTouchDevice();if(d.touchMode===true){d.touch=true}d._updateHandlers()}if(f==\"multiSelect\"){if(h){d.doMultiSelect(false)}else{var c=d.listBox.items;var b=-1;for(var e=0;e<c.length;e++){c[e].disabled=false;if(d.selectedItems.indexOf(c[e].value)>=0||d._disabledItems.indexOf(d.value)>=0){c[e].disabled=true;b=c[e].index}}d.doMultiSelect(false);d.listBox._renderItems();if(!c){return}d.listBox.selectedIndex=b;d.renderSelection(\"mouse\");d.dropdownlistWrapper.parent().css(\"height\",\"100%\");d.dropdownlistContent.css(\"height\",\"100\");d.dropdownlistWrapper.css(\"height\",\"100\");d.dropdownlistContent.css(\"position\",\"relative\");d.host.css(\"min-height\",null);d._setSize();d._arrange()}}if(f==\"showArrow\"){d._arrange();if(d.multiSelect){d.doMultiSelect(false)}}if(f==\"placeHolder\"){d.input.attr(\"placeholder\",d.placeHolder)}if(f==\"popupZIndex\"){d.listBoxContainer.css({zIndex:d.popupZIndex})}if(f==\"promptText\"){d.placeHolder=h}if(f==\"autoOpen\"){d._updateHandlers()}if(f==\"renderer\"){d.listBox.renderer=d.renderer}if(f==\"itemHeight\"){d.listBox.itemHeight=h}if(f==\"source\"){d.input.val(\"\");d.listBoxContainer.jqxListBox({source:d.source});d.renderSelection(\"mouse\");if(d.source==null){d.clearSelection()}if(d.multiSelect){d.selectedItems=new Array();d._selectedItems=new Array();d.doMultiSelect(false)}}if(f==\"rtl\"){if(h){d.dropdownlistArrow.css(\"float\",\"left\");d.dropdownlistContent.css(\"float\",\"right\")}else{d.dropdownlistArrow.css(\"float\",\"right\");d.dropdownlistContent.css(\"float\",\"left\")}d.listBoxContainer.jqxListBox({rtl:d.rtl})}if(f==\"displayMember\"||f==\"valueMember\"){d.listBoxContainer.jqxListBox({displayMember:d.displayMember,valueMember:d.valueMember});d.renderSelection(\"mouse\")}if(f==\"autoDropDownHeight\"){d.listBoxContainer.jqxListBox({autoHeight:d.autoDropDownHeight});if(d.autoDropDownHeight){d.container.height(d.listBoxContainer.height()+25)}else{d.listBoxContainer.jqxListBox({height:d.dropDownHeight});d.container.height(parseInt(d.dropDownHeight)+25)}d.listBox._arrange();d.listBox._updatescrollbars()}if(f==\"dropDownHeight\"){if(!d.autoDropDownHeight){d.listBoxContainer.jqxListBox({height:d.dropDownHeight});d.container.height(parseInt(d.dropDownHeight)+25)}}if(f==\"dropDownWidth\"||f==\"scrollBarSize\"){var g=d.width;if(d.dropDownWidth!=\"auto\"){g=d.dropDownWidth}d.listBoxContainer.jqxListBox({width:g,scrollBarSize:d.scrollBarSize});d.container.width(parseInt(g)+25)}if(f==\"autoComplete\"){d._resetautocomplete()}if(f==\"checkboxes\"){d.listBoxContainer.jqxListBox({checkboxes:d.checkboxes});if(d.checkboxes){d.input.attr(\"readonly\",true);a.jqx.aria(d,\"aria-readonly\",true)}else{a.jqx.aria(d,\"aria-readonly\",false)}}if(f==\"theme\"&&h!=null){d.listBoxContainer.jqxListBox({theme:h});d.listBoxContainer.addClass(d.toThemeProperty(\"jqx-popup\"));if(a.jqx.browser.msie){d.listBoxContainer.addClass(d.toThemeProperty(\"jqx-noshadow\"))}a.jqx.utilities.setTheme(j,h,d.host)}if(f==\"rtl\"){d.render();d.refresh()}if(f==\"width\"||f==\"height\"){d._setSize();if(f==\"width\"){if(d.dropDownWidth==\"auto\"){var g=d.host.width();d.listBoxContainer.jqxListBox({width:g});d.container.width(parseInt(g)+25)}}d._arrange();d.close()}if(f==\"selectedIndex\"){d.listBox.selectIndex(h);d.renderSelection(\"mouse\")}}})})(jqxBaseFramework);\ndefine(\"jqxcombobox\", [\"jqxlistbox\",\"jqxscrollbar\",\"jqxbuttons\",\"jqxdata\",\"jqxcore\"], function(){});\n\n","define('Common',[],function () {\n    var loadCss = function (url) {\n            $.map(url, function (item, index) {\n                var link = document.createElement(\"link\");\n                link.type = \"text/css\";\n                link.rel = \"stylesheet\";\n                link.href = item.uri;\n                link.id = item.id;\n                if (item.noscript) {\n                    var noscript = document.createElement(\"noscript\");\n                    noscript.appendChild(link);\n                    document.getElementsByTagName(\"head\")[0].appendChild(noscript);\n                } else {\n                    document.getElementsByTagName(\"head\")[0].appendChild(link);\n                }\n                //console.log(link);\n            });\n        },\n        loadScript = function (url) {\n            $.map(url, function (uri, index) {\n                var scriptblock = document.createElement(\"script\");\n                scriptblock.type = \"text/javascript\";\n                scriptblock.src = uri.uri;\n                scriptblock.id = uri.id;\n                document.getElementsByTagName(\"head\")[0].appendChild(scriptblock);\n            });\n        },\n        dateStringToDate = function (dateString) {\n            try {\n                var scheduledDateArray = dateString.split('T')[0].split('-');\n                var scheduledTimeArray = dateString.split('T')[1].split(':');\n                //console.log(scheduledDateArray);\n                //console.log(scheduledTimeArray);\n                var scheduledTime = new Date(\n                    parseInt(scheduledDateArray[0]),\n                    parseInt(scheduledDateArray[1]) - 1,\n                    parseInt(scheduledDateArray[2]),\n                    parseInt(scheduledTimeArray[0]),\n                    parseInt(scheduledTimeArray[1])\n                );\n                return scheduledTime;\n            } catch (e) {\n                return null;\n            }\n        },\n        getDateTimeSTR = function (now) {\n            if (now == null) {\n                return '';\n            } else {\n                year = \"\" + now.getFullYear();\n                month = \"\" + (now.getMonth() + 1);\n                if (month.length == 1) {\n                    month = \"0\" + month;\n                }\n                day = \"\" + now.getDate();\n                if (day.length == 1) {\n                    day = \"0\" + day;\n                }\n                hour = \"\" + now.getHours();\n                if (hour.length == 1) {\n                    hour = \"0\" + hour;\n                }\n                minute = \"\" + now.getMinutes();\n                if (minute.length == 1) {\n                    minute = \"0\" + minute;\n                }\n                second = \"\" + now.getSeconds();\n                if (second.length == 1) {\n                    second = \"0\" + second;\n                }\n                return year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second;\n            }\n        },\n    //取得傳入日期物件的字串格式\n        getDateSTR = function (now, ReplaceStr) {\n            return getDateTimeSTR(now).substr(0, 10).replace('-', ReplaceStr).replace('-', ReplaceStr);\n        },\n        getRequest = function (name) {\n            try {\n                if (name = (new RegExp('[?&]' + encodeURIComponent(name) + '=([^&]*)')).exec(location.search))\n                    return decodeURIComponent(name[1]);\n            } catch (e) {\n                return null;\n            }\n        },\n        getWH = function (unit) {\n            var width = (window.innerWidth > 0) ? window.innerWidth : screen.width;\n            var height = (window.innerHeight > 0) ? window.innerHeight : screen.height;\n            if (window.parent) {\n                width = (document.body.offsetWidth > 0) ? document.body.offsetWidth : width;\n            }\n            return {\n                width: width + unit,\n                height: height + unit\n            };\n        },\n        getParameterByName = function (name) {\n            name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n            var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\"),\n                results = regex.exec(location.search);\n            return results == null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n        },\n        scrollTop = function (top) {\n            var $body = (window.opera) ? (document.compatMode == \"CSS1Compat\" ? $('html') : $('body')) : $('html,body');\n            $body.animate({\n                scrollTop: top\n            }, 2000);\n        },\n        genViewModel = function (base) {\n            var strVM = '';\n            $('[data-bind]').each(function (index, object) {\n                //console.log('{'+$(object).attr('data-bind')+'}');\n                var attrAry = $(object).attr('data-bind')\n                    .replace(/ /ig, '')\n                    .replace('jqxInput:', '')\n                    .replace('jqxDateTimeInput:', '')\n                    .replace('jqxNumberInput:', '')\n                    .replace('jqxCheckBox:', '')\n                    .replace('jqxRadioButton:', '')\n                    .replace('{', '')\n                    .replace('}', '')\n                    .split(',');\n                $.map(attrAry, function (obj, index) {\n                    //console.log(obj);\n                    var attr = obj.split(':');\n                    if (attr[0] == 'value' || attr[0] == 'enable' || attr[0] == 'disabled' || attr[0] == 'click' || attr[0] == 'ddlPromt' || attr[0] == 'checked') {\n                        if (attr[0] == 'disabled') {\n                            if (strVM.indexOf('\"' + attr[1] + '\"') == -1) {\n                                strVM += ',' + attr[0] + ':\"' + attr[1].replace('!', '') + '\"';\n                            }\n                        } else {\n                            if (strVM.indexOf('\"' + attr[1] + '\"') == -1) {\n                                strVM += ',' + attr[0] + ':\"' + attr[1] + '\"';\n                            }\n                        }\n                    }\n                });\n            });\n            strVM = strVM.replace(/\"/ig, '');\n            //console.log(strVM.substr(1));\n            var $Q = {};\n            $.map(strVM.substr(1).split(','), function (obj, index) {\n                var targetVmObject = obj.split(':');\n                //console.log(targetVmObject[0]);\n                switch (targetVmObject[0]) {\n                    case 'value':\n                        if (targetVmObject[1].indexOf('num') > -1) {\n                            $Q[targetVmObject[1]] = ko.observable(\"0\");\n                        } else {\n                            $Q[targetVmObject[1]] = ko.observable(\"\");\n                        }\n                        break;\n                    case 'checked':\n                        $Q[targetVmObject[1]] = ko.observable(false);\n                        break;\n                    case 'enable':\n                        $Q[targetVmObject[1]] = ko.observable(true);\n                        break;\n                    case 'disabled':\n                        $Q[targetVmObject[1]] = ko.observable(false);\n                        break;\n                    case 'click':\n                        $Q[targetVmObject[1]] = function () {\n                            alert('' + targetVmObject[1]) + ''\n                        };\n                        break;\n                    case 'ddlPromt':\n                        $Q[targetVmObject[1]] = ddlPromt;\n                        break;\n                }\n                ;\n            });\n            for (var Q in $Q) {\n                //console.log(Q);\n                base[Q] = $Q[Q];\n            }\n            return $Q;\n        },\n        bindViewModel = function (viewModel, $vm) {\n            for (var vm in $vm) {\n                if (viewModel[vm] == null) {\n                    viewModel[vm] = $vm[vm];\n                }\n            }\n        };\n    return {\n        loadCss: loadCss,\n        loadScript: loadScript,\n        dateStringToDate: dateStringToDate,\n        getDateTimeSTR: getDateTimeSTR,\n        getDateSTR: getDateSTR,\n        getRequest: getRequest,\n        getWH: getWH,\n        getParameterByName: getParameterByName,\n        scrollTop: scrollTop,\n        genViewModel: genViewModel,\n        bindViewModel: bindViewModel\n    };\n\n    //SS.namespace(\"SS.CommonLib\");\n    //SS.CommonLib = CommonLib;\n    //return CommonLib;\n});\n","/**\n * Created by jerryhuang on 15/8/9.\n */\ndefine('Grid.DropDownList',['require'],function (require) {\n    return {\n        renderDropDownloadList: function (invar) {\n            var t = {\n                editor: invar.editor,\n                data: invar.data,\n                displayMember: invar.displayMember,\n                valueMember: invar.valueMember,\n                placeHolder: invar.placeHolder,\n                value: invar.value\n            };\n            //console.log(t);\n            t.editor.jqxDropDownList({\n                source: t.data,\n                displayMember: t.displayMember,\n                valueMember: t.valueMember,\n                autoOpen: true,\n                placeHolder: t.placeHolder\n            });\n\n            var valArray = [];\n            var textArray = [];\n            $.map(t.data.records, function (item, index) {\n                valArray.push($.trim(item[t.valueMember]));\n            });\n            var index = valArray.indexOf($.trim(t.value));\n            t.editor.jqxDropDownList('selectIndex', index);\n            t.editor.jqxDropDownList('ensureVisible', index);\n\n        },\n        showDropDownloadListText: function (invar) {\n            var t = {\n                data: invar.data,\n                displayMember: invar.displayMember,\n                valueMember: invar.valueMember,\n                value: invar.value,\n                element: invar.element\n            };\n            var valArray = [];\n            var textArray = [];\n            $.map(t.data.records, function (item, index) {\n                valArray.push($.trim(item[t.valueMember]));\n                textArray.push($.trim(item[t.displayMember]));\n            });\n            var index = valArray.indexOf($.trim(t.value));\n            t.element.text(textArray[index]);\n        },\n        getDropDownloadListEditorValue: function (invar) {\n            var t = {\n                editor: invar.editor,\n                displayMember: invar.displayMember,\n                valueMember: invar.valueMember,\n                targetField: invar.targetField,\n                callback: invar.callback,\n                row: invar.row\n            };\n            try {\n                var selectItem = t.editor.jqxDropDownList('getSelectedItem').originalItem;\n                //var result = t.vm()[t.row];\n                //result[t.targetField](selectItem[t.valueMember]);\n\n                if (t.callback != null) t.callback(selectItem, t.row);\n                return selectItem[t.valueMember];\n            } catch (ex) {\n                return null;\n            }\n        }\n\n    };\n});\n","define('Check',['require'],function (e) {\n    //-----------------------------------------------------------------------------------------\n    //判斷所輸入的日期是否正確，正確則傳回YYYYMMDD/YYMMDD格式，錯誤傳回空白 \n    //-----------------------------------------------------------------------------------------  \n    var N003 = '日期格式输入错误，请重新输入！',\n        convDate = function (strDATE, Kind) {\n            //Date Check and Convert\n            //strDATE:國曆日期 or 西元日期\n            //Kind: 1.轉成國曆 2.轉成西曆\n            var strDATE1\n            var L\n            var K\n            var Datestring\n\n            if (strDATE.length <= 5) {\n                return \"\";\n            }\n\n            L = strDATE.indexOf(\"/\")\n            K = strDATE.indexOf(\"/\", L + 1)\n\n            if (K > L) {\n                if (L > 4) {\n                    strDATE1 = left(strDATE, L - 1) + \"/\" + right(\"0\" + strDATE.substring(L, K - 2), 2) + \"/\" + right(\"0\" + strDATE.substring(K, strDATE.length), 2);\n                } else {\n                    strDATE1 = (parseInt(left(strDATE, L - 1), 10) + 1911) + \"/\" + right(\"0\" + strDATE.substring(L, K - 2), 2) + \"/\" + right(\"0\" + strDATE.substring(K, strDATE.length), 2);\n                }\n                if (isDate(strDATE1) == false) {\n                    return \"\";\n                }\n            } else {\n                if (strDATE.length == 6) {\n                    strDATE1 = (parseInt(left(strDATE, 2), 10) + 1911) + \"/\" + strDATE.substring(2, 4) + \"/\" + right(strDATE, 2);\n                } else {\n                    if (strDATE.length == 7) {\n                        strDATE1 = parseInt(left(strDATE, 3), 10) + 1911 + \"/\" + strDATE.substring(3, 5) + \"/\" + right(strDATE, 2);\n                    } else {\n                        strDATE1 = left(strDATE, 4) + \"/\" + strDATE.substring(4, 6) + \"/\" + right(strDATE, 2);\n                    }\n                }\n                if (isDate(strDATE1) == false) {\n                    return \"\";\n                }\n            }\n            strDATE1 = strDATE1.replace(\"/\", \"\");\n            strDATE1 = strDATE1.replace(\"/\", \"\");\n            //--Input 國曆日期\n            if (strDATE1.length == 6) {\n                if (Kind == 1) {\n                    Datestring = left(strDATE1, 2) + \"/\" + strDATE1.substring(2, 4) + \"/\" + right(strDATE1, 2)\n                    return Datestring;\n                } else {\n                    Datestring = (parseInt(left(strDATE1, 2), 10) + 1911) + \"/\" + strDATE1.substring(2, 4) + \"/\" + right(strDATE1, 2)\n                    return Datestring;\n                }\n\n            } else {\n                if (strDATE1.length == 7) {\n                    if (Kind == 1) {\n                        Datestring = left(strDATE1, 3) + \"/\" + strDATE1.substring(3, 5) & \"/\" + right(strDATE1, 2);\n                        return Datestring;\n                    } else {\n                        Datestring = (parseInt(left(strDATE1, 3), 10) + 1911) + \"/\" & strDATE1.substring(3, 5) + \"/\" + right(strDATE1, 2);\n                        return Datestring;\n                    }\n                } else {\n                    if (strDATE1.length == 8) {\n                        //--Input 西曆日期\n                        if (Kind == 1) {\n                            Datestring = (parseInt(left(strDATE1, 4), 10) - 1911) + \"/\" + strDATE1.substring(4, 6) + \"/\" + right(strDATE1, 2);\n                            return Datestring;\n                        } else {\n                            Datestring = left(strDATE1, 4) + \"/\" + strDATE1.substring(4, 6) + \"/\" + right(strDATE1, 2);\n                            return Datestring;\n                        }\n                    }\n                }\n            }\n        },\n    //-----------------------------------------------------------------------------------------\n    //判斷所輸入的時間是否正確，正確則傳回HH:MM格式，錯誤傳回空白\n    //-----------------------------------------------------------------------------------------\n        timeCheck = function (strTime) {\n            var strValue;\n            var intMM;\n            var intHH;\n            var str;\n\n            intMM = 0;\n            intHH = 0;\n            strValue = strTime.replace(\":\", \"\");\n\n            for (var i = 1; i <= 4; i++) {\n                if (strValue.indexOf(\" \") > 0) {\n                    strValue = strValue.replace(\" \", \"\");\n                }\n            }\n\n            if (strValue.length != 4 || strValue == \"\") {\n                return \"\";\n            }\n\n            var strHH = left(strValue, 2);\n            var strMM = right(strValue, 2);\n\n            intHH = parseInt(strHH, 10)\n            intMM = parseInt(strMM, 10)\n\n            //***If intHH > 24 Or intMM > 60 Then\n            if (intHH > 23 || intMM > 60 || isNaN(intHH) || isNaN(intMM)) {\n                return \"\";\n            } else {\n                str = right(\"0\" + intHH, 2) + \":\" + right(\"0\" + intMM, 2);\n                return str;\n            }\n        },\n        left = function (str, n) {\n            if (n <= 0)\n                return \"\";\n            else if (n > String(str).length)\n                return str;\n            else\n                return String(str).substring(0, n);\n        },\n        right = function (str, n) {\n            if (n <= 0)\n                return \"\";\n            else if (n > String(str).length)\n                return str;\n            else {\n                var iLen = String(str).length;\n                return String(str).substring(iLen, iLen - n);\n            }\n        },\n        isDate = function (dateStr) {\n            var datePat = /^(\\d{4})(\\/|-)(\\d{1,2})(\\/|-)(\\d{1,2})$/;\n            var matchArray = dateStr.match(datePat); // is the format ok?\n\n            if (matchArray == null) {\n                //alert(\"Please enter date as either mm/dd/yyyy or mm-dd-yyyy.\");\n                return false;\n            }\n\n            month = matchArray[3]; // p@rse date into variables\n            day = matchArray[5];\n            year = matchArray[1];\n\n            if (month < 1 || month > 12) { // check month range\n                //alert(\"Month must be between 1 and 12.\");\n                return false;\n            }\n\n            if (day < 1 || day > 31) {\n                //alert(\"Day must be between 1 and 31.\");\n                return false;\n            }\n\n            if ((month == 4 || month == 6 || month == 9 || month == 11) && day == 31) {\n                //alert(\"Month \"+month+\" doesn`t have 31 days!\")\n                return false;\n            }\n\n            if (month == 2) { // check for february 29th\n                var isleap = (year % 4 == 0 && (year % 100 != 0 || year % 400 == 0));\n                if (day > 29 || (day == 29 && !isleap)) {\n                    alert(\"February \" + year + \" doesn`t have \" + day + \" days!\");\n                    return false;\n                }\n            }\n            return true; // date is valid\n        },\n    //*----------onlyNum----------*//\n        OnlyNumPress = function (e) {\n            if (parseInt(window.event.keyCode) < 48 || parseInt(window.event.keyCode) >= 58) {\n                window.event.keyCode = 0\n                return false;\n            } else {\n                return true;\n            }\n        },\n        OnlyEngNumPress = function (e) {\n            if ((parseInt(window.event.keyCode) > 122 || parseInt(window.event.keyCode) < 48) ||\n                (parseInt(window.event.keyCode) >= 58 && parseInt(window.event.keyCode) < 65) ||\n                (parseInt(window.event.keyCode) >= 91 && parseInt(window.event.keyCode) < 97)\n            ) {\n                window.event.keyCode = 0\n                return false;\n            } else {\n                return true;\n            }\n        },\n        OnlyEngPress = function (e) {\n            if ((parseInt(window.event.keyCode) > 122 || parseInt(window.event.keyCode) < 65) ||\n                (parseInt(window.event.keyCode) >= 91 && parseInt(window.event.keyCode) < 97)\n            ) {\n                window.event.keyCode = 0\n                return false;\n            } else {\n                return true;\n            }\n        },\n        OnlyNumDotPress = function (e) {\n            if (parseInt(window.event.keyCode) == 46) return true;\n            if (parseInt(window.event.keyCode) < 48 || parseInt(window.event.keyCode) >= 58) {\n                window.event.keyCode = 0\n                return false;\n            } else {\n                return true;\n            }\n        },\n    //*----------P=身分證檢測/U=統一編號檢核----------*//\n        PUIdCheck = function (sTyp, CHKVALUE) {\n            sTyp = sTyp.toUpperCase();\n            switch (sTyp) {\n                case \"P\":\n                    if (CHKVALUE.length != 10) {\n                        return false;\n                    }\n                    if (checkPId(CHKVALUE) == true) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                    break;\n                case \"U\":\n                    if (CHKVALUE.length != 8) {\n                        return false;\n                    }\n                    if (checkUId(CHKVALUE) == true) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                    break;\n                default:\n                    return true;\n                    break;\n            }\n        },\n    //*----------身分證檢測----------*//\n        checkPId = function (id) {\n            if (firstlettererr(id) == false) {\n                return false;\n            }\n            if (chfastid(id) == false) {\n                return false;\n            }\n            if (ch12fastid(id) == false) {\n                return false;\n            }\n            if (idmanber(id) == false) {\n                return false;\n            }\n            if (idchackok(id) == false) {\n                return false;\n            }\n            return true;\n        },\n        firstlettererr = function (id) {\n            var fl = id.substr(0, 1);\n            var T = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"; //*24個*//\n            var smp = id.substr(0, 1)\n            if (T.indexOf(smp) == -1) {\n                return false;\n            } else {\n                return true;\n            }\n        },\n        chfastid = function (id) {\n            var c = id.charAt(0);\n            if (c < \"A\" || c > \"Z\") {\n                return false;\n            } else {\n                return true;\n            }\n        },\n        ch12fastid = function (id) {\n            var c = id.charAt(1);\n            if (c != \"1\" && c != \"2\") {\n                return false;\n            } else {\n                return true;\n            }\n        },\n        idmanber = function idmanber(id) { //=====後九碼為數字//\n            var bmp;\n            var d = \"0123456789\";\n            var bab = id.length - 1;\n            for (var i = 1; i <= bab; i++) {\n                bmp = id.substr(i, 1)\n                if (d.indexOf(bmp) == -1) {\n                    return false;\n                }\n            }\n            if (id != \"0\") {\n                return true;\n            } else {\n                return false;\n            }\n        },\n        idchackok = function (id) { //規則//\n            var alph = new Array(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\", \"M\", \"N\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"X\", \"Y\", \"W\", \"Z\", \"I\", \"O\");\n            var num = new Array(\"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\");\n            var n = 0;\n            for (i = 0; i < alph.length; i++)\n                if (id.charAt(0) == alph[i])\n                    n = i;\n            var tot1 = parseFloat(num[n].charAt(0)) + (parseFloat(num[n].charAt(1)) * 9);\n            var tot2 = 0;\n            for (i = 1; i < id.length - 1; i++)\n                tot2 = tot2 + parseFloat(id.charAt(i)) * (9 - i);\n            var tot3 = parseFloat(id.charAt(9));\n            var tot4 = tot1 + tot2 + tot3;\n            if ((tot4 % 10) != 0) {\n                return false;\n            } else {\n                return true;\n            }\n        },\n    //*----------統一編號檢核----------*//\n        checkUId = function (id) {\n            if (id.length != 8) {\n                return false;\n            } else {\n                D = new Array();\n\n                for (var i = 0; i < 8; i++) {\n                    D[i] = id.substr(i, 1);\n                    if (isNaN(D[i]) == true) {\n                        return false;\n                    }\n                    switch (i) {\n                        case 0:\n                            c1 = parseInt(D[i]);\n                            break;\n                        case 1:\n                            a1 = parseInt(parseInt(D[i]) * 2 / 10);\n                            b1 = parseInt(parseInt(D[i]) * 2 % 10);\n                            break;\n                        case 2:\n                            c2 = parseInt(D[i]);\n                            break;\n                        case 3:\n                            a2 = parseInt(parseInt(D[i]) * 2 / 10);\n                            b2 = parseInt(parseInt(D[i]) * 2 % 10);\n                            break;\n                        case 4:\n                            c3 = parseInt(D[i]);\n                            break;\n                        case 5:\n                            a3 = parseInt(parseInt(D[i]) * 2 / 10);\n                            b3 = parseInt(parseInt(D[i]) * 2 % 10);\n                            break;\n                        case 6:\n                            a4 = parseInt(parseInt(D[i]) * 4 / 10);\n                            b4 = parseInt(parseInt(D[i]) * 4 % 10);\n                            break;\n                        case 7:\n                            c4 = parseInt(D[i]);\n                            break;\n                    }\n                }\n\n                r1 = c1 + c2 + c3 + c4 + a1 + a2 + a3 + a4 + b1 + b2 + b3 + b4;\n                if (r1 % 10 == 0) {\n                    return true;\n                } else {\n                    if (D[6] == 7) {\n                        a5 = parseInt((a4 + b4) / 10);\n                        r2 = a1 + b1 + c1 + a2 + b2 + c2 + a3 + b3 + c3 + a5 + c4;\n                        if (r2 % 10 == 0) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                    return false;\n                }\n            }\n        },\n        mid = function (str, start, len) {\n            if (start < 0 || len < 0) {\n                return '';\n            }\n\n            var iEnd, iLen = String(str).length;\n            if (start + len > iLen) {\n                iEnd = iLen;\n            } else\n                iEnd = start + len;\n\n            return String(str).substring(start, iEnd);\n        },\n        inStr = function (strSearch, charSearchFor) {\n            for (i = 0; i < strSearch.length; i++) {\n                if (charSearchFor == mid(strSearch, i, 1)) {\n                    return i;\n                }\n            }\n            return -1;\n        },\n    //--去空白--//\n        trim = function (strValue) {\n            strValue = strValue.replace(/^\\s+|\\s+$/g, '');\n            strValue = strValue.replace(/^\\u3000+|\\u3000+$/g, '');\n            return strValue;\n        },\n    //--email_check--//\n        isEmailFormatValid = function (emailSrc) {\n            var email = emailSrc.replace(/^\\s+|\\s+$/g, '');\n            if (email == '') {\n                return false;\n            }\n\n            var regex = /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\n            if (regex.test(email)) {\n                var str = \" !#$%^&*()+=|\\{[]}:;'<,>?/\";\n                var str2 = '\"';\n                var result = true;\n                for (var j = 0; j < email.length; j++) {\n                    if (str.indexOf(email.charAt(j)) != -1 || str2.indexOf(email.charAt(j)) != -1) {\n                        result = false;\n                        break;\n                    }\n                }\n                if (result == true) {\n                    return true;\n                } else {\n                    return false;\n                }\n            } else {\n                return false;\n            }\n        },\n    //--最大位數限制--//\n        doKeypress = function (control, maxLength) {\n            var element = control\n            if (!isNaN(maxLength)) {\n                maxLength = parseInt(maxLength)\n                var oTR = element.document.selection.createRange()\n                if (oTR.text.length >= 1)\n                    event.returnValue = true\n                else if (element.value.length > maxLength - 1)\n                    event.returnValue = false\n            }\n        },\n        doKeydown = function (control, maxLength) {\n            var element = control\n            setTimeout(function () {\n                maxLength = parseInt(maxLength)\n                if (!isNaN(maxLength)) {\n                    if (element.value.length > maxLength - 1) {\n                        var oTR = window.document.selection.createRange()\n                        oTR.moveStart(\"character\", -1 * (element.value.length - maxLength))\n                        oTR.text = \"\"\n                    }\n                }\n            }, 1)\n        },\n        doBeforePaste = function (control, maxLength) {\n            if (!isNaN(maxLength))\n                event.returnValue = false\n        },\n        doPaste = function (control, maxLength) {\n            var element = control\n            if (!isNaN(maxLength)) {\n                event.returnValue = false\n                maxLength = parseInt(maxLength)\n                var oTR = element.document.selection.createRange()\n                var iInsertLength = maxLength - element.value.length + oTR.text.length\n                var sData = window.clipboardData.getData(\"Text\").substr(0, iInsertLength)\n                oTR.text = sData;\n            }\n        },\n    //get only number part\n        getNumStr = function (str) {\n            var dataString = \"0123456789\";\n            var new_str = \"\";\n            for (var i = 0; i < str.length; i++) {\n                s = str.substring(i, i + 1);\n                if (dataString.indexOf(s) >= 0) {\n                    new_str += s.toString();\n                }\n            }\n            return new_str;\n        },\n    //set only number part\n        setNumStr = function (id) {\n            if (window.document.getElementById(id)) {\n                var dataString = \"0123456789\";\n                var str = window.document.getElementById(id).value;\n                var new_str = \"\";\n                for (var i = 0; i < str.length; i++) {\n                    s = str.substring(i, i + 1);\n                    if (dataString.indexOf(s) >= 0) {\n                        new_str += s.toString();\n                    }\n                }\n                window.document.getElementById(id).value = new_str;\n                setTimeout('if(window.document.getElementById(\"' + id + '\")) window.document.getElementById(\"' + id + '\").select();', 100);\n            }\n        },\n    //date start and end check\n        dateCheckSE = function (S_id, S_nm, E_id, E_nm, SE, Kind)\n            //S_id：clientid\n            //S_nm：\n            //E_id：clientid\n            //E_nm：\n            //SE：which onblur flag\n            //Kind：1 show chinese format 2 show west formaat\n        {\n            if (SE == \"S\") {\n                var S_value = trim(window.document.getElementById(S_id).value);\n                if (S_value == \"\") {\n                    return;\n                }\n                //check start\n                if (convDate(S_value, Kind) == \"\") {\n                    alert(\"<\" + S_nm + \">\\u8F38\\u5165\\u932F\\u8AA4!!\");\n                    window.document.getElementById(S_id).value = \"\";\n                    window.document.getElementById(S_id).focus();\n                    return;\n                } else {\n                    window.document.getElementById(S_id).value = convDate(S_value, Kind);\n                    //check start and end logic\n                    var E_value = trim(window.document.getElementById(E_id).value);\n                    if (E_value == \"\") {\n                        return;\n                    }\n                    var s_num = getNumStr(convDate(getNumStr(window.document.getElementById(S_id).value), Kind));\n                    var e_num = getNumStr(convDate(getNumStr(window.document.getElementById(E_id).value), Kind));\n                    if (s_num > e_num) {\n                        alert(\"<\" + S_nm + \">\\u4E0D\\u53EF\\u5927\\u65BC<\" + E_nm + \">!!\");\n                        window.document.getElementById(S_id).value = \"\";\n                        window.document.getElementById(S_id).focus();\n                        return;\n                    }\n                }\n            }\n            if (SE == \"E\") {\n                var E_value = trim(window.document.getElementById(E_id).value);\n                if (E_value == \"\") {\n                    return;\n                }\n                //check end\n                if (convDate(E_value, Kind) == \"\") {\n                    alert(\"<\" + E_nm + \">\\u8F38\\u5165\\u932F\\u8AA4!!\");\n                    window.document.getElementById(E_id).value = \"\";\n                    window.document.getElementById(E_id).focus();\n                    return;\n                } else {\n                    window.document.getElementById(E_id).value = convDate(E_value, Kind);\n                    //check start and end logic\n                    var S_value = trim(window.document.getElementById(S_id).value);\n                    if (S_value == \"\") {\n                        return;\n                    }\n                    var s_num = getNumStr(convDate(getNumStr(window.document.getElementById(S_id).value), Kind));\n                    var e_num = getNumStr(convDate(getNumStr(window.document.getElementById(E_id).value), Kind));\n                    if (s_num > e_num) {\n                        alert(\"<\" + E_nm + \">\\u4E0D\\u53EF\\u5C0F\\u65BC<\" + S_nm + \">!!\");\n                        window.document.getElementById(E_id).value = \"\";\n                        window.document.getElementById(E_id).focus();\n                        return;\n                    }\n                }\n            }\n        },\n        dateCheckSE_A = function (S_id, S_nm, E_id, E_nm, SE, Kind)\n            //S_id：clientid\n            //S_nm：\n            //E_id：clientid\n            //E_nm：\n            //SE：which onblur flag\n            //Kind：1 show chinese format 2 show west formaat\n        {\n            if (SE == \"S\") {\n                var S_value = trim(window.document.getElementById(S_id).value);\n                if (S_value == \"\") {\n                    return;\n                }\n                //check start\n                if (convDate(S_value, Kind) == \"\") {\n                    alert(\"<\" + S_nm + \">\\u8F38\\u5165\\u932F\\u8AA4!!\");\n                    window.document.getElementById(S_id).value = \"\";\n                    window.document.getElementById(S_id).focus();\n                    return;\n                } else {\n                    window.document.getElementById(S_id).value = convDate(S_value, Kind);\n                    //check start and end logic\n                    var E_value = trim(window.document.getElementById(E_id).value);\n                    if (E_value == \"\") {\n                        window.document.getElementById(E_id).value = window.document.getElementById(S_id).value\n                        return;\n                    }\n                    var s_num = getNumStr(convDate(getNumStr(window.document.getElementById(S_id).value), Kind));\n                    var e_num = getNumStr(convDate(getNumStr(window.document.getElementById(E_id).value), Kind));\n                    if (s_num > e_num) {\n                        alert(\"<\" + S_nm + \">\\u4E0D\\u53EF\\u5927\\u65BC<\" + E_nm + \">!!\");\n                        window.document.getElementById(S_id).value = \"\";\n                        window.document.getElementById(S_id).focus();\n                        return;\n                    }\n                }\n            }\n            if (SE == \"E\") {\n                var E_value = trim(window.document.getElementById(E_id).value);\n                if (E_value == \"\") {\n                    return;\n                }\n                //check end\n                if (convDate(E_value, Kind) == \"\") {\n                    alert(\"<\" + E_nm + \">\\u8F38\\u5165\\u932F\\u8AA4!!\");\n                    window.document.getElementById(E_id).value = \"\";\n                    window.document.getElementById(E_id).focus();\n                    return;\n                } else {\n                    window.document.getElementById(E_id).value = convDate(E_value, Kind);\n                    //check start and end logic\n                    var S_value = trim(window.document.getElementById(S_id).value);\n                    if (S_value == \"\") {\n                        window.document.getElementById(S_id).value = window.document.getElementById(E_id).value\n                        return;\n                    }\n                    var s_num = getNumStr(convDate(getNumStr(window.document.getElementById(S_id).value), Kind));\n                    var e_num = getNumStr(convDate(getNumStr(window.document.getElementById(E_id).value), Kind));\n                    if (s_num > e_num) {\n                        alert(\"<\" + E_nm + \">\\u4E0D\\u53EF\\u5C0F\\u65BC<\" + S_nm + \">!!\");\n                        window.document.getElementById(E_id).value = \"\";\n                        window.document.getElementById(E_id).focus();\n                        return;\n                    }\n                }\n            }\n        },\n        DateAdd = function (interval, number, date) {\n            switch (interval.toLowerCase()) {\n                case \"y\":\n                    return new Date(date.setFullYear(date.getFullYear() + number));\n                case \"m\":\n                    return new Date(date.setMonth(date.getMonth() + number));\n                case \"d\":\n                    return new Date(date.setDate(date.getDate() + number));\n                case \"w\":\n                    return new Date(date.setDate(date.getDate() + 7 * number));\n                case \"h\":\n                    return new Date(date.setHours(date.getHours() + number));\n                case \"n\":\n                    return new Date(date.setMinutes(date.getMinutes() + number));\n                case \"s\":\n                    return new Date(date.setSeconds(date.getSeconds() + number));\n                case \"l\":\n                    return new Date(date.setMilliseconds(date.getMilliseconds() + number));\n            }\n        },\n        DateDiff = function (interval, sdate, edate) {\n            if (arguments.length < 3) {\n                return undefined;\n            }\n            if (sdate.constructor != Date) {\n                return undefined;\n            }\n            if (edate.constructor != Date) {\n                return undefined;\n            }\n            switch (interval.toLowerCase()) {\n                //計算秒差\n                case \"s\":\n                    return parseInt((edate - sdate) / 1000);\n                //計算分差\n                case \"n\":\n                    return parseInt((edate - sdate) / 60000);\n                //計算時差\n                case \"h\":\n                    return parseInt((edate - sdate) / 3600000);\n                //計算日差\n                case \"d\":\n                    return parseInt((edate - sdate) / 86400000);\n                //計算週差\n                case \"w\":\n                    return parseInt((edate - sdate) / (86400000 * 7));\n                //計算月差\n                case \"m\":\n                    return (edate.getMonth() + 1) + ((edate.getFullYear() - sdate.getFullYear()) * 12) - (sdate.getMonth() + 1);\n                //計算年差\n                case \"y\":\n                    return edate.getFullYear() - sdate.getFullYear();\n                //輸入有誤\n                default:\n                    return undefined;\n            }\n        },\n    //date start and end check with condition\n        dateCheckSE_C = function (S_id, S_nm, E_id, E_nm, SE, Kind, Cdt_string, Cdt_MSG)\n            //S_id：clientid\n            //S_nm：\n            //E_id：clientid\n            //E_nm：\n            //SE：which onblur flag\n            //Kind：1 show chinese format 2 show west formaat\n            //Cdt_string：condition string --> string like \"interval|number|date\"\n        {\n            if (SE == \"S\") {\n                var S_value = trim(window.document.getElementById(S_id).value);\n                if (S_value == \"\") {\n                    return;\n                }\n                //check start\n                if (convDate(S_value, Kind) == \"\") {\n                    alert(\"<\" + S_nm + \">\\u8F38\\u5165\\u932F\\u8AA4!!\");\n                    window.document.getElementById(S_id).value = \"\";\n                    window.document.getElementById(S_id).focus();\n                    return;\n                } else {\n                    window.document.getElementById(S_id).value = convDate(S_value, Kind);\n                    //check start and end logic\n                    var E_value = trim(window.document.getElementById(E_id).value);\n                    if (E_value != \"\") {\n                        var s_num = getNumStr(convDate(getNumStr(window.document.getElementById(S_id).value), Kind));\n                        var e_num = getNumStr(convDate(getNumStr(window.document.getElementById(E_id).value), Kind));\n                        if (s_num > e_num) {\n                            alert(\"<\" + S_nm + \">\\u4E0D\\u53EF\\u5927\\u65BC<\" + E_nm + \">!!\");\n                            window.document.getElementById(S_id).value = \"\";\n                            window.document.getElementById(S_id).focus();\n                            return;\n                        }\n                    }\n                }\n\n                if (Cdt_string != \"\") {\n                    var Cdt_ary = Cdt_string.split(\"|\");\n                    var c_dt;\n                    if (Cdt_ary[2] == null || Cdt_ary[2] == \"\") {\n                        c_dt = new Date();\n                    } else {\n                        c_dt = new Date(Cdt_ary[2]);\n                    }\n                    var l_dt = DateAdd(Cdt_ary[0], -1, c_dt);\n                    var txt_dt = new Date(convDate(S_value, \"2\"));\n                    if (DateDiff(\"d\", l_dt, txt_dt) >= 0) {\n                        alert(Cdt_MSG);\n                        window.document.getElementById(S_id).value = \"\";\n                        window.document.getElementById(S_id).focus();\n                        return;\n                    }\n                }\n            }\n            if (SE == \"E\") {\n                var E_value = trim(window.document.getElementById(E_id).value);\n                if (E_value == \"\") {\n                    return;\n                }\n                //check end\n                if (convDate(E_value, Kind) == \"\") {\n                    alert(\"<\" + E_nm + \">\\u8F38\\u5165\\u932F\\u8AA4!!\");\n                    window.document.getElementById(E_id).value = \"\";\n                    window.document.getElementById(E_id).focus();\n                    return;\n                } else {\n                    window.document.getElementById(E_id).value = convDate(E_value, Kind);\n                    //check start and end logic\n                    var S_value = trim(window.document.getElementById(S_id).value);\n                    if (S_value != \"\") {\n                        var s_num = getNumStr(convDate(getNumStr(window.document.getElementById(S_id).value), Kind));\n                        var e_num = getNumStr(convDate(getNumStr(window.document.getElementById(E_id).value), Kind));\n                        if (s_num > e_num) {\n                            alert(\"<\" + E_nm + \">\\u4E0D\\u53EF\\u5C0F\\u65BC<\" + S_nm + \">!!\");\n                            window.document.getElementById(E_id).value = \"\";\n                            window.document.getElementById(E_id).focus();\n                            return;\n                        }\n                    }\n                }\n                if (Cdt_string != \"\") {\n                    var Cdt_ary = Cdt_string.split(\"|\");\n                    var c_dt;\n                    if (Cdt_ary[2] == null || Cdt_ary[2] == \"\") {\n                        c_dt = new Date();\n                    } else {\n                        c_dt = new Date(Cdt_ary[2]);\n                    }\n                    var l_dt = DateAdd(Cdt_ary[0], -1, c_dt);\n                    var txt_dt = new Date(convDate(E_value, \"2\"));\n                    if (DateDiff(\"d\", l_dt, txt_dt) >= 0) {\n                        alert(Cdt_MSG);\n                        window.document.getElementById(E_id).value = \"\";\n                        window.document.getElementById(E_id).focus();\n                        return;\n                    }\n                }\n            }\n        },\n        keyDown = function () {\n            //console.log(this.tagName);\n            //if ($(this)[0].nodeName == '#document' && $(this).prop('tagName') != 'INPUT') {\n            //    return false;\n            //}\n            //event.preventDefault();\n            var keycode = event.keyCode;\n            var keyChar = String.fromCharCode(keycode);\n            if (keycode == 13){\n                event.keyCode = 9;\n                if(!window.attachEvent) event.preventDefault();\n            }\n        },\n    //取得無斜線的日期\n        getDate = function (dt) {\n            dt.value = dt.value.replace('/', '')\n            dt.value = dt.value.replace('/', '')\n            dt.select();\n        },\n    //離開欄位時檢核日期是否正確\n        setDate = function (dt, SDTID, EDTID, SDTNM, EDTNM) {\n            var sdt = document.getElementById(SDTID);\n            var edt = document.getElementById(EDTID);\n            if (dt.value == '') {\n                return;\n            }\n            var ss = dt.value;\n            ss = convDate(ss, 2);\n            if (ss == '') {\n                alert('請輸入正確日期格式！');\n                dt.value = '';\n                dt.focus();\n                return;\n            } else {\n                dt.value = ss;\n            }\n            if (edt.value == '') {\n                //edt.value = sdt.value;\n                edt.value = sdt.value.replace('/', '').replace('/', '');\n                setTimeout('document.getElementById(\"' + edt.id + '\").select()', 300);\n            }\n            if (edt.value != '') {\n                var ss1 = sdt.value;\n                var ss2 = edt.value;\n                ss1 = ss1.replace('/', '')\n                ss1 = ss1.replace('/', '')\n                ss2 = ss2.replace('/', '')\n                ss2 = ss2.replace('/', '')\n\n                if (ss1 > ss2) {\n                    alert('[' + SDTNM + ']不能大於[' + EDTNM + ']！');\n                    dt.value = '';\n                    dt.select();\n                    return;\n                }\n                if (edt.id != dt.id) {\n                    setTimeout('document.getElementById(\"' + edt.id + '\").select()', 300);\n                }\n            } else {\n                dt.value = ss.replace('/', '').replace('/', '');\n                dt.select();\n            }\n        },\n    //離開欄位時檢核日期是否正確\n        setDateVM = function (dtId, sdt, edt, NM) {\n            var SDTNM = NM + '起',\n                EDTNM = NM + '迄';\n            if ($('#' + dtId).jqxDateTimeInput('getDate') == null) {\n                return;\n            }\n            if (edt() == null) {\n                edt(sdt());\n                $('#' + dtId).jqxDateTimeInput('focus');\n            }\n            if (edt() != null) {\n                if (sdt() > edt()) {\n                    alert('[' + SDTNM + ']不能大於[' + EDTNM + ']！');\n                    $('#' + dtId).jqxDateTimeInput('setDate', null);\n                    $('#' + dtId).jqxDateTimeInput('focus');\n                    return;\n                } else {\n                    $('#' + dtId).jqxDateTimeInput('focus');\n                }\n            } else {\n                $('#' + dtId).jqxDateTimeInput('focus');\n            }\n        },\n    //離開欄位時檢核日期是否正確\n        setDateOne = function (dt, SDTID, SDTNM) {\n            var sdt = document.getElementById(SDTID);\n            if (dt.value == '') {\n                return;\n            }\n            var ss = dt.value;\n            ss = convDate(ss, 2);\n            if (ss == '') {\n                alert('請輸入正確日期格式！');\n                dt.value = '';\n                dt.focus();\n                return;\n            } else {\n                dt.value = ss;\n            }\n        },\n    //離開欄位時檢核年月是否正確\n        setMonthOne = function (dt, SDTID, SDTNM) {\n            var sdt = document.getElementById(SDTID);\n            if (dt.value == '') {\n                return;\n            }\n            var ss = dt.value + \"01\";\n            ss = convDate(ss, 2);\n            if (ss == '') {\n                alert('請輸入正確年月格式！');\n                dt.value = '';\n                dt.focus();\n                return;\n            } else {\n                dt.value = left(ss, 7);\n            }\n        },\n    //取得無逗點分隔的數值\n        getNumber = function (nb) {\n            nb.value = nb.value.replace(',', '')\n            nb.value = nb.value.replace(',', '')\n            nb.value = nb.value.replace(',', '')\n            nb.value = nb.value.replace(',', '')\n            nb.value = nb.value.replace(',', '')\n            nb.value = nb.value.replace(',', '')\n            nb.value = nb.value.replace(',', '')\n            nb.value = nb.value.replace(',', '')\n            nb.value = nb.value.replace(',', '')\n            nb.value = nb.value.replace(',', '')\n            nb.select();\n        },\n    //離開欄位時檢核數值格式是否正確\n        setNumber = function (nb, SNBID, ENBID, SNBNM, ENBNM) {\n            var snb = document.getElementById(SNBID);\n            var enb = document.getElementById(ENBID);\n            if (nb.value == '') {\n                return;\n            }\n            var ss = nb.value;\n            ss = getNumStr(ss);\n            if (ss == '') {\n                alert('請輸入正確數值格式！');\n                nb.value = '';\n                nb.focus();\n                return;\n            } else {\n                nb.value = addCommas(ss);\n            }\n            if (enb.value == '') {\n                enb.value = snb.value;\n            }\n            if (enb.value != '') {\n                var ss1 = snb.value;\n                var ss2 = enb.value;\n                ss1 = ss1.replace(',', '')\n                ss1 = ss1.replace(',', '')\n                ss1 = ss1.replace(',', '')\n                ss1 = ss1.replace(',', '')\n                ss1 = ss1.replace(',', '')\n                ss1 = ss1.replace(',', '')\n                ss1 = ss1.replace(',', '')\n                ss1 = ss1.replace(',', '')\n                ss1 = ss1.replace(',', '')\n                ss1 = ss1.replace(',', '')\n\n                ss2 = ss2.replace(',', '')\n                ss2 = ss2.replace(',', '')\n                ss2 = ss2.replace(',', '')\n                ss2 = ss2.replace(',', '')\n                ss2 = ss2.replace(',', '')\n                ss2 = ss2.replace(',', '')\n                ss2 = ss2.replace(',', '')\n                ss2 = ss2.replace(',', '')\n                ss2 = ss2.replace(',', '')\n                ss2 = ss2.replace(',', '')\n\n                if (ss1 > ss2) {\n                    alert('[' + SNBNM + ']不能小於[' + ENBNM + ']！');\n                    nb.value = '';\n                    nb.focus();\n                    return;\n                }\n            } else {\n                nb.value = ss;\n            }\n        },\n    //離開欄位時檢核數值格式是否正確\n        setNumberVM = function (trCd, SNBID, ENBID) {\n            if (SNBID() > ENBID()) {\n                if (trCd == 'S') {\n                    ENBID(SNBID());\n                } else {\n                    SNBID(ENBID());\n                }\n            }\n        },\n    //離開欄位時檢核數值格式是否正確\n        setNumberOne = function (nb, SNBID, SNBNM) {\n            var snb = document.getElementById(SNBID);\n            if (nb.value == '') {\n                return;\n            }\n            var ss = nb.value;\n            ss = getNumStr(ss);\n            if (ss == '') {\n                alert('請輸入正確數值格式！');\n                nb.value = '0';\n                nb.focus();\n                return;\n            } else {\n                nb.value = addCommas(ss);\n            }\n        },\n    //將數值加上千分位逗號\n        addCommas = function (nStr) {\n            nStr += '';\n            x = nStr.split('.');\n            x1 = x[0];\n            x2 = x.length > 1 ? '.' + x[1] : '';\n            var rgx = /(\\d+)(\\d{3})/;\n            while (rgx.test(x1)) {\n                x1 = x1.replace(rgx, '$1' + ',' + '$2');\n            }\n            return x1 + x2;\n        },\n        checkBlank = function (vm, vmId, message) {\n            if (vm() == null || vm() == '' || vm() == '0') {\n                alert('請輸入【' + message + '】!');\n                $('#' + vmId).focus();\n                return true;\n            }\n            return false;\n        },\n        checkValueSE = function (targetId, startVM, endVM, columnName) {\n            var returnObject = {\n                input: '#' + targetId,\n                message: '『' + columnName + '起』不可大於『' + columnName + '迄』',\n                action: 'valuechanged,blur',\n                rule: function (input, commit) {\n                    if (startVM() == '' || endVM() == '' || startVM() == null || endVM() == null) return true;\n                    var result = ((startVM() == '' ? '0' : strToNumber(startVM())) <= (endVM() == '' ? '0' : strToNumber(endVM())));\n                    return result;\n                }\n            }\n            return returnObject;\n        },\n        checkNumSE = function (targetId, startVM, endVM, columnName) {\n            var returnObject = {\n                input: '#' + targetId,\n                message: '『' + columnName + '起』不可大於『' + columnName + '迄』',\n                action: 'valuechanged,blur',\n                rule: function (input, commit) {\n                    var result = ((startVM() == '' ? '0' : strToNumber(startVM())) <= (endVM() == '' ? '0' : strToNumber(endVM())));\n                    return result;\n                }\n            }\n            return returnObject;\n        },\n        checkRequire = function (targetId, vm, columnName) {\n            var returnObject = {\n                input: '#' + targetId,\n                message: '『' + columnName + '』為必要輸入欄位！',\n                action: 'valuechanged, blur',\n                rule: function (input, commit) {\n                    //console.log(vm());\n                    //console.log($('#'+targetId).val());\n                    var result = vm() != null && vm() != '';\n                    return result;\n                }\n            }\n            return returnObject;\n        },\n        checkSysDate = function (targetId, vm, columnName) {\n            var returnObject = {\n                input: '#' + targetId,\n                message: '『' + columnName + '』不可小於系統日！',\n                action: 'valuechanged, blur',\n                rule: function (input, commit) {\n\n                    var result = parseInt((vm() == null || $.trim(vm()) == '') ? 0 : vm().replace(/\\//ig, '')) >= parseInt(moment().format('YYYYMMDD'));\n                    return result;\n                }\n            }\n            return returnObject;\n        },\n        checkNumberRequire = function (targetId, vm, columnName) {\n            var returnObject = {\n                input: '#' + targetId,\n                message: '『' + columnName + '』為必要輸入欄位！',\n                action: 'valuechanged, blur',\n                rule: function (input, commit) {\n                    var result = vm() != null && vm() != 0;\n                    return result;\n                }\n            }\n            return returnObject;\n        },\n        checkDate = function (c_id, Kind) {\n            var _value = trim(window.document.getElementById(c_id).value).replace(/\\//ig, '');\n            if (_value == \"\") {\n                return;\n            }\n\n            if (convDate(_value, Kind) == \"\") {\n                alert(N003);\n                window.document.getElementById(c_id).value = \"\";\n                window.document.getElementById(c_id).focus();\n                return;\n            }\n            else {\n                window.document.getElementById(c_id).value = convDate(_value, Kind);\n            }\n        },\n        /**\n         * Converts number into currency format\n         * @param {number} number   Number that should be converted.\n         * @param {string} [decimalSeparator]    Decimal separator, defaults to '.'.\n         * @param {string} [thousandsSeparator]    Thousands separator, defaults to ','.\n         * @param {int} [nDecimalDigits]    Number of decimal digits, defaults to `2`.\n         * @return {string} Formatted string (e.g. numberToCurrency(12345.67) returns '12,345.67')\n         */\n        numberToCurrency = function (number, decimalSeparator, thousandsSeparator, nDecimalDigits) {\n            //default values\n            decimalSeparator = decimalSeparator || '.';\n            thousandsSeparator = thousandsSeparator || ',';\n            nDecimalDigits = nDecimalDigits || 2;\n            var fixed = number.toFixed(nDecimalDigits), //limit/add decimal digits\n                parts = RegExp('^(-?\\\\d{1,3})((\\\\d{3})+)\\\\.(\\\\d{' + nDecimalDigits + '})$').exec(fixed); //separate begin [$1], middle [$2] and decimal digits [$4]\n\n            if (parts) { //number >= 1000 || number <= -1000\n                return parts[1] + parts[2].replace(/\\d{3}/g, thousandsSeparator + '$&') + decimalSeparator + parts[4];\n            } else {\n                return fixed.replace('.', decimalSeparator);\n            }\n        },\n    //20111104 add by ss benhsu for caculate float number\n    //除法函数，用来得到精确的除法结果\n    //说明：javascript的除法结果会有误差，在两个浮点数相除的时候会比较明显。这个函数返回较为精确的除法结果。\n    //调用：accDiv(arg1,arg2)\n    //返回值：arg1除以arg2的精确结果\n        accDiv = function (arg1, arg2) {\n            var t1 = 0, t2 = 0, r1, r2;\n            try {\n                t1 = arg1.toString().split(\".\")[1].length\n            } catch (e) {\n            }\n            try {\n                t2 = arg2.toString().split(\".\")[1].length\n            } catch (e) {\n            }\n            with (Math) {\n                r1 = Number(arg1.toString().replace(\".\", \"\"))\n                r2 = Number(arg2.toString().replace(\".\", \"\"))\n                return (r1 / r2) * pow(10, t2 - t1);\n            }\n        },\n        strToNumber = function (str) {\n            if (str == null) {\n                return 0;\n            }\n            return Number(str.replace(/[^0-9\\.]+/g, \"\"));\n        },\n        getNumVal = function (val, digit) {\n            return numberToCurrency(strToNumber(val.toString()), null, null, digit);\n        },\n    //get only number part and minus\n        getNumFromStr = function (str) {\n            var dataString = \"0123456789-.\";\n            var new_str = \"\";\n            for (var i = 0; i < str.length; i++) {\n                s = str.substring(i, i + 1);\n                if (dataString.indexOf(s) >= 0) {\n                    new_str += s.toString();\n                }\n            }\n            return parseFloat(new_str);\n        },\n        OnlyNumPressPlus = function (plus) {\n            if (window.event.keyCode < 48 || window.event.keyCode >= 58) {\n                for (idx = 0; idx < plus.length; idx++) {\n                    if (window.event.keyCode == plus[idx]) {\n                        return;\n                    }\n                }\n                window.event.keyCode = 0\n            }\n        };\n    //document.onkeydown = keyDown;\n\n    var CheckLib = {\n        OnlyNumPress: OnlyNumPress,\n        OnlyNumDotPress: OnlyNumDotPress,\n        convDate: convDate,\n        timeCheck: timeCheck,\n        isDate: isDate,\n        left: left,\n        right: right,\n        mid: mid,\n        inStr: inStr,\n        PUIdCheck: PUIdCheck,\n        checkPId: checkPId,\n        checkUId: checkUId,\n        trim: trim,\n        isEmailFormatValid: isEmailFormatValid,\n        doKeypress: doKeypress,\n        doKeydown: doKeypress,\n        doBeforePaste: doKeypress,\n        doPaste: doKeypress,\n        getNumStr: getNumStr,\n        setNumStr: setNumStr,\n        dateCheckSE: dateCheckSE,\n        dateCheckSE_A: dateCheckSE_A,\n        DateAdd: DateAdd,\n        DateDiff: DateDiff,\n        dateCheckSE_C: dateCheckSE_C,\n        getDate: getDate,\n        setDate: setDate,\n        setDateVM: setDateVM,\n        setDateOne: setDateOne,\n        setMonthOne: setMonthOne,\n        getNumber: getNumber,\n        setNumber: setNumber,\n        setNumberVM: setNumberVM,\n        setNumberOne: setNumberOne,\n        addCommas: addCommas,\n        checkBlank: checkBlank,\n        checkValueSE: checkValueSE,\n        checkRequire: checkRequire,\n        checkNumberRequire: checkNumberRequire,\n        checkDate: checkDate,\n        numberToCurrency: numberToCurrency,\n        accDiv: accDiv,\n        strToNumber: strToNumber,\n        checkNumSE: checkNumSE,\n        getNumVal: getNumVal,\n        getNumFromStr: getNumFromStr,\n        OnlyNumPressPlus: OnlyNumPressPlus,\n        checkSysDate: checkSysDate,\n        OnlyEngPress: OnlyEngPress,\n        OnlyEngNumPress: OnlyEngNumPress\n    };\n\n    SS.namespace(\"SS.CheckLib\");\n    SS.CheckLib = CheckLib;\n    return CheckLib;\n});\n","/**\n * Created by jerryhuang on 15/8/10.\n */\ndefine('Grid.Date',['require','Check'],function(require) {\n    var check = require('Check');\n    return {\n        renderDateControl: function(row, cellvalue, editor, cellText, width, height, gridId, dataField, calendar) {\n            var targetId = editor.parent().find('input').attr('id'),\n                $targetId = $('#' + targetId),\n                clickShowFlg = 'N',\n                base = this;\n\n            if (calendar) {\n                var calendarImg = document.createElement('img');\n                calendarImg.id = targetId + 'Img';\n                calendarImg.src = SS.app.baseUrl + 'app/base/components/resources/images/icon-calendar.png';\n                calendarImg.align = 'top';\n\n                setTimeout(function() {\n                    $targetId.after(calendarImg);\n                    $('#' + calendarImg.id).css({\n                        'width': '25px',\n                        'margin-top': '-3px',\n                        'cursor': 'pointer'\n                    }).click(function(e) {\n                        if ($(\"#jqxCalendarGridUIDate\").css('display') != 'none') {\n                            $(\"#jqxCalendarGridUIDate\").css({\n                                display: 'none'\n                            });\n\n                        }\n                        else {\n                            var position = $targetId.offset();\n                            clickShowFlg = 'Y';\n                            $('#jqxCalendarGridUIDate ').jqxCalendar('setDate', $.trim($targetId.val()) == '' ? new Date() : moment($targetId.val(), 'YYYY/MM/DD').toDate());\n                            clickShowFlg = 'N';\n\n                            $(\"#jqxCalendarGridUIDate\").css({\n                                position: 'absolute',\n                                'z-index': 99999999,\n                                top: position.top + 28,\n                                left: position.left,\n                                display: ''\n                            }).attr('targetId', e.currentTarget.id);\n                        }\n                    });\n                }, 0);\n\n                if (!$(\".jqxCalendarGridUIDate\")[0]) {\n                    var calendarDiv = document.createElement('div');\n                    calendarDiv.id = \"jqxCalendarGridUIDate\";\n                    //calendarDiv.class = \"jqxCalendarGridUIDate\";\n                    $('body').append(calendarDiv);\n                    $(\"#jqxCalendarGridUIDate\").css({\n                        width: '220px',\n                        height: '220px',\n                        display: 'none'\n                    }).addClass('jqxCalendarGridUIDate');\n                }\n                if (!$(\"#jqxCalendarGridUIDate\").attr('jqxCalendar')) {\n                    $(\"#jqxCalendarGridUIDate\").jqxCalendar({\n                        width: '220px',\n                        height: '220px',\n                        culture: 'ZH-TW'\n                    });\n\n                    $('#jqxCalendarGridUIDate').on('change viewChange', function(event) {\n                        var date = event.args.date;\n                        var calendarImgId = $('#jqxCalendarGridUIDate').attr('targetId');\n\n                        // $('#' + calendarImg.id).prev().val(moment(date).format('YYYYMMDD'));\n                        $('#' + calendarImgId).prev().val(moment(date).format('YYYYMMDD'));\n\n                        //console.log(clickShowFlg);\n                        if (clickShowFlg == 'N') {\n                            $(\"#jqxCalendarGridUIDate\").css({\n                                display: 'none'\n                            });\n                            // $('#' + calendarImg.id).prev().select();\n                            $('#' + calendarImgId).prev().select();\n                        }\n                        else {\n                            setTimeout(function() {\n                                // $('#' + calendarImg.id).prev().select();\n                                $('#' + calendarImgId).prev().select();\n                            }, 100);\n                        }\n                    });\n                    $(\"#jqxCalendarGridUIDate\").attr('jqxCalendar', true);\n                }\n            }\n\n            $targetId.css({\n                    'ime-mode': 'disabled',\n                    'display': '',\n                    'width': (parseInt($targetId.css('width').replace('px', '')) - (calendar ? 27 : 0)) + 'px'\n                }).attr('maxlength', '8')\n                .on('keypress', check.OnlyNumPress);\n\n            setTimeout(function() {\n                $targetId.css('display', '');\n            }, 10);\n\n            if ($targetId.attr('addEvent') == null) {\n                $targetId.attr('addEvent', '1');\n                $targetId.focus(function() {\n                    $(this).val($(this).val().replace(/\\//g, ''));\n                });\n                $targetId.blur(function() {\n                    if ($(this).val() == '' || $(this).val() == null) return;\n                    var dateStr = $(this).val();\n                    if (dateStr.length == 6) {\n                        dateStr = (parseInt(dateStr.substr(0, 2)) + 1911) + dateStr.substr(2, 4);\n                    }\n                    if (dateStr.length == 7) {\n                        dateStr = (parseInt(dateStr.substr(0, 3)) + 1911) + dateStr.substr(3, 4);\n                    }\n                    var dateString = moment(dateStr, 'YYYYMMDD').format('YYYY/MM/DD');\n                    if (dateString == 'Invalid date') {\n                        alert('日期格式輸入錯誤，請重新輸入！');\n                        $(this).val('');\n                        //$(this).focus()\n                        setTimeout(function() {\n                            $('#' + gridId).jqxGrid('begincelledit', row, dataField);\n                        }, 50);\n                    }\n                    else {\n                        $(this).val(dateString);\n                        $(\"#jqxCalendarGridUIDate\").css({\n                            display: 'none'\n                        });\n                    }\n                });\n            }\n            $targetId.focus();\n        },\n        renderMonthControl: function(row, cellvalue, editor, cellText, width, height, gridId, dataField) {\n            var targetId = editor.parent().find('input').attr('id'),\n                $targetId = $('#' + targetId);\n\n            $targetId.css({\n                    'ime-mode': 'disabled',\n                    'display': ''\n                }).attr('maxlength', '6')\n                .on('keypress', check.OnlyNumPress);\n\n            setTimeout(function() {\n                $targetId.css('display', '');\n            }, 10);\n\n            $targetId.focus(function() {\n                $(this).val($(this).val().replace(/\\//g, ''));\n            });\n            $targetId.change(function() {\n                if ($(this).val() == '' || $(this).val() == null) return;\n                var dateStr = $(this).val() + '01';\n                if (dateStr.length == 6) {\n                    dateStr = (parseInt(dateStr.substr(0, 2)) + 1911) + dateStr.substr(2, 4);\n                }\n                if (dateStr.length == 7) {\n                    dateStr = (parseInt(dateStr.substr(0, 3)) + 1911) + dateStr.substr(3, 4);\n                }\n                var dateString = moment(dateStr, 'YYYYMMDD').format('YYYY/MM/DD');\n                if (dateString == 'Invalid date') {\n                    alert('日期格式輸入錯誤，請重新輸入！');\n                    $(this).val('');\n                    //$(this).focus()\n                    setTimeout(function() {\n                        $('#' + gridId).jqxGrid('begincelledit', row, dataField);\n                    }, 50);\n                }\n                else {\n                    $(this).val(dateString.substr(0, 7));\n                    $(\"#jqxCalendarGridUIDate\").css({\n                        display: 'none'\n                    });\n                }\n            });\n            $targetId.focus();\n        }\n    };\n});\n","/**\n * Created by jerryhuang on 15/8/11.\n */\ndefine('Grid.Numeric',['require','Check'],function (require) {\n    var check = require('Check');\n    return {\n        renderNumericControl: function (target, maxlength, digit, cellvalue, gridId, dataField) {\n            // console.log(check.getNumVal(cellvalue, digit));\n            $('#' + target)\n                .css({\n                    'text-align': 'right',\n                    'ime-mode': 'disabled'\n                })\n                .attr('inputNum', 0)\n                .attr('maxlength', maxlength)\n                .attr('digit', digit)\n                .focus(function () {\n                    var val = check.getNumVal($(this).val().replace(/\\,/ig, ''), $(this).attr('digit'));\n                    $(this).val(val.replace(/\\,/g, ''));\n                    if (window.attachEvent) {\n                        setTimeout(\"$('#\" + $(this).attr('id') + \"').select();\", 100);\n                    }\n                })\n                .keypress(digit > 0 ? check.OnlyNumDotPress : check.OnlyNumPress);\n                // .blur(function () {\n                //     var val = \"0\";\n                //     if ($(this).attr('digit') == '0' || $(this).attr('digit') == null) {\n                //         val = $(this).val().replace(/\\,/g, '').replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\");\n                //         // console.log(val);\n                //     } else {\n                //         val = check.getNumVal($(this).val().replace(/\\,/g, ''), $(this).attr('digit'));\n                //     }\n                //     // console.log(val);\n                //     $(this).val(val);\n                // });\n            //.val(check.getNumVal(cellvalue, digit).replace(/\\,/ig, ''));\n        }\n    }\n});\n","define('Grid',['require','Grid.DropDownList','Grid.Date','Grid.Numeric','Check'],function (require) {\n    var gridDropDownList = require('Grid.DropDownList');\n    var gridDate = require('Grid.Date');\n    var gridNumeric = require('Grid.Numeric');\n    var check = require('Check');\n    var columnAttrib = {\n            serial: {\n                text: '',\n                columntype: 'textbox',\n                width: 60,\n                cellsalign: 'center',\n                align: 'center',\n                cellbeginedit: function (row, datafield, columntype, value) {\n                    return false;\n                },\n                cellsrenderer: this.sysGridRowNo\n            },\n            text: {\n                text: '',\n                columntype: 'textbox',\n                datafield: '',\n                width: 100,\n                cellsalign: 'center',\n                align: 'center',\n                cellbeginedit: function (row, datafield, columntype, value) {\n                    return true;\n                },\n                cellsrenderer: function (row, datafield, value, defaultHtml) {\n                    return defaultHtml;\n                }\n            },\n            button: {\n                text: '',\n                columntype: 'button',\n                width: 80,\n                cellsalign: 'center',\n                align: 'center',\n                cellbeginedit: function (row, datafield, columntype, value) {\n                    return true;\n                },\n                cellsrenderer: function (row, datafield, value, defaultHtml) {\n                    return defaultHtml;\n                },\n                buttonclick: function (index) {\n                    alert('未設定buttonclick事件，目前點選第' + (index + 1) + '列！');\n                }\n            },\n            dropdownlist: {\n                text: '',\n                datafield: '',\n                columntype: 'dropdownlist',\n                width: 100,\n                cellsalign: 'center',\n                align: 'center',\n                cellbeginedit: function (row, datafield, columntype, value) {\n                    return true;\n                },\n                cellsrenderer: function (row, datafield, value, defaultHtml) {\n                    return defaultHtml;\n                },\n                itemData: ko.observableArray([{\n                    text: '選項一',\n                    value: 'item01'\n                }, {\n                    text: '選項二',\n                    value: 'item02'\n                }, {\n                    text: '選項三',\n                    value: 'item03'\n                }, {\n                    text: '選項四',\n                    value: 'item04'\n                }, {\n                    text: '選項五',\n                    value: 'item05'\n                }]),\n                displayMember: 'text',\n                valueMember: 'value',\n                placeHolder: '請選擇',\n                callback: function () {\n                }\n            }\n        },\n        initGridWithArray = function (iniVar) {\n            // 查詢結果Grid\n            var gridSource = {\n                datatype: \"array\",\n                updaterow: function (rowid, rowdata, commit) {\n                    // synchronize with the server - send update command\n                    // call commit with parameter true if the synchronization with the server is successful\n                    // and with parameter false if the synchronization failed.\n                    commit(true);\n                },\n                localdata: iniVar.localdata,\n                datafields: iniVar.datafield\n            };\n            var gridAdapter = new $.jqx.dataAdapter(gridSource, {\n                autoBind: true\n            });\n            //var timestemp;\n            iniVar.targetGrid.jqxGrid({\n                width: iniVar.width,\n                height: iniVar.height,\n                source: gridAdapter,\n                theme: iniVar.theme,\n                selectionmode: iniVar.selectionmode,\n                //selectionmode: 'multiplecellsadvanced',\n                autoheight: iniVar.autoheight,\n                sortable: iniVar.sortable != null ? iniVar.sortable : true,\n                editable: iniVar.editable,\n                //ready: function()\n                //{\n                //    iniVar.targetGrid.jqxGrid('focus');\n                //},\n                editmode: 'click',\n                pageable: iniVar.pageable,\n                localization: iniVar.localization,\n                showstatusbar: iniVar.showstatusbar,\n                showaggregates: iniVar.showaggregates,\n                statusbarheight: iniVar.statusbarheight,\n                enablebrowserselection: true,\n                columnsresize: true,\n                columns: iniVar.columns,\n                handlekeyboardnavigation: function (event) {\n                    //console.log(arguments);\n                    var key = event.charCode ? event.charCode : event.keyCode ? event.keyCode : 0;\n                    if (key == 13) {\n                        //alert('Pressed Enter Key.');\n                        return true;\n                    }\n                    //else if (key == 27) {\n                    //    alert('Pressed Esc Key.');\n                    //    return true;\n                    //}\n                }\n            }).on(\"bindingcomplete\", function (e) {\n                // grid 載入的資料中,含有knockout的data-bind,所以要在載入後重新對該grid做一次applyBindings()\n                // 注意: 僅需對有改變的DOM node做applyBindings,不要(也不可)對root node做\n                //    ko.applyBindings(LC_MVC.hpa020ViewModel, $jgrdResult[0]);\n            }).on(\"cellclick\", function (event) {\n                //console.log((new Date()).getTime().toString());\n                //console.log(event.timeStamp.toString());\n                if ($.jStorage.get(event.timeStamp) == null) {\n                    $.jStorage.set(event.timeStamp, true, {\n                        TTL: 10\n                    });\n                    //timestemp = event.timeStamp;\n                    //console.log(timestemp);\n                    //console.log(event);\n                    //console.log($(this).jqxGrid('editable'));\n                    var thisArgs = args,\n                        base = this;\n\n                    setTimeout(function () {\n                        //console.log($(base).jqxGrid[thisArgs.rowindex + '_' + thisArgs.datafield + '_enabled']);\n                        //console.log(thisArgs);\n                        if ($(base).jqxGrid[thisArgs.rowindex + '_' + thisArgs.datafield + '_enabled'] == true && thisArgs.column.columntype == 'checkbox') {\n                            $(base).jqxGrid('setcellvalue', thisArgs.rowindex, thisArgs.datafield, !(thisArgs.value));\n                            //console.dir(event.args);\n                            var cellvaluechanging = $(base).jqxGrid('getcolumnproperty', event.args.datafield, 'cellvaluechanging');\n                            if (cellvaluechanging) {\n                                cellvaluechanging(\n                                    event.args.rowindex,\n                                    event.args.datafield,\n                                    event.args.column.columntype,\n                                    event.args.value,\n                                    event.args.value == true ? false : true\n                                );\n                            }\n\n                        }\n                    }, 50);\n\n                }\n\n            });\n\n        },\n        getDataFieldsFromColumns = function (columns, data) {\n            var datafields = [];\n            for (var i = 0; i < columns.length; i++) {\n                if (columns[i].dataField != null) {\n                    datafields.push({\n                        name: columns[i].dataField,\n                        type: function () {\n                            switch (columns[i].type) {\n                                case 'number':\n                                    return 'number'\n                                    break;\n                                case 'checkbox':\n                                    return 'bool'\n                                    break;\n                                default:\n                                    return 'string'\n                                    break;\n                            }\n                        }()\n                    });\n                }\n            }\n            if (data != null) {\n                if (data.length > 0) {\n                    for (var key in data[0]) {\n                        var checkArray = $.grep(datafields, function (item, index) {\n                            return (item.name == key);\n                        });\n                        if (checkArray.length == 0) {\n                            datafields.push({\n                                name: key,\n                                type: 'string'\n                            });\n                            //datafields.push({\n                            //    name: key + 'isEnable',\n                            //    type: 'boolean'\n                            //});\n                            //datafields.push({\n                            //    name: key + 'isValid',\n                            //    type: 'boolean'\n                            //});\n                            //datafields.push({\n                            //    name: key + 'isValidMessage',\n                            //    type: 'string'\n                            //});\n                        }\n                    }\n                }\n            }\n            return datafields;\n        },\n        getColumns = function (columns, gridSetting) {\n            var columnOutput = [];\n            for (var i = 0; i < columns.length; i++) {\n                var column = columns[i],\n                    cellbeginedit = column.cellbeginedit == null ? gridSetting.cellbeginedit : column.cellbeginedit,\n                    cellsrenderer = column.cellsrenderer == null ? gridSetting.cellsrenderer : column.cellsrenderer;\n                var cellsRenderer = function (row, datafield, value, defaultHtml) {\n                        var base = this.cellsrenderer;\n                        $('#' + base.gridId).jqxGrid('hidevalidationpopups');\n                        if (base.type == 'numeric') {\n                            try {\n                                $defaultHtml = $(defaultHtml);\n                                if (base.digits == null || base.digits == 0) {\n                                    $defaultHtml.html(value.replace(/\\,/g, '').replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\"));\n                                } else {\n                                    $defaultHtml.html(check.getNumVal(value, (base.digits == null ? 0 : base.digits).toString()));\n                                }\n                                defaultHtml = $defaultHtml[0].outerHTML;\n                            } catch (e) {\n                            }\n                        }\n                        if (base.editable) {\n                            return base.cellsRenderer(row, datafield, value, defaultHtml);\n                        }\n                        else {\n                            var element = $(defaultHtml);\n                            element.css('color', '#999');\n                            return base.cellsRenderer(row, datafield, value, element[0].outerHTML);\n                        }\n                    },\n                    cellBeginEdit = function (row, datafield, columntype, value) {\n                        var base = this.cellbeginedit,\n                            // var base = this.cellBeginEdit,\n                            returnValue = false;\n                        if (base.cellBeginEdit) {\n                            var returnValue = base.cellBeginEdit(row, datafield, columntype, value);\n                        }\n\n                        var jqxGrid = $('#' + base.gridId).jqxGrid;\n                        jqxGrid[row + '_' + datafield + '_enabled'] = (returnValue == false ? returnValue : base.editable);\n\n                        if (!returnValue) {\n                            return returnValue;\n                        }\n                        else {\n                            if (base.editable) {\n                                return true;\n                            }\n                            else {\n                                return false;\n                            }\n                        }\n                    };\n\n\n                cellsRenderer['editable'] = column.editable == null ? gridSetting.editable : column.editable;\n                cellsRenderer['cellsRenderer'] = cellsrenderer;\n                cellsRenderer['gridId'] = gridSetting.id;\n                cellsRenderer['digits'] = column.digits;\n                cellsRenderer['type'] = column.type;\n\n                cellBeginEdit['editable'] = column.editable == null ? gridSetting.editable : column.editable;\n                cellBeginEdit['cellBeginEdit'] = cellbeginedit;\n                cellBeginEdit['gridId'] = gridSetting.id;\n\n                var columnSetting = {};\n                switch (column.type) {\n                    case 'serial':\n                        columnSetting = {\n                            text: column.text,\n                            columntype: 'textbox',\n                            width: column.width,\n                            cellsalign: 'center',\n                            align: 'center',\n                            hidden: column.hidden,\n                            cellbeginedit: columnAttrib['serial']['cellbeginedit'],\n                            cellsrenderer: this.sysGridRowNo,\n                            classname: column.classname,\n                            cellclassname: column.cellclassname,\n                            sortable: column.sortable == null ? gridSetting.sortable : column.sortable,\n                            pinned: column.pinned\n                        };\n                        break;\n\n                    case 'text':\n                        var initeditor = function (row, value, editor, celltext, cellwidth, cellheight) {\n                            var base = this.initeditor;\n                            if (base.maxlength != null) {\n                                $('#' + editor.attr('id')).attr('maxlength', base.maxlength);\n                            }\n                        };\n                        initeditor['maxlength'] = column.maxlength;\n\n                        columnSetting = {\n                            text: column.text,\n                            columntype: 'textbox',\n                            datafield: column.dataField,\n                            width: column.width,\n                            cellsalign: column.cellsalign,\n                            align: column.align,\n                            hidden: column.hidden,\n                            aggregates: column.aggregates,\n                            initeditor: initeditor,\n                            cellbeginedit: cellBeginEdit,\n                            cellsrenderer: cellsRenderer,\n                            cellendedit: column.cellendedit,\n                            cellvaluechanging: column.cellvaluechanging,\n                            aggregatesrenderer: column.aggregatesrenderer,\n                            classname: column.classname,\n                            cellclassname: column.cellclassname,\n                            sortable: column.sortable == null ? gridSetting.sortable : column.sortable,\n                            pinned: column.pinned\n                        };\n                        break;\n\n                    case 'button':\n                        var cellsrenderer = function (row, datafield, value, defaultHtml) {\n                            var element = $(defaultHtml);\n                            var base = this.cellsrenderer;\n                            var cellsrenderer = base.cellsrenderer;\n                            if (base.editable) {\n                                //return column.text;\n                                if (base.buttonText == 'value' || base.buttonText == '*' || base.buttonText == '-') {\n                                    return value;\n                                }\n                                else {\n                                    return base.buttonText;\n                                }\n                            }\n                            else {\n                                element.css({\n                                    'color': '#999',\n                                    'border': '1px solid',\n                                    'border-radius': '3px',\n                                    'margin': '2px'\n                                });\n                                element.html(base.buttonText);\n                                return cellsrenderer(row, datafield, value, element[0].outerHTML);\n                            }\n                            //return cellsrenderer(row, datafield, value, element[0].outerHTML);\n                        };\n                        cellsrenderer['editable'] = column.editable == null ? gridSetting.editable : column.editable;\n                        cellsrenderer['cellsrenderer'] = column.cellsrenderer == null ? gridSetting.cellsrenderer : column.cellsrenderer;\n                        cellsrenderer['text'] = column.text;\n                        cellsrenderer['buttonText'] = column.buttonText == null ? column.text : column.buttonText;\n\n                        columnSetting = {\n                            text: column.text,\n                            columntype: cellsrenderer['editable'] ? 'button' : 'textbox',\n                            width: column.width,\n                            cellsalign: column.cellsalign,\n                            align: column.align,\n                            hidden: column.hidden,\n                            cellbeginedit: cellBeginEdit,\n                            cellsrenderer: cellsrenderer,\n                            buttonclick: column.buttonclick,\n                            cellendedit: column.cellendedit,\n                            cellvaluechanging: column.cellvaluechanging,\n                            classname: column.classname,\n                            cellclassname: column.cellclassname,\n                            sortable: column.sortable == null ? gridSetting.sortable : column.sortable,\n                            pinned: column.pinned\n                        };\n                        break;\n\n                    case 'dropdownlist':\n                        var dataAdapter = new $.jqx.dataAdapter({\n                            datatype: \"observablearray\",\n                            localdata: column.itemData,\n                            datafields: [{\n                                name: column.valueMember,\n                                type: 'string'\n                            }, {\n                                name: column.displayMember,\n                                type: 'string'\n                            }],\n                            id: column.valueMember\n                        }, {\n                            autoBind: true\n                        });\n\n                        var initeditor = function (row, value, editor, celltext, cellwidth, cellheight) {\n                            // console.log('initeditor');\n                            var base = this.initeditor;\n                            gridDropDownList.renderDropDownloadList({\n                                editor: editor, //转送编辑器\n                                value: value, //转送资料\n                                data: base.dataAdapter, //资料\n                                displayMember: base.displayMember, //显示栏位\n                                valueMember: base.valueMember, //值栏位\n                                placeHolder: base.placeHolder //下拉提示字眼\n                            });\n                        };\n                        initeditor['displayMember'] = column.displayMember;\n                        initeditor['valueMember'] = column.valueMember;\n                        initeditor['placeHolder'] = column.placeHolder;\n                        initeditor['dataAdapter'] = dataAdapter;\n\n                        var cellsrenderer = function (row, datafield, value, defaultHtml) {\n                            var element = $(defaultHtml);\n                            var base = this.cellsrenderer;\n                            var cellsrenderer = base.cellsrenderer;\n                            $('#' + base.gridId).jqxGrid('hidevalidationpopups');\n                            gridDropDownList.showDropDownloadListText({\n                                data: base.dataAdapter, //资料\n                                value: value, //转送资料\n                                displayMember: base.displayMember, //显示栏位\n                                valueMember: base.valueMember, //值栏位\n                                element: element\n                            });\n                            if (base.editable) {\n                                return cellsrenderer(row, datafield, value, element[0].outerHTML);\n                            }\n                            else {\n                                element.css('color', '#999');\n                                return cellsrenderer(row, datafield, value, element[0].outerHTML);\n                            }\n                        };\n                        cellsrenderer['gridId'] = gridSetting.id;\n                        cellsrenderer['displayMember'] = column.displayMember;\n                        cellsrenderer['valueMember'] = column.valueMember;\n                        cellsrenderer['dataAdapter'] = dataAdapter;\n                        cellsrenderer['dataField'] = column.dataField;\n                        cellsrenderer['editable'] = column.editable == null ? gridSetting.editable : column.editable;\n                        cellsrenderer['cellsrenderer'] = column.cellsrenderer == null ? gridSetting.cellsrenderer : column.cellsrenderer;\n\n                        var geteditorvalue = function (row, cellvalue, editor) {\n                            var base = this.geteditorvalue;\n                            return gridDropDownList.getDropDownloadListEditorValue({\n                                editor: editor, //转送编辑器\n                                row: row, //转送列号\n                                displayMember: base.displayMember, //显示栏位\n                                valueMember: base.valueMember, //值栏位\n                                targetField: base.dataField, //目标栏位\n                                callback: base.callback //Callback Function\n\n                            });\n                        };\n                        geteditorvalue['displayMember'] = column.displayMember;\n                        geteditorvalue['valueMember'] = column.valueMember;\n                        geteditorvalue['dataField'] = column.dataField;\n                        geteditorvalue['callback'] = column.callback;\n\n                        columnSetting = {\n                            text: column.text,\n                            columntype: 'dropdownlist',\n                            datafield: columns[i].dataField,\n                            width: column.width,\n                            cellsalign: column.cellsalign,\n                            align: column.align,\n                            hidden: column.hidden,\n                            aggregates: column.aggregates,\n                            initeditor: initeditor,\n                            geteditorvalue: geteditorvalue,\n                            cellbeginedit: cellBeginEdit,\n                            cellsrenderer: cellsrenderer,\n                            cellendedit: column.cellendedit,\n                            cellvaluechanging: column.cellvaluechanging,\n                            aggregatesrenderer: column.aggregatesrenderer,\n                            classname: column.classname,\n                            cellclassname: column.cellclassname,\n                            sortable: column.sortable == null ? gridSetting.sortable : column.sortable,\n                            pinned: column.pinned\n                        };\n                        break;\n\n                    case 'date':\n                        var initeditor = function (row, value, editor, celltext, cellwidth, cellheight) {\n                            var base = this.initeditor;\n                            gridDate.renderDateControl(\n                                row, cellvalue, editor, celltext, cellwidth, cellheight, base.gridId, base.dataField, base.calendar\n                            );\n                            //$('#' + editor.attr('id')).val(cellvalue.replace(/\\//ig, ''));\n                        };\n                        initeditor['calendar'] = column.calendar == null ? true : column.calendar;\n                        initeditor['dataField'] = column.dataField;\n                        initeditor['gridId'] = gridSetting.id;\n                        var geteditorvalue = function (row, cellvalue, editor) {\n                            var dateStr = $('#' + editor.attr('id')).val();\n                            if (dateStr.length == 6) {\n                                dateStr = (parseInt(dateStr.substr(0, 2)) + 1911) + dateStr.substr(2, 4);\n                            }\n                            if (dateStr.length == 7) {\n                                dateStr = (parseInt(dateStr.substr(0, 3)) + 1911) + dateStr.substr(3, 4);\n                            }\n                            var returnValue = moment(dateStr, 'YYYYMMDD').format('YYYY/MM/DD');\n                            if (returnValue == 'Invalid date' || $.trim($('#' + editor.attr('id')).val()) == '') {\n                                return '';\n                            }\n                            else {\n                                return returnValue;\n                            }\n                        };\n                        var cellendedit = function (row, datafield, columntype, oldvalue, newvalue) {\n                            var base = this.cellendedit;\n                            $(\"#jqxCalendarGridUIDate\").css({\n                                display: 'none'\n                            });\n\n                            if (base.cellendedit) {\n                                //console.log('cellendedit');\n                                base.cellendedit(row, datafield, columntype, oldvalue, newvalue);\n                                return true;\n                                // return base.cellendedit(row, datafield, columntype, oldvalue, newvalue);\n                            }\n                            else {\n                                return true;\n                            }\n                        };\n                        cellendedit['cellendedit'] = column.cellendedit;\n\n                        columnSetting = {\n                            text: column.text,\n                            columntype: 'textbox',\n                            dataField: column.dataField,\n                            width: column.width,\n                            hidden: column.hidden,\n                            cellsalign: column.cellsalign,\n                            align: column.align,\n                            aggregates: column.aggregates,\n                            initeditor: initeditor,\n                            geteditorvalue: geteditorvalue,\n                            cellbeginedit: cellBeginEdit,\n                            cellendedit: cellendedit,\n                            cellsrenderer: cellsRenderer,\n                            cellvaluechanging: column.cellvaluechanging,\n                            aggregatesrenderer: column.aggregatesrenderer,\n                            classname: column.classname,\n                            cellclassname: column.cellclassname,\n                            sortable: column.sortable == null ? gridSetting.sortable : column.sortable,\n                            pinned: column.pinned\n                        };\n                        break;\n\n                    case 'month':\n                        var initeditor = function (row, value, editor, celltext, cellwidth, cellheight) {\n                            var base = this.initeditor;\n                            gridDate.renderMonthControl(\n                                row, cellvalue, editor, celltext, cellwidth, cellheight, base.gridId, base.dataField\n                            );\n                        };\n                        initeditor['dataField'] = column.dataField;\n                        initeditor['gridId'] = gridSetting.id;\n                        var geteditorvalue = function (row, cellvalue, editor) {\n                            var dateStr = $('#' + editor.attr('id')).val() + '01';\n                            if (dateStr.length == 6) {\n                                dateStr = (parseInt(dateStr.substr(0, 2)) + 1911) + dateStr.substr(2, 4);\n                            }\n                            if (dateStr.length == 7) {\n                                dateStr = (parseInt(dateStr.substr(0, 3)) + 1911) + dateStr.substr(3, 4);\n                            }\n\n                            var returnValue = moment(dateStr, 'YYYYMMDD').format('YYYY/MM/DD');\n                            if (returnValue == 'Invalid date' || $.trim($('#' + editor.attr('id')).val()) == '') {\n                                return '';\n                            }\n                            else {\n                                return returnValue.substr(0, 7);\n                            }\n                        };\n                        columnSetting = {\n                            text: column.text,\n                            columntype: 'textbox',\n                            dataField: column.dataField,\n                            width: column.width,\n                            hidden: column.hidden,\n                            cellsalign: column.cellsalign,\n                            align: column.align,\n                            aggregates: column.aggregates,\n                            initeditor: initeditor,\n                            geteditorvalue: geteditorvalue,\n                            cellbeginedit: cellBeginEdit,\n                            cellsrenderer: cellsRenderer,\n                            cellendedit: column.cellendedit,\n                            cellvaluechanging: column.cellvaluechanging,\n                            aggregatesrenderer: column.aggregatesrenderer,\n                            classname: column.classname,\n                            cellclassname: column.cellclassname,\n                            sortable: column.sortable == null ? gridSetting.sortable : column.sortable,\n                            pinned: column.pinned\n                        };\n                        break;\n\n                    case 'numeric':\n                        var initeditor = function (row, value, editor, celltext, cellwidth, cellheight) {\n                            var base = this.initeditor;\n                            gridNumeric.renderNumericControl(\n                                editor.attr('id'), base.maxlength, base.digits, value, base.gridId, base.dataField\n                            );\n                        };\n                        initeditor['dataField'] = column.dataField;\n                        initeditor['gridId'] = gridSetting.id;\n                        initeditor['digits'] = column.digits;\n                        initeditor['maxlength'] = column.maxlength;\n\n                        var geteditorvalue = function (row, cellvalue, editor) {\n                            var base = this.geteditorvalue;\n                            var returnValue = $('#' + editor.attr('id')).val();\n                            // console.log(returnValue);\n                            // console.log(check.getNumVal(returnValue, base.digit));\n                            // return returnValue.replace(/\\,/g, '');\n                            if (base.digits == null || base.digits == 0) {\n                                returnValue = returnValue.replace(/\\,/g, '').replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\");\n                            } else {\n                                returnValue = check.getNumVal(returnValue, base.digits);\n                            }\n                            console.log(returnValue);\n                            return returnValue;\n                        };\n                        geteditorvalue['digits'] = column.digits;\n\n\n                        var cellendedit = function (row, datafield, columntype, oldvalue, newvalue) {\n                            // console.log(newvalue);\n                            var base = this.cellendedit,\n                                val = newvalue.toString();\n                            // if (base.digit == '0' || base.digit == null) {\n                            //     val = val.replace(/\\,/g, '').replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\");\n                            //     // console.log(val);\n                            // } else {\n                            //     val = check.getNumVal(val.replace(/\\,/g, ''), base.digit);\n                            // }\n                            setTimeout(function () {\n                                // console.log(val);\n                                $(\"#\" + base.gridId).jqxGrid('setcellvalue', row, datafield, val.replace(/\\,/g, ''));\n                            }, 50);\n                            if (base.cellendedit) {\n                                base.cellendedit(row, datafield, columntype, oldvalue, val);\n                            }\n                            return true;\n                        };\n                        cellendedit['gridId'] = gridSetting.id;\n                        cellendedit['digits'] = column.digits;\n                        cellendedit['cellendedit'] = column.cellendedit;\n\n                        columnSetting = {\n                            text: column.text,\n                            columntype: 'textbox',\n                            datafield: column.dataField,\n                            width: column.width,\n                            cellsalign: column.cellsalign,\n                            align: column.align,\n                            hidden: column.hidden,\n                            aggregates: column.aggregates,\n                            cellsformat: (column.digits == null || column.digits == 0 ? 'n' : 'd' + column.digits),\n                            initeditor: initeditor,\n                            geteditorvalue: geteditorvalue,\n                            cellbeginedit: cellBeginEdit,\n                            cellsrenderer: cellsRenderer,\n                            // cellendedit: column.cellendedit,\n                            cellendedit: cellendedit,\n                            cellvaluechanging: column.cellvaluechanging,\n                            aggregatesrenderer: column.aggregatesrenderer,\n                            classname: column.classname,\n                            cellclassname: column.cellclassname,\n                            sortable: column.sortable == null ? gridSetting.sortable : column.sortable,\n                            pinned: column.pinned\n                        };\n                        break;\n\n                    case 'checkbox':\n                        var renderer = function () {\n                            var base = this.renderer;\n                            return '<div style=\"margin-left: 10px; margin-top: 5px;\">' + base.text + '</div>';\n                        };\n                        renderer['text'] = column.text;\n                        var rendered = function (element) {\n                            var base = this.rendered;\n                            $(element).jqxCheckBox({\n                                theme: base.theme,\n                                width: base.width,\n                                height: 16,\n                                animationShowDelay: 0,\n                                animationHideDelay: 0\n                            });\n\n                            $(element).bind('change', function (event) {\n                                var checked = event.args.checked,\n                                    $grid = $(\"#\" + base.gridId);\n                                if (checked == null) return;\n                                var rowscount = $grid.jqxGrid('getdatainformation').rowscount;\n                                $grid.jqxGrid('beginupdate');\n                                for (var i = 0; i < rowscount; i++) {\n                                    if (base.cellBeginEdit) {\n                                        var returnValue = base.cellBeginEdit(i, base.dataField, 'checkbox', $grid.jqxGrid('getcellvalue', i, base.dataField));\n                                    }\n                                    //console.log(returnValue == true ? base.editable : returnValue);\n                                    if ((returnValue == true ? base.editable : returnValue) == true) {\n                                        $grid.jqxGrid('setcellvalue', i, base.dataField, event.args.checked);\n                                    }\n                                }\n                                $grid.jqxGrid('endupdate');\n                                if (base.allCheckCallback) {\n                                    base.allCheckCallback(checked);\n                                }\n                            });\n                        };\n                        rendered['dataField'] = column.dataField;\n                        rendered['width'] = column.width;\n                        rendered['gridId'] = gridSetting.id;\n                        rendered['theme'] = gridSetting.theme;\n                        rendered['editable'] = column.editable == null ? gridSetting.editable : column.editable;\n                        rendered['cellBeginEdit'] = cellbeginedit;\n                        rendered['allCheckCallback'] = column.allCheckCallback;\n\n\n                        columnSetting = {\n                            text: column.text,\n                            columntype: 'checkbox',\n                            datafield: column.dataField,\n                            width: column.width,\n                            hidden: column.hidden,\n                            cellsalign: column.cellsalign,\n                            align: column.align,\n                            aggregates: column.aggregates,\n                            renderer: column.editable == false || gridSetting.editable == false || (column.allCheck == null ? true : column.allCheck) == false ? null : renderer,\n                            rendered: column.editable == false || gridSetting.editable == false || (column.allCheck == null ? true : column.allCheck) == false ? null : rendered,\n                            cellbeginedit: cellBeginEdit,\n                            cellendedit: column.cellendedit,\n                            cellvaluechanging: column.cellvaluechanging,\n                            aggregatesrenderer: column.aggregatesrenderer,\n                            classname: column.classname,\n                            cellclassname: column.cellclassname,\n                            sortable: column.sortable == null ? gridSetting.sortable : column.sortable,\n                            pinned: column.pinned\n                        };\n                        break;\n\n                    case 'time':\n                        var createeditor = function (row, column, editor) {\n                            var base = this.createeditor;\n                            editor.jqxDateTimeInput({\n                                formatString: base.cellsformat,\n                                showTimeButton: false,\n                                showCalendarButton: false\n                            });\n                        };\n                        createeditor['cellsformat'] = column.cellsformat;\n\n\n                        columnSetting = {\n                            text: column.text,\n                            columntype: 'datetimeinput',\n                            datafield: column.dataField,\n                            width: column.width,\n                            hidden: column.hidden,\n                            cellsalign: column.cellsalign,\n                            align: column.align,\n                            aggregates: column.aggregates,\n                            cellbeginedit: cellBeginEdit,\n                            cellsrenderer: cellsRenderer,\n                            cellendedit: column.cellendedit,\n                            cellvaluechanging: column.cellvaluechanging,\n                            aggregatesrenderer: column.aggregatesrenderer,\n                            classname: column.classname,\n                            cellclassname: column.cellclassname,\n                            sortable: column.sortable == null ? gridSetting.sortable : column.sortable,\n                            pinned: column.pinned,\n                            createeditor: createeditor\n                        };\n                        break;\n\n                    default:\n                        columnSetting = {\n                            text: column.text,\n                            columntype: column.type,\n                            datafield: column.dataField,\n                            width: column.width,\n                            hidden: column.hidden,\n                            cellsalign: column.cellsalign,\n                            align: column.align,\n                            aggregates: column.aggregates,\n                            cellbeginedit: cellBeginEdit,\n                            cellsrenderer: cellsRenderer,\n                            cellendedit: column.cellendedit,\n                            cellvaluechanging: column.cellvaluechanging,\n                            aggregatesrenderer: column.aggregatesrenderer,\n                            classname: column.classname,\n                            cellclassname: column.cellclassname,\n                            sortable: column.sortable == null ? gridSetting.sortable : column.sortable,\n                            pinned: column.pinned\n                        };\n                        break;\n                }\n                // console.log('columnSetting');\n                // console.log(columnSetting);\n                for (var key in column) {\n                    if (key != 'type') {\n                        if (columnSetting[key.toString().toLowerCase()] == null) {\n                            columnSetting[key.toString().toLowerCase()] = column[key];\n                        }\n                    }\n                }\n                columnOutput.push(columnSetting);\n            }\n            return columnOutput;\n        },\n        sysGridRowNo = function (row, column, value) {\n            return '<div style=\"text-align: center; margin-top: 5px;\">' + (1 + row) + '</div>';\n        },\n        //Grid功能==>將資料庫日期顯示為yyyy/MM/dd\n        sysGridConvDate = function (row, column, value) {\n            return '<div style=\"text-align: center; margin-top: 5px;\">' + value.substring(0, 10).replace(\"-\", \"/\").replace(\"-\", \"/\").replace(\"1900/01/01\", \"\") + '</div>';\n        },\n        getGridSelectedData = function ($jgrdResult) {\n            var getselectedrowindexes = $jgrdResult.jqxGrid('getselectedrowindexes');\n            //console.log(getselectedrowindexes);\n            var selectedData = [];\n            if (getselectedrowindexes.length > 0) {\n                $.map(getselectedrowindexes, function (item, index) {\n                    selectedData.push($jgrdResult.jqxGrid('getrowdata', item));\n                });\n            }\n            return selectedData;\n        },\n        setGridActionWithJSON = function (i) {\n            // console.log(i);\n            var t = {\n                //addEnable: i.addEnable || true,\n                //delEnable: i.delEnable || true,\n                addEnable: i.addEnable,\n                delEnable: i.delEnable,\n                addCallback: i.addCallback,\n                delCallback: i.delCallback,\n                targetId: i.targetId,\n                defaultData: i.defaultData,\n                enterAddColumn: i.enterAddColumn,\n                focusColumn: i.focusColumn,\n                procdColumn: i.procdColumn,\n                enable: i.enable || true,\n                columns: i.columns\n            };\n            var $grid = $('#' + t.targetId);\n\n            if (t.targetId == null || t.targetId == '') console.log('GridLib.setGridAction:缺少『targetId』的定義');\n            if (t.addEnable) {\n                if (t.defaultData == null) console.log('GridLib.setGridAction:缺少『defaultData』的定義');\n                if (t.enterAddColumn == null) console.log('GridLib.setGridAction:缺少『enterAddColumn』的定義');\n                if (t.focusColumn == null) console.log('GridLib.setGridAction:缺少『focusColumn』的定義');\n                //if (t.gridVm == null) console.log('GridLib.setGridAction:缺少『gridVm』的定義');\n            }\n            if (t.addEnable) {\n                if (t.procdColumn == null) console.log('GridLib.setGridAction:缺少『procdColumn』的定義');\n            }\n\n            var NowColumn = '',\n                rowindex;\n            $grid.on('cellbeginedit', function (event) {\n                NowColumn = event.args.datafield;\n                rowindex = event.args.rowindex;\n            }).on('cellselect', function (event) {\n                NowColumn = event.args.datafield;\n                rowindex = event.args.rowindex;\n            }).on('cellendedit', function (event) {\n                //NowColumn = '';\n            }).on('keydown', function (event) {\n                if (rowindex == null) rowindex = $(this).jqxGrid('getselectedrowindex');\n\n                //Enter to Tab 功能處理\n                var focusColumns = $.grep(i.columns, function (item, index) {\n                    return (item.dataField != null);\n                });\n\n                if (event.which == \"13\" && ((t.enterAddColumn != '' && rowindex != $grid.jqxGrid('getrows').length) || t.enterAddColumn == '' || t.enterAddColumn == null)) {\n                    var row = rowindex;\n                    var focusColumn = NowColumn;\n                    for (var x = 0; x < focusColumns.length; x++) {\n                        if (focusColumns[x].dataField == NowColumn) {\n                            if (focusColumns[x + 1] && NowColumn != t.enterAddColumn) {\n                                var nextColumn = '';\n                                for (var y = x + 1; y < focusColumns.length; y++) {\n                                    if (focusColumns[y]) {\n                                        if (focusColumns[y].editable) {\n                                            nextColumn = focusColumns[y].dataField;\n                                            break;\n                                        }\n                                    }\n                                }\n                                if ($.trim(nextColumn) != '') {\n                                    focusColumn = nextColumn;\n                                }\n                                else {\n                                    if (row + 1 < $grid.jqxGrid('getrows').length) {\n                                        row++;\n                                        focusColumn = focusColumns[0].dataField;\n                                    }\n                                }\n                            }\n                            else {\n                                if (row + 1 < $grid.jqxGrid('getrows').length) {\n                                    row++;\n                                    //focusColumn = focusColumns[0].dataField;\n                                    focusColumn = t.focusColumn\n                                }\n                            }\n                        }\n                    }\n                    setTimeout(function () {\n                        if (focusColumn == '0') {\n                            focusColumn = focusColumns[0].dataField;\n                        }\n                        $grid.jqxGrid('endcelledit', rowindex, NowColumn, false);\n                        $grid.jqxGrid('unselectcell', rowindex, NowColumn);\n                        $grid.jqxGrid('begincelledit', row, focusColumn);\n                        $grid.jqxGrid('selectcell', row, focusColumn);\n                        $grid.jqxGrid('selectrow', row);\n                    }, 50);\n                }\n                if (\n                    (event.which == \"119\" || //F8增加一列\n                    (event.which == \"40\") || //最後一列，向下增加一列\n                    (event.which == \"13\" && NowColumn == t.enterAddColumn && rowindex == $grid.jqxGrid('getrows').length - 1)) //最後一個欄位按下Enter增加一列\n                ) {\n                    //最後一列，向下增加一列\n                    if (event.which == \"40\" && rowindex != $grid.jqxGrid('getrows').length - 1) {\n                        focusColumn = NowColumn;\n                        $grid.jqxGrid('endcelledit', rowindex, NowColumn, false);\n                        $grid.jqxGrid('begincelledit', rowindex + 1, focusColumn);\n                        return;\n                    }\n                    if (t.enable != null) {\n                        if (t.enable == false) {\n                            return;\n                        }\n                    }\n                    if (t.addEnable) {\n                        $grid.jqxGrid('endcelledit', rowindex, NowColumn, false);\n                        var defaultData = $.extend({}, t.defaultData);\n\n                        $grid.jqxGrid('addrow', null, defaultData);\n\n                        var addSelectRow = $grid.jqxGrid('getrows').length - 1;\n                        if (t.addCallback) {\n                            t.addCallback(defaultData, addSelectRow);\n                        }\n\n                        if (t.focusColumn != null) {\n                            //自動Focus在新增的資料\n                            setTimeout(function () {\n                                $grid.jqxGrid('unselectcell', rowindex, NowColumn);\n                                $grid.jqxGrid('begincelledit', addSelectRow, t.focusColumn);\n                                $grid.jqxGrid('selectcell', addSelectRow, t.focusColumn);\n                                $grid.jqxGrid('selectrow', addSelectRow);\n                            }, 5);\n                        }\n                    }\n                }\n                else if (\n                    event.which == \"120\" || //F9刪除一列\n                    event.which == \"38\" //向上刪除一列\n                //(event.which == \"38\" && rowindex == $grid.jqxGrid('getrows').length-1)                      //最後一列向上刪除一列\n                ) {\n                    //最後一列向上刪除一列\n                    if (event.which == \"38\" && rowindex != $grid.jqxGrid('getrows').length - 1) {\n                        focusColumn = NowColumn;\n                        $grid.jqxGrid('endcelledit', rowindex, NowColumn, false);\n                        $grid.jqxGrid('begincelledit', rowindex == 0 ? rowindex : rowindex - 1, focusColumn);\n                        //$grid.jqxGrid('selectcell', rowindex == 0 ? rowindex : rowindex - 1, focusColumn);\n                        return;\n                    }\n                    if (t.enable != null) {\n                        if (t.enable == false) {\n                            return;\n                        }\n                    }\n                    if (t.delEnable) {\n\n                        var totalRow = $grid.jqxGrid('getboundrows').length;\n                        if (rowindex == -1) {\n                            //rowindex = t.gridVm().length - 1;\n                            rowindex = totalRow - 1;\n                        }\n                        //if (t.gridVm()[rowindex][t.procdColumn]() == 'A') {\n                        if (t.procdColumn == null || t.procdColumn == '' || $grid.jqxGrid('getcellvalue', rowindex, t.procdColumn) == 'A' || $grid.jqxGrid('getcellvalue', rowindex, t.procdColumn) == '' || $grid.jqxGrid('getcellvalue', rowindex, t.procdColumn) == '0') {\n                            var deleteData = $grid.jqxGrid('getrowdata', rowindex);\n                            var commit = $grid.jqxGrid('deleterow', $grid.jqxGrid('getrowid', rowindex));\n                            if (t.delCallback) {\n                                t.delCallback(deleteData, rowindex);\n                            }\n                            setTimeout(function () {\n                                //$grid.jqxGrid('unselectcell', rowindex, NowColumn);\n                                if (rowindex > 0) {\n                                    //if (rowindex = totalRow - 1) {\n                                    //$grid.jqxGrid('selectrow', $grid.jqxGrid('getboundrows').length - 1);\n                                    //$grid.jqxGrid('begincelledit', $grid.jqxGrid('getrows').length - 1, focusColumns[0].dataField);\n                                    // console.log($grid.jqxGrid('getboundrows').length);\n                                    $grid.jqxGrid('begincelledit', $grid.jqxGrid('getboundrows').length - 1, NowColumn);\n                                    $grid.jqxGrid('selectcell', $grid.jqxGrid('getboundrows').length - 1, NowColumn);\n                                    //} else {\n                                    //$grid.jqxGrid('selectrow', rowindex);\n                                    //$grid.jqxGrid('begincelledit', rowindex, focusColumns[0].dataField);\n                                    //$grid.jqxGrid('selectcell', rowindex, focusColumns[0].dataField);\n                                    //}\n                                }\n                            }, 10);\n                        }\n                        else {\n                            //console.log(rowindex);\n                            focusColumn = NowColumn;\n                            var nowIndex = rowindex;\n                            $grid.jqxGrid('endcelledit', rowindex, NowColumn, false);\n                            //$grid.jqxGrid('uselectcell', rowindex, focusColumn);\n                            $grid.jqxGrid('begincelledit', nowIndex == 0 ? nowIndex : nowIndex - 1, focusColumn);\n                            //console.log(nowIndex == 0 ? nowIndex : nowIndex - 1);\n                            //setTimeout(function () {\n                            //$grid.jqxGrid('selectcell', nowIndex == 0 ? nowIndex : nowIndex - 1, focusColumn);\n                            //}, 500);\n                        }\n                    }\n                }\n            });\n        };\n\n    var Grid = {\n        sysGridRowNo: sysGridRowNo,\n        sysGridConvDate: sysGridConvDate,\n        getGridSelectedData: getGridSelectedData,\n        getDataFieldsFromColumns: getDataFieldsFromColumns,\n        initGridWithArray: initGridWithArray,\n        getColumns: getColumns,\n        setGridActionWithJSON: setGridActionWithJSON\n    };\n\n    SS.namespace(\"SS.Grid\");\n    SS.Grid = Grid;\n\n    return Grid;\n});\n","/**\n * Created by jerryhuang on 15/7/29.\n */\ndefine('base/components/viewmodels/UIJqxComboBox',['require','jqxcombobox','Common','Grid'],function (require) {\n    require('jqxcombobox');\n\n    var common = require('Common'),\n        grid = require('Grid'),\n        setData = function (data, base) {\n            $jqxComboBox = $('#' + base.id());\n            if ($jqxComboBox[0]) {\n                var source =\n                {\n                    datatype: \"json\",\n                    datafields: grid.getDataFieldsFromColumns([], data),\n                    localdata: data\n                };\n\n                // create data adapter.\n                var dataAdapter = new $.jqx.dataAdapter(source);\n                $jqxComboBox.jqxComboBox({\n                    //selectedIndex: 0,\n                    source: dataAdapter,\n                    displayMember: base.optionsText,\n                    valueMember: base.optionsValue,\n                    width: base.boxWidth(),\n                    height: base.boxHeight()\n                });\n            } else {\n                setTimeout(function () {\n                    setData(data, base);\n                }, 50);\n            }\n        };\n    if (!$('#jqxBaseCss')[0]) {\n        common.loadCss([\n            {\n                id: 'jqxBaseCss',\n                uri: SS.app.baseUrl + 'app/base/resources/scripts/jqwidgets/styles/jqx.base.css'\n            }\n        ]);\n    }\n    var selectedItem, $jqxComboBox;\n    var initial = function (data, base) {\n        $jqxComboBox = $('#' + base.id());\n        if ($jqxComboBox[0]) {\n            setData(data, base);\n            $jqxComboBox.on('select', function (event) {\n                var args = event.args;\n                if (args != undefined) {\n                    var item = event.args.item;\n                    if (item != null) {\n                        selectedItem = item;\n                    }\n                }\n            });\n            $('input', $jqxComboBox).on('blur', function (event) {\n                $jqxComboBox = $('#' + base.id());\n                $jqxComboBox.jqxComboBox({selectedIndex: $jqxComboBox.jqxComboBox('getSelectedIndex')});\n                base($jqxComboBox.val());\n                $jqxComboBox.jqxComboBox(\"close\");\n            });\n            $jqxComboBox.on('close', function (event) {\n                base.event.close(event);\n            });\n            $jqxComboBox.on('bindingComplete', function (event) {\n                base.event.bindingComplete(event);\n            });\n            $jqxComboBox.on('checkChange', function (event) {\n                base.event.checkChange(event);\n            });\n            $jqxComboBox.on('change', function (event) {\n                base.event.change(event);\n            });\n            $jqxComboBox.on('open', function (event) {\n                base.event.open(event);\n            });\n            $jqxComboBox.on('select', function (event) {\n                base.event.select(event);\n            });\n            $jqxComboBox.on('unselect', function (event) {\n                base.event.unselect(event);\n            });\n            $jqxComboBox.val(base());\n\n        } else {\n            setTimeout(function () {\n                initial(data, base)\n            }, 50);\n        }\n    };\n    return {\n        init: function (id, params) {\n            var base = params.viewModel;\n            base.options.subscribe(function (newData) {\n                $jqxComboBox = $('#' + base.id());\n                if ($jqxComboBox[0]) {\n                    setData(newData, base);\n                }\n            });\n            base.subscribe(function (newData) {\n                $jqxComboBox = $('#' + base.id());\n                if ($jqxComboBox[0]) {\n                    $jqxComboBox.val(newData);\n                }\n            });\n            base.isEnable.subscribe(function (newData) {\n                $jqxComboBox = $('#' + base.id());\n                if ($jqxComboBox[0]) {\n                    $jqxComboBox.jqxComboBox({disabled: !newData});\n                }\n            });\n            initial(base.options(), base);\n        }\n    };\n});\n"]}