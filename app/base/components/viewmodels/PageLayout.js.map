{"version":3,"file":"PageLayout.js","sources":["PageLayout.js"],"names":[],"mappings":"AAIA,OAAA,yCAAA,WAAA,WAGA,OACA,KAAA,SAAA,GACA,GAAA,GAAA,CACA,GAAA,iBAAA,IAAA,GAAA,KAAA,WACA,GACA,IAAA,GAAA,EAAA,MAAA,KAAA,YACA,GAAA,wBAAA,MACA,KAAA,cAAA,IAAA,EAAA,IAAA,GACA,KAAA,gBAAA,EAAA,IAAA,GACA,MAAA,WAEA,EAAA,aAAA,MAAA,SAAA,wBACA,EAAA,aAAA,MAAA,YAAA,uBACA,EAAA,aAAA,MAAA,SAAA,uBAEA,EAAA,aAAA,MAAA,YAAA,qBACA,EAAA,aAAA,MAAA,SAAA,0BAIA,EAAA,YAAA,MAAA,KAAA,KAAA,EAAA,IAAA,IACA,gBAAA,GAAA,GAAA,GAAA,gBAAA,KACA,EAAA,YAAA,MAAA,SAAA,MAEA,EAAA,mCAAA,MAAA,SAAA,yBACA,EAAA,mCAAA,MAAA,YAAA,uBACA,EAAA,mCAAA,MAAA,SAAA,yBAKA,EAAA,kBAAA,IAAA,UAAA,GAGA,IAAA,GAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,CACA,GAAA,UAAA,MAAA,WACA,WAAA,WACA,EAAA,gCAAA,KAAA,WACA,GAAA,MAAA,EAAA,MAAA,KAAA,MACA,OAAA,EAAA,MAAA,KAAA,YACA,IAAA,SACA,IACA,EAAA,MAAA,KAAA,KAAA,EAAA,IAAA,EAAA,MAAA,KAAA,WAAA,IAAA,EACA,MACA,KAAA,QACA,IACA,EAAA,MAAA,KAAA,KAAA,EAAA,IAAA,EAAA,MAAA,KAAA,WAAA,IAAA,EACA,MACA,KAAA,WACA,IACA,EAAA,MAAA,KAAA,KAAA,EAAA,IAAA,EAAA,MAAA,KAAA,WAAA,IAAA,EACA,MACA,KAAA,SACA,IACA,EAAA,MAAA,KAAA,KAAA,EAAA,IAAA,EAAA,MAAA,KAAA,WAAA,IAAA,EACA,MACA,SACA,IACA,EAAA,MAAA,KAAA,KAAA,EAAA,IAAA,EAAA,MAAA,KAAA,WAAA,IAAA,MAOA,EAAA,GAAA,oBAAA,WACA,MAAA,MAAA,KAAA,WAIA,IAAA,GAFA,GAAA,EAAA,MAAA,QAAA,mBAAA,KAAA,yBACA,EAAA,EAAA,MAAA,MACA,EAAA,EAAA,EAAA,EAAA,SACA,EAAA,GAAA,EAAA,GAAA,KAAA,aAAA,UAAA,EAAA,GAAA,EAAA,GAAA,KAAA,SADA,IAEA,GAKA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,OACA,GAAA,OAAA,YACA,WAAA,WACA,EAAA,GAAA,EAAA,GAAA,QACA,EAAA,GAAA,EAAA,GAAA,SACA,SACA,CAGA,EAAA,GAAA,EAAA,GAAA,OACA,IAAA,GAAA,EAAA,SAGA,GAAA,KAAA,OAAA,EAAA,MAAA,KAAA,OACA,EAAA,GAAA,GAAA,QAIA,OAAA,KAGA,EAAA,yBAAA,QAAA,WACA,GAAA,IAAA,OAAA,MAAA,SAAA,GAAA,OAAA,MAAA,QAAA,CACA,GAAA,YAAA,EAAA,MAAA,SAAA,KAAA,QAAA,MAEA,OADA,GAAA,MAAA,uBACA,MAIA","sourcesContent":["/**\n * Created by jerryhuang on 15/7/29.\n */\n\ndefine('base/components/viewmodels/PageLayout',['require'],function (require) {\n\n\n    return {\n        init: function (id) {\n            var renderCount = 0;\n            $('.panel-section', '.' + id).each(function () {\n                renderCount++;\n                var sectionId = $(this).attr('sectionId');\n                $('.panel-heading button', this)\n                    .attr('data-target', '#' + sectionId + '-' + id)\n                    .attr('aria-controls', sectionId + '-' + id)\n                    .click(function(){\n                        //console.log($('.glyphicon', this));\n                        if($('.glyphicon', this).hasClass('glyphicon-menu-down')){\n                            $('.glyphicon', this).removeClass('glyphicon-menu-down');\n                            $('.glyphicon', this).addClass('glyphicon-menu-up');\n                        }else{\n                            $('.glyphicon', this).removeClass('glyphicon-menu-up');\n                            $('.glyphicon', this).addClass('glyphicon-menu-down');\n                        }\n                    });\n\n                $('.collapse', this).attr('id', sectionId + '-' + id);\n                if (sectionId == 'querySection' || (renderCount == 1 && sectionId != 'querySection')) {\n                    $('.collapse', this).addClass('in');\n\n                    if($('.panel-heading button .glyphicon', this).hasClass('glyphicon-menu-down')){\n                        $('.panel-heading button .glyphicon', this).removeClass('glyphicon-menu-down');\n                        $('.panel-heading button .glyphicon', this).addClass('glyphicon-menu-up');\n                    }\n                }\n\n            });\n            $('.panel-section').css('display', '');\n\n\n            var buttonCount = 0,\n                inputCount = 0,\n                textareaCount = 0,\n                selectCount = 0,\n                baseCount = 0;\n            $(document).ready(function () {\n                setTimeout(function () {\n                    $('button,input,textarea,select').each(function () {\n                        if ($(this).attr('id') == null) {\n                            switch ($(this).prop(\"tagName\")) {\n                                case 'BUTTON':\n                                    buttonCount++;\n                                    $(this).attr('id', id + '-' + $(this).prop(\"tagName\") + '-' + buttonCount);\n                                    break;\n                                case 'INPUT':\n                                    inputCount++;\n                                    $(this).attr('id', id + '-' + $(this).prop(\"tagName\") + '-' + inputCount);\n                                    break;\n                                case 'TEXTAREA':\n                                    textareaCount++;\n                                    $(this).attr('id', id + '-' + $(this).prop(\"tagName\") + '-' + textareaCount);\n                                    break;\n                                case 'SELECT':\n                                    selectCount++;\n                                    $(this).attr('id', id + '-' + $(this).prop(\"tagName\") + '-' + selectCount);\n                                    break;\n                                default:\n                                    baseCount++;\n                                    $(this).attr('id', id + '-' + $(this).prop(\"tagName\") + '-' + baseCount);\n                                    break;\n                            }\n                        }\n                    });\n\n\n                    $.fn.focusNextInputField = function () {\n                        return this.each(function () {\n                            //var fields = $(this).parents('form:eq(0),body').find('button,input,textarea,select');\n                            var fields = $(this).parents('form:eq(0),body').find('input,textarea,select');\n                            var index = fields.index(this);\n                            for (var i = index; i < fields.length; i++) {\n                                if (fields.eq(index + 1).attr('disabled') || fields.eq(index + 1).attr('type') == 'hidden') {\n                                    index++;\n                                } else {\n                                    break;\n                                }\n                            }\n                            if (index > -1 && ( index + 1 ) < fields.length) {\n                                if (window.attachEvent) {\n                                    setTimeout(function () {\n                                        fields.eq(index + 1).focus();\n                                        fields.eq(index + 1).focus();\n                                    }, 100);\n                                } else {\n                                    //console.log('focus');\n                                    //console.log(fields.eq(index + 1));\n                                    fields.eq(index + 1).focus();\n                                    var $focused = $(':focus');\n                                    //console.log($focused.attr('id'));\n                                    //console.log($(this).attr('id'));\n                                    if($focused.attr('id')==$(this).attr('id')){\n                                        fields.eq(0).focus();\n                                    }\n                                }\n                            }\n                            return false;\n                        });\n                    };\n                    $('input, select, button').keydown(function () {\n                        if (window.event.keyCode == 13 || window.event.keyCode == 9) {\n                            if ($(this).parent().attr('role') == 'gridcell') return;\n                            $(this).focusNextInputField();\n                            return false;\n                        }\n                    });\n\n                }, 3000);\n            });\n        }\n    };\n});\n"]}